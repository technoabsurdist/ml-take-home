{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given n rectangles. The corners of rectangles have integer coordinates and their edges are parallel to the Ox and Oy axes. The rectangles may touch each other, but they do not overlap (that is, there are no points that belong to the interior of more than one rectangle). \n\nYour task is to determine if the rectangles form a square. In other words, determine if the set of points inside or on the border of at least one rectangle is precisely equal to the set of points inside or on the border of some square.\n\nThe first line contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u20095). Next n lines contain four integers each, describing a single rectangle: x1, y1, x2, y2 (0\u2009\u2264\u2009x1\u2009<\u2009x2\u2009\u2264\u200931400,\u20090\u2009\u2264\u2009y1\u2009<\u2009y2\u2009\u2264\u200931400) \u2014 x1 and x2 are x-coordinates of the left and right edges of the rectangle, and y1 and y2 are y-coordinates of the bottom and top edges of the rectangle. \n\nNo two rectangles overlap (that is, there are no points that belong to the interior of more than one rectangle).\n\nIn a single line print \"YES\", if the given rectangles form a square, or \"NO\" otherwise."}, {"role": "assistant", "content": "implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Daniel is organizing a football tournament. He has come up with the following tournament format: \n\nFor example, if there were 20 teams initially, they would begin by playing 10 games. So, 10 teams would be eliminated, and the remaining 10 would play 5 games. Then the remaining 5 teams would play 10 games in a round robin tournament. In total there would be 10+5+10=25 games.\n\nDaniel has already booked the stadium for n games. Help him to determine how many teams he should invite so that the tournament needs exactly n games. You should print all possible numbers of teams that will yield exactly n games in ascending order, or -1 if there are no such numbers.\n\nThe first line contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u20091018), the number of games that should be played.\n\nPlease, do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use the cin, cout streams or the %I64d specifier.\n\nPrint all possible numbers of invited teams in ascending order, one per line. If exactly n games cannot be played, output one number: -1."}, {"role": "assistant", "content": "binarysearch, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Piegirl has found a monster and a book about monsters and pies. When she is reading the book, she found out that there are n types of monsters, each with an ID between 1 and n. If you feed a pie to a monster, the monster will split into some number of monsters (possibly zero), and at least one colorful diamond. Monsters may be able to split in multiple ways.\n\nAt the begining Piegirl has exactly one monster. She begins by feeding the monster a pie. She continues feeding pies to monsters until no more monsters are left. Then she collects all the diamonds that were created.\n\nYou will be given a list of split rules describing the way in which the various monsters can split. Every monster can split in at least one way, and if a monster can split in multiple ways then each time when it splits Piegirl can choose the way it splits.\n\nFor each monster, determine the smallest and the largest number of diamonds Piegirl can possibly collect, if initially she has a single instance of that monster. Piegirl has an unlimited supply of pies.\n\nThe first line contains two integers: m and n (1\u2009\u2264\u2009m,\u2009n\u2009\u2264\u2009105), the number of possible splits and the number of different monster types. Each of the following m lines contains a split rule. Each split rule starts with an integer (a monster ID) mi (1\u2009\u2264\u2009mi\u2009\u2264\u2009n), and a positive integer li indicating the number of monsters and diamonds the current monster can split into. This is followed by li integers, with positive integers representing a monster ID and -1 representing a diamond.\n\nEach monster will have at least one split rule. Each split rule will have at least one diamond. The sum of li across all split rules will be at most 105.\n\nFor each monster, in order of their IDs, print a line with two integers: the smallest and the largest number of diamonds that can possibly be collected by starting with that monster. If Piegirl cannot possibly end up in a state without monsters, print -1 for both smallest and the largest value. If she can collect an arbitrarily large number of diamonds, print -2 as the largest number of diamonds. \n\nIf any number in output exceeds 314000000 (but is finite), print 314000000 instead of that number."}, {"role": "assistant", "content": "dfsandsimilar, graphs, shortestpaths"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "In a far away land, there exists a planet shaped like a cylinder. There are three regions in this planet: top, bottom, and side as shown in the following picture.\n\nBoth the top and the bottom areas consist of big cities. The side area consists entirely of the sea.\n\nOne day, a city decides that it has too little space and would like to reclamate some of the side area into land. The side area can be represented by a grid with r rows and c columns \u2014 each cell represents a rectangular area in the side area. The rows are numbered 1 through r from top to bottom, while the columns are numbered 1 through c from left to right. Two cells are adjacent if they share a side. In addition, two cells located on the same row \u2014 one in the leftmost column, and the other in the rightmost column \u2014 are also adjacent.\n\nInitially, all of the cells are occupied by the sea. The plan is to turn some of those cells into land one by one in a particular order that will be given to you.\n\nHowever, the sea on the side area is also used as a major trade route. More formally, it is not allowed to reclamate the sea cells into land in such way that there does not exist a sequence of cells with the following property:\n\nThus, the plan is revised. Each time a cell is going to be turned from sea to land, the city first needs to check whether or not it would violate the above condition by doing that. If it would, then the cell is not turned into land and the plan proceeds into the next cell. Otherwise, the cell is turned into land.\n\nYour job is to simulate this and output the number of cells that were successfully turned into land.\n\nThe first line consists of three integers r, c, and n (1\u2009\u2264\u2009r,\u2009c\u2009\u2264\u20093000, 1\u2009\u2264\u2009n\u2009\u2264\u20093\u00b7105). Then, n lines follow, describing the cells in the order you will reclamate them. Each line will consists of two integers: ri and ci (1\u2009\u2264\u2009ri\u2009\u2264\u2009r, 1\u2009\u2264\u2009ci\u2009\u2264\u2009c), which represents the cell located at row ri and column ci. All of the lines describing the cells will be distinct.\n\nYou should output a single number representing the number of cells that were successfully turned to land.\n\nThe pictures below show the sequence of reclamations that are performed in the example input. Blue cells represent the cells occupied by sea, while other colored cells represent land. The latest cell that are reclamated is colored either yellow or red, depending on whether the addition violates the condition in the statement. The dashed red line represents a possible trade route, if it exists.\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo route exists, so this reclamation is not performed.\n\n\n\n\n\nNo route exists, skipped.\n\n\n\nRemember that the leftmost and rightmost cells in the same row are adjacent.\n\n\n\nNo route exists, skipped.\n\nHence the result is:\n\n\n\nThere are 6 successful reclamation and 3 failed ones."}, {"role": "assistant", "content": "dsu"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Piegirl found the red button. You have one last chance to change the inevitable end.\n\nThe circuit under the button consists of n nodes, numbered from 0 to n - 1. In order to deactivate the button, the n nodes must be disarmed in a particular order. Node 0 must be disarmed first. After disarming node i, the next node to be disarmed must be either node (2\u00b7i) modulo n or node (2\u00b7i)\u2009+\u20091 modulo n. The last node to be disarmed must be node 0. Node 0 must be disarmed twice, but all other nodes must be disarmed exactly once. \n\nYour task is to find any such order and print it. If there is no such order, print -1.\n\nInput consists of a single integer n (2\u2009\u2264\u2009n\u2009\u2264\u2009105).\n\nPrint an order in which you can to disarm all nodes. If it is impossible, print -1 instead. If there are multiple orders, print any one of them."}, {"role": "assistant", "content": "combinatorics, dfsandsimilar, dsu, graphs, greedy"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Theatre Square in the capital city of Berland has a rectangular shape with the size n\u2009\u00d7\u2009m meters. On the occasion of the city's anniversary, a decision was taken to pave the Square with square granite flagstones. Each flagstone is of the size a\u2009\u00d7\u2009a.\n\nWhat is the least number of flagstones needed to pave the Square? It's allowed to cover the surface larger than the Theatre Square, but the Square has to be covered. It's not allowed to break the flagstones. The sides of flagstones should be parallel to the sides of the Square.\n\nThe input contains three positive integer numbers in the first line: n,\u2009\u2009m and a (1\u2009\u2264\u2009\u2009n,\u2009m,\u2009a\u2009\u2264\u2009109).\n\nWrite the needed number of flagstones."}, {"role": "assistant", "content": "math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "In the popular spreadsheets systems (for example, in Excel) the following numeration of columns is used. The first column has number A, the second \u2014 number B, etc. till column 26 that is marked by Z. Then there are two-letter numbers: column 27 has number AA, 28 \u2014 AB, column 52 is marked by AZ. After ZZ there follow three-letter numbers, etc.\n\nThe rows are marked by integer numbers starting with 1. The cell name is the concatenation of the column and the row numbers. For example, BC23 is the name for the cell that is in column 55, row 23. \n\nSometimes another numeration system is used: RXCY, where X and Y are integer numbers, showing the column and the row numbers respectfully. For instance, R23C55 is the cell from the previous example.\n\nYour task is to write a program that reads the given sequence of cell coordinates and produce each item written according to the rules of another numeration system.\n\nThe first line of the input contains integer number n (1\u2009\u2264\u2009n\u2009\u2264\u2009105), the number of coordinates in the test. Then there follow n lines, each of them contains coordinates. All the coordinates are correct, there are no cells with the column and/or the row numbers larger than 106 .\n\nWrite n lines, each line should contain a cell coordinates in the other numeration system."}, {"role": "assistant", "content": "implementation, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Nowadays all circuses in Berland have a round arena with diameter 13 meters, but in the past things were different.\n\nIn Ancient Berland arenas in circuses were shaped as a regular (equiangular) polygon, the size and the number of angles could vary from one circus to another. In each corner of the arena there was a special pillar, and the rope strung between the pillars marked the arena edges.\n\nRecently the scientists from Berland have discovered the remains of the ancient circus arena. They found only three pillars, the others were destroyed by the time.\n\nYou are given the coordinates of these three pillars. Find out what is the smallest area that the arena could have.\n\nThe input file consists of three lines, each of them contains a pair of numbers \u2013\u2013 coordinates of the pillar. Any coordinate doesn't exceed 1000 by absolute value, and is given with at most six digits after decimal point.\n\nOutput the smallest possible area of the ancient arena. This number should be accurate to at least 6 digits after the decimal point. It's guaranteed that the number of angles in the optimal polygon is not larger than 100."}, {"role": "assistant", "content": "geometry, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Tom is interested in power consumption of his favourite laptop. His laptop has three modes. In normal mode laptop consumes P1 watt per minute. T1 minutes after Tom moved the mouse or touched the keyboard for the last time, a screensaver starts and power consumption changes to P2 watt per minute. Finally, after T2 minutes from the start of the screensaver, laptop switches to the \"sleep\" mode and consumes P3 watt per minute. If Tom moves the mouse or touches the keyboard when the laptop is in the second or in the third mode, it switches to the first (normal) mode. Tom's work with the laptop can be divided into n time periods [l1,\u2009r1],\u2009[l2,\u2009r2],\u2009...,\u2009[ln,\u2009rn]. During each interval Tom continuously moves the mouse and presses buttons on the keyboard. Between the periods Tom stays away from the laptop. Find out the total amount of power consumed by the laptop during the period [l1,\u2009rn].\n\nThe first line contains 6 integer numbers n, P1, P2, P3, T1, T2 (1\u2009\u2264\u2009n\u2009\u2264\u2009100,\u20090\u2009\u2264\u2009P1,\u2009P2,\u2009P3\u2009\u2264\u2009100,\u20091\u2009\u2264\u2009T1,\u2009T2\u2009\u2264\u200960). The following n lines contain description of Tom's work. Each i-th of these lines contains two space-separated integers li and ri (0\u2009\u2264\u2009li\u2009<\u2009ri\u2009\u2264\u20091440, ri\u2009<\u2009li\u2009+\u20091 for i\u2009<\u2009n), which stand for the start and the end of the i-th period of work.\n\nOutput the answer to the problem."}, {"role": "assistant", "content": "implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "All cinema halls in Berland are rectangles with K rows of K seats each, and K is an odd number. Rows and seats are numbered from 1 to K. For safety reasons people, who come to the box office to buy tickets, are not allowed to choose seats themselves. Formerly the choice was made by a cashier, but now this is the responsibility of a special seating program. It was found out that the large majority of Berland's inhabitants go to the cinema in order to watch a movie, that's why they want to sit as close to the hall center as possible. Moreover, a company of M people, who come to watch a movie, want necessarily to occupy M successive seats in one row. Let's formulate the algorithm, according to which the program chooses seats and sells tickets. As the request for M seats comes, the program should determine the row number x and the segment [yl,\u2009yr] of the seats numbers in this row, where yr\u2009-\u2009yl\u2009+\u20091\u2009=\u2009M. From all such possible variants as a final result the program should choose the one with the minimum function value of total seats remoteness from the center. Say,  \u2014 the row and the seat numbers of the most \"central\" seat. Then the function value of seats remoteness from the hall center is . If the amount of minimum function values is more than one, the program should choose the one that is closer to the screen (i.e. the row number x is lower). If the variants are still multiple, it should choose the one with the minimum yl. If you did not get yet, your task is to simulate the work of this program. \n\nThe first line contains two integers N and K (1\u2009\u2264\u2009N\u2009\u2264\u20091000,\u20091\u2009\u2264\u2009K\u2009\u2264\u200999) \u2014 the amount of requests and the hall size respectively. The second line contains N space-separated integers Mi from the range [1,\u2009K] \u2014 requests to the program.\n\nOutput N lines. In the i-th line output \u00ab-1\u00bb (without quotes), if it is impossible to find Mi successive seats in one row, otherwise output three numbers x,\u2009yl,\u2009yr. Separate the numbers with a space."}, {"role": "assistant", "content": "dp, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Not long ago Billy came across such a problem, where there were given three natural numbers A, B and C from the range [1,\u2009N], and it was asked to check whether the equation AB\u2009=\u2009C is correct. Recently Billy studied the concept of a digital root of a number. We should remind you that a digital root d(x) of the number x is the sum s(x) of all the digits of this number, if s(x)\u2009\u2264\u20099, otherwise it is d(s(x)). For example, a digital root of the number 6543 is calculated as follows: d(6543)\u2009=\u2009d(6\u2009+\u20095\u2009+\u20094\u2009+\u20093)\u2009=\u2009d(18)\u2009=\u20099. Billy has counted that the digital root of a product of numbers is equal to the digital root of the product of the factors' digital roots, i.e. d(xy)\u2009=\u2009d(d(x)d(y)). And the following solution to the problem came to his mind: to calculate the digital roots and check if this condition is met. However, Billy has doubts that this condition is sufficient. That's why he asks you to find out the amount of test examples for the given problem such that the algorithm proposed by Billy makes mistakes.\n\nThe first line contains the only number N (1\u2009\u2264\u2009N\u2009\u2264\u2009106).\n\nOutput one number \u2014 the amount of required A, B and C from the range [1,\u2009N].\n\nFor the first sample the required triples are (3,\u20094,\u20093) and (4,\u20093,\u20093)."}, {"role": "assistant", "content": "numbertheory"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "This problem differs from one which was on the online contest.\n\nThe sequence a1,\u2009a2,\u2009...,\u2009an is called increasing, if ai\u2009<\u2009ai\u2009+\u20091 for i\u2009<\u2009n.\n\nThe sequence s1,\u2009s2,\u2009...,\u2009sk is called the subsequence of the sequence a1,\u2009a2,\u2009...,\u2009an, if there exist such a set of indexes 1\u2009\u2264\u2009i1\u2009<\u2009i2\u2009<\u2009...\u2009<\u2009ik\u2009\u2264\u2009n that aij\u2009=\u2009sj. In other words, the sequence s can be derived from the sequence a by crossing out some elements.\n\nYou are given two sequences of integer numbers. You are to find their longest common increasing subsequence, i.e. an increasing sequence of maximum length that is the subsequence of both sequences.\n\nThe first line contains an integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009500) \u2014 the length of the first sequence. The second line contains n space-separated integers from the range [0,\u2009109] \u2014 elements of the first sequence. The third line contains an integer m (1\u2009\u2264\u2009m\u2009\u2264\u2009500) \u2014 the length of the second sequence. The fourth line contains m space-separated integers from the range [0,\u2009109] \u2014 elements of the second sequence.\n\nIn the first line output k \u2014 the length of the longest common increasing subsequence. In the second line output the subsequence itself. Separate the elements with a space. If there are several solutions, output any."}, {"role": "assistant", "content": "dp"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Billy investigates the question of applying greedy algorithm to different spheres of life. At the moment he is studying the application of greedy algorithm to the problem about change. There is an amount of n coins of different face values, and the coins of each value are not limited in number. The task is to collect the sum x with the minimum amount of coins. Greedy algorithm with each its step takes the coin of the highest face value, not exceeding x. Obviously, if among the coins' face values exists the face value 1, any sum x can be collected with the help of greedy algorithm. However, greedy algorithm does not always give the optimal representation of the sum, i.e. the representation with the minimum amount of coins. For example, if there are face values {1,\u20093,\u20094} and it is asked to collect the sum 6, greedy algorithm will represent the sum as 4\u2009+\u20091\u2009+\u20091, while the optimal representation is 3\u2009+\u20093, containing one coin less. By the given set of face values find out if there exist such a sum x that greedy algorithm will collect in a non-optimal way. If such a sum exists, find out the smallest of these sums.\n\nThe first line contains an integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009400) \u2014 the amount of the coins' face values. The second line contains n integers ai (1\u2009\u2264\u2009ai\u2009\u2264\u2009109), describing the face values. It is guaranteed that a1\u2009>\u2009a2\u2009>\u2009...\u2009>\u2009an and an\u2009=\u20091.\n\nIf greedy algorithm collects any sum in an optimal way, output -1. Otherwise output the smallest sum that greedy algorithm collects in a non-optimal way."}, {"role": "assistant", "content": "constructivealgorithms"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Soroush's room is a square with side length n. Before this contest he bought k fine Persian carpets to carpet his room for celebrating the 100th contest on his favorite site. Each Persian carpet is a square of side length n1.\n\nSoroush wants to cover all the area of his room. Carpets can be put over each other but it is not allowed to rotate the carpets. Can Soroush carpet his room completely?\n\nThe input consists of three integer numbers n, k and n1 (10\u2009\u2264\u2009n\u2009\u2264\u200912, 1\u2009\u2264\u2009k\u2009\u2264\u200910, ).\n\nWrite a single YES or NO. Write YES if and only if Sorush can carpet his room completely."}, {"role": "assistant", "content": "*specialproblem, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Kiana thinks two integers are friends if and only if one of them divides the other one. For example, 12 and 4 are friends, also 6 and 6 are friends too, but 120 and 36 are not.\n\nA group of non-zero integers is called friendly, if each pair of its integers form a friend pair.\n\nYou are given a group of non-zero integers. See if they're friendly.\n\nThe first line contains n (1\u2009\u2264\u2009n\u2009\u2264\u20091000), where n \u2014 the number of integers in the group.\n\nThe next line contains the elements, sorted in the non-decreasing order. The numbers are comma separated, they have at most 7 digits in their decimal notation and do not have any leading zeros.\n\nIf the group is friendly write \"FRIENDS\", else write \"NOT FRIENDS\"."}, {"role": "assistant", "content": "*specialproblem, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Bijan is new to programming. He learned recently that programmers do not code every bit of their apps from scratch.\n\nFor example they never write a code to sum two integers, because their languages have the ability to do the sum. But can they use it? Can an experienced coder who has attended more than 100 contests, sum two integers?\n\nBijan is not sure about this. What's your opinion?\n\nYou are given two integers a and b, one per line (1\u2009\u2264\u2009a,\u2009b\u2009<\u200910500). These numbers will not have any leading zeros.\n\nWrite sum of the two integers. Do not put any leading zeros."}, {"role": "assistant", "content": "*specialproblem, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "There are a lot of rumors in the media these days. One day Aida decided to find out how rumors are made.\n\nShe asked n of her friends to help her. They all formed a circle and Aida told the person to her right a piece of news which was just a simple string. Then each person told the string to the person on his/her right. But they didn't tell the string exactly as they'd heard it. Each person made at most one of these two types of changes: \n\nFinally when the rumor passed exactly n moves (a complete cycle), Aida heard something quite different from what she expected from the person on her left. She thinks someone has cheated and made some changes other than those explained above. Now she wants you to write a Pike piece of code which gets the initial and final strings and tells Aida whether it's possible to get to the final string from the initial one, by the rules described above.\n\nThe first line contains a single integer n (2\u2009\u2264\u2009n\u2009\u2264\u20098\u2009\u00d7\u2009106), the number of Aida's friends. The following two lines contain a non-empty string each \u2014 initial and final strings. The lengths of strings are at most 107 and they only contain English alphabet letters.\n\nWrite a single YES or NO. Write YES only if it's possible to get to the final string from the initial string.\n\nThe input is case-sensitive, while the output is not."}, {"role": "assistant", "content": "*specialproblem, strings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "There are n lamps in a line. The lamps are numbered 1 to n from left to right. There are also n keys. When key number i is pressed, all lamps number x such that i|x change their state.\n\nFor two integer numbers a and b, we say a|b if and only if there exists an integer c such that a\u2009\u00d7\u2009c\u2009=\u2009b.\n\nAmirali likes to play with the keys. He randomly pressed k keys and wants to know the final state of the lamps. Help him by writing a Pike piece of code to solve this task.\n\nThe first line of input contains a single integer n, the number of lamps (1\u2009\u2264\u2009n\u2009\u2264\u2009105).\n\nThe following line contains n words. The i-th word describes the initial state of lamp number i (see samples for details).\n\nThe following line contains a single integer k (1\u2009\u2264\u2009k\u2009\u2264\u2009104), the number of times a key is pressed. Then in the next line come k integers in range [1,\u2009n] which are the numbers of the pressed keys.\n\nWrite n words to output. Describe the final state of the lamps. See samples for more details."}, {"role": "assistant", "content": "*specialproblem, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given a polynom in form p(x)\u2009=\u2009(x\u2009+\u2009a1)\u00b7(x\u2009+\u2009a2)\u00b7... (x\u2009+\u2009an). Write Pike program to print it in a standard form p(x)\u2009=\u2009xn\u2009+\u2009b1xn\u2009-\u20091\u2009+\u2009...\u2009+\u2009bn\u2009-\u20091x\u2009+\u2009bn. You should write each addend in form \u00abC*X^K\u00bb (for example, 5*X^8).\n\nPlease, write the polynom in the shortest way, so you should skip unnecessary terms: some terms \u00abC*X^K\u00bb should be reduced or even omitted. Look for the samples for clarification.\n\nThe first line of the input contains n (1\u2009\u2264\u2009n\u2009\u2264\u20099). The following n lines contain integer ai (\u2009-\u200910\u2009\u2264\u2009ai\u2009\u2264\u200910).\n\nPrint the given polynom in a standard way. Note, that the answer in this problem response uniquely determined."}, {"role": "assistant", "content": "*specialproblem, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The famous singer, Aryo, is going to publish a new album of his great work!\n\nUnfortunately these days, there are many albums, Aryo wants to choose a new name for his album, a name that has not been used or at least has not been used recently.\n\nHe has a list of all used album names together with the year the albums were published. He also has a list of suitable names for his album.\n\nIf he finds a suitable name which has not been used before, he'll use it. Otherwise he will use the name which was used as long ago as possible. If two such names are found (that haven't been used or were used at the same year), he uses the name that is alphabetically latest.\n\nHelp him name his album.\n\nThe first line contains a single integer n (0\u2009\u2264\u2009n\u2009\u2264\u2009105), the number of used names. \n\nThe following n lines each contain a string (the album name) and an integer (the year album was published). Album names are made of lowercase Latin letters and contain at most 14 letters. The year is in range [1900,\u20092011].\n\nThe following line contains a single integer m (1\u2009\u2264\u2009m\u2009\u2264\u2009104), the number of suitable album names.\n\nThe following m lines each contain a string \u2014 a suitable name. It contains at most 14 lowercase Latin letters.\n\nAll album names and suitable names are non-empty.\n\nWrite a single string. The name of the new album."}, {"role": "assistant", "content": "*specialproblem, datastructures, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Do you know the game Battleship? If no, look into Wikipedia article http://en.wikipedia.org/wiki/Battleship_(game). You are given the positions of ships on a 10\u2009\u00d7\u200910 board for playing Battleship. According to the rules, the board should contain the following ships: \n\nThe ships should not 'bend', touch each other or overlap in any way. Each ship can be oriented horizontaly or verticaly. Your task is to check whether the given set of boards meets the given conditions.\n\nThe first line contains number n (1\u2009\u2264\u2009n\u2009\u2264\u200910) \u2014 the number of boards. Each board is described by 10 lines containing 10 characters each. The symbol \"0\" stands for an empty square and the symbol \"*\" stands for a square occupied by a ship. The descriptions of boards are separated with empty lines.\n\nPrint n lines YES or NO. Print the first word if the board meets the given conditions; otherwise print the second word."}, {"role": "assistant", "content": "*specialproblem, dfsandsimilar, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Ehsan loves geometry! Especially he likes to rotate points!\n\nGiven a point in the plane, Ehsan likes to rotate it by k degrees (counter-clockwise), around the origin. What is the result of this rotation?\n\nA single integer k (0\u2009\u2264\u2009k\u2009<\u2009360) is given in the first line. Two integer numbers x and y are given in the second line (\u2009-\u20091390\u2009\u2264\u2009x,\u2009y\u2009\u2264\u20091390).\n\nWrite two numbers. The result of the rotation. Your answer must have a relative error less than 10\u2009-\u20091."}, {"role": "assistant", "content": "*specialproblem, geometry, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Aryo has got a lot of intervals for his 2418th birthday. He is really excited and decided to color all these intervals with some colors. He has a simple rule for himself. He calls a coloring nice if there exists no three intervals a,\u2009b and c such that the following conditions are satisfied simultaneously: \n\nMoreover he found out that for every intervals i and j, there is at least one point in i which isn't in j.\n\nGiven some set of intervals. You have to find the minimum number k, such that Aryo can find a nice coloring with k colors.\n\nThe first line contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009103), number of intervals.\n\nThe following n lines contain a interval description each. Each interval is described by two numbers si,\u2009ei which are the start and end points of it (\u2009-\u2009105\u2009<\u2009si,\u2009ei\u2009<\u2009105, si\u2009\u2264\u2009ei). See samples for clarity. A square bracket stands for including of the corresponding endpoint, while a round bracket stands for excluding.\n\nWrite a single integer k \u2014 the minimum number of colors needed for a nice coloring."}, {"role": "assistant", "content": "*specialproblem, greedy, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Codehorses has just hosted the second Codehorses Cup. This year, the same as the previous one, organizers are giving T-shirts for the winners.\n\nThe valid sizes of T-shirts are either \"M\" or from $$$0$$$ to $$$3$$$ \"X\" followed by \"S\" or \"L\". For example, sizes \"M\", \"XXS\", \"L\", \"XXXL\" are valid and \"XM\", \"Z\", \"XXXXL\" are not.\n\nThere are $$$n$$$ winners to the cup for both the previous year and the current year. Ksenia has a list with the T-shirt sizes printed for the last year cup and is yet to send the new list to the printing office. \n\nOrganizers want to distribute the prizes as soon as possible, so now Ksenia is required not to write the whole list from the scratch but just make some changes to the list of the previous year. In one second she can choose arbitrary position in any word and replace its character with some uppercase Latin letter. Ksenia can't remove or add letters in any of the words.\n\nWhat is the minimal number of seconds Ksenia is required to spend to change the last year list to the current one?\n\nThe lists are unordered. That means, two lists are considered equal if and only if the number of occurrences of any string is the same in both lists.\n\nThe first line contains one integer $$$n$$$ ($$$1 \\le n \\le 100$$$) \u2014 the number of T-shirts.\n\nThe $$$i$$$-th of the next $$$n$$$ lines contains $$$a_i$$$ \u2014 the size of the $$$i$$$-th T-shirt of the list for the previous year.\n\nThe $$$i$$$-th of the next $$$n$$$ lines contains $$$b_i$$$ \u2014 the size of the $$$i$$$-th T-shirt of the list for the current year.\n\nIt is guaranteed that all the sizes in the input are valid. It is also guaranteed that Ksenia can produce list $$$b$$$ from the list $$$a$$$.\n\nPrint the minimal number of seconds Ksenia is required to spend to change the last year list to the current one. If the lists are already equal, print 0.\n\nIn the first example Ksenia can replace \"M\" with \"S\" and \"S\" in one of the occurrences of \"XS\" with \"L\".\n\nIn the second example Ksenia should replace \"L\" in \"XXXL\" with \"S\".\n\nIn the third example lists are equal."}, {"role": "assistant", "content": "greedy, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Recently, you bought a brand new smart lamp with programming features. At first, you set up a schedule to the lamp. Every day it will turn power on at moment $$$0$$$ and turn power off at moment $$$M$$$. Moreover, the lamp allows you to set a program of switching its state (states are \"lights on\" and \"lights off\"). Unfortunately, some program is already installed into the lamp.\n\nThe lamp allows only good programs. Good program can be represented as a non-empty array $$$a$$$, where $$$0 < a_1 < a_2 < \\dots < a_{|a|} < M$$$. All $$$a_i$$$ must be integers. Of course, preinstalled program is a good program.\n\nThe lamp follows program $$$a$$$ in next manner: at moment $$$0$$$ turns power and light on. Then at moment $$$a_i$$$ the lamp flips its state to opposite (if it was lit, it turns off, and vice versa). The state of the lamp flips instantly: for example, if you turn the light off at moment $$$1$$$ and then do nothing, the total time when the lamp is lit will be $$$1$$$. Finally, at moment $$$M$$$ the lamp is turning its power off regardless of its state.\n\nSince you are not among those people who read instructions, and you don't understand the language it's written in, you realize (after some testing) the only possible way to alter the preinstalled program. You can insert at most one element into the program $$$a$$$, so it still should be a good program after alteration. Insertion can be done between any pair of consecutive elements of $$$a$$$, or even at the begining or at the end of $$$a$$$.\n\nFind such a way to alter the program that the total time when the lamp is lit is maximum possible. Maybe you should leave program untouched. If the lamp is lit from $$$x$$$ till moment $$$y$$$, then its lit for $$$y - x$$$ units of time. Segments of time when the lamp is lit are summed up.\n\nFirst line contains two space separated integers $$$n$$$ and $$$M$$$ ($$$1 \\le n \\le 10^5$$$, $$$2 \\le M \\le 10^9$$$) \u2014 the length of program $$$a$$$ and the moment when power turns off.\n\nSecond line contains $$$n$$$ space separated integers $$$a_1, a_2, \\dots, a_n$$$ ($$$0 < a_1 < a_2 < \\dots < a_n < M$$$) \u2014 initially installed program $$$a$$$.\n\nPrint the only integer \u2014 maximum possible total time when the lamp is lit.\n\nIn the first example, one of possible optimal solutions is to insert value $$$x = 3$$$ before $$$a_1$$$, so program will be $$$[3, 4, 6, 7]$$$ and time of lamp being lit equals $$$(3 - 0) + (6 - 4) + (10 - 7) = 8$$$. Other possible solution is to insert $$$x = 5$$$ in appropriate place.\n\nIn the second example, there is only one optimal solution: to insert $$$x = 2$$$ between $$$a_1$$$ and $$$a_2$$$. Program will become $$$[1, 2, 10]$$$, and answer will be $$$(1 - 0) + (10 - 2) = 9$$$.\n\nIn the third example, optimal answer is to leave program untouched, so answer will be $$$(3 - 0) + (7 - 4) = 6$$$."}, {"role": "assistant", "content": "greedy"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given $$$n$$$ segments on a coordinate line; each endpoint of every segment has integer coordinates. Some segments can degenerate to points. Segments can intersect with each other, be nested in each other or even coincide.\n\nYour task is the following: for every $$$k \\in [1..n]$$$, calculate the number of points with integer coordinates such that the number of segments that cover these points equals $$$k$$$. A segment with endpoints $$$l_i$$$ and $$$r_i$$$ covers point $$$x$$$ if and only if $$$l_i \\le x \\le r_i$$$.\n\nThe first line of the input contains one integer $$$n$$$ ($$$1 \\le n \\le 2 \\cdot 10^5$$$) \u2014 the number of segments.\n\nThe next $$$n$$$ lines contain segments. The $$$i$$$-th line contains a pair of integers $$$l_i, r_i$$$ ($$$0 \\le l_i \\le r_i \\le 10^{18}$$$) \u2014 the endpoints of the $$$i$$$-th segment.\n\nPrint $$$n$$$ space separated integers $$$cnt_1, cnt_2, \\dots, cnt_n$$$, where $$$cnt_i$$$ is equal to the number of points such that the number of segments that cover these points equals to $$$i$$$.\n\nThe picture describing the first example:\n\n\n\nPoints with coordinates $$$[0, 4, 5, 6, 7, 8]$$$ are covered by one segment, points $$$[1, 2]$$$ are covered by two segments and point $$$[3]$$$ is covered by three segments.\n\nThe picture describing the second example:\n\n\n\nPoints $$$[1, 4, 5, 6, 7]$$$ are covered by one segment, points $$$[2, 3]$$$ are covered by two segments and there are no points covered by three segments."}, {"role": "assistant", "content": "datastructures, implementation, sortings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The sequence of integers $$$a_1, a_2, \\dots, a_k$$$ is called a good array if $$$a_1 = k - 1$$$ and $$$a_1 > 0$$$. For example, the sequences $$$[3, -1, 44, 0], [1, -99]$$$ are good arrays, and the sequences $$$[3, 7, 8], [2, 5, 4, 1], [0]$$$ \u2014 are not.\n\nA sequence of integers is called good if it can be divided into a positive number of good arrays. Each good array should be a subsegment of sequence and each element of the sequence should belong to exactly one array. For example, the sequences $$$[2, -3, 0, 1, 4]$$$, $$$[1, 2, 3, -3, -9, 4]$$$ are good, and the sequences $$$[2, -3, 0, 1]$$$, $$$[1, 2, 3, -3 -9, 4, 1]$$$ \u2014 are not.\n\nFor a given sequence of numbers, count the number of its subsequences that are good sequences, and print the number of such subsequences modulo 998244353.\n\nThe first line contains the number $$$n~(1 \\le n \\le 10^3)$$$ \u2014 the length of the initial sequence. The following line contains $$$n$$$ integers $$$a_1, a_2, \\dots, a_n~(-10^9 \\le a_i \\le 10^9)$$$ \u2014 the sequence itself.\n\nIn the single line output one integer \u2014 the number of subsequences of the original sequence that are good sequences, taken modulo 998244353.\n\nIn the first test case, two good subsequences \u2014 $$$[a_1, a_2, a_3]$$$ and $$$[a_2, a_3]$$$.\n\nIn the second test case, seven good subsequences \u2014 $$$[a_1, a_2, a_3, a_4], [a_1, a_2], [a_1, a_3], [a_1, a_4], [a_2, a_3], [a_2, a_4]$$$ and $$$[a_3, a_4]$$$."}, {"role": "assistant", "content": "combinatorics, dp"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Your friend is developing a computer game. He has already decided how the game world should look like \u2014 it should consist of $$$n$$$ locations connected by $$$m$$$ two-way passages. The passages are designed in such a way that it should be possible to get from any location to any other location.\n\nOf course, some passages should be guarded by the monsters (if you just can go everywhere without any difficulties, then it's not fun, right?). Some crucial passages will be guarded by really fearsome monsters, requiring the hero to prepare for battle and designing his own tactics of defeating them (commonly these kinds of monsters are called bosses). And your friend wants you to help him place these bosses.\n\nThe game will start in location $$$s$$$ and end in location $$$t$$$, but these locations are not chosen yet. After choosing these locations, your friend will place a boss in each passage such that it is impossible to get from $$$s$$$ to $$$t$$$ without using this passage. Your friend wants to place as much bosses as possible (because more challenges means more fun, right?), so he asks you to help him determine the maximum possible number of bosses, considering that any location can be chosen as $$$s$$$ or as $$$t$$$.\n\nThe first line contains two integers $$$n$$$ and $$$m$$$ ($$$2 \\le n \\le 3 \\cdot 10^5$$$, $$$n - 1 \\le m \\le 3 \\cdot 10^5$$$) \u2014 the number of locations and passages, respectively.\n\nThen $$$m$$$ lines follow, each containing two integers $$$x$$$ and $$$y$$$ ($$$1 \\le x, y \\le n$$$, $$$x \\ne y$$$) describing the endpoints of one of the passages.\n\nIt is guaranteed that there is no pair of locations directly connected by two or more passages, and that any location is reachable from any other location.\n\nPrint one integer \u2014 the maximum number of bosses your friend can place, considering all possible choices for $$$s$$$ and $$$t$$$."}, {"role": "assistant", "content": "dfsandsimilar, graphs, trees"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given an array $$$a$$$ consisting of $$$n$$$ integers, and $$$q$$$ queries to it. $$$i$$$-th query is denoted by two integers $$$l_i$$$ and $$$r_i$$$. For each query, you have to find any integer that occurs exactly once in the subarray of $$$a$$$ from index $$$l_i$$$ to index $$$r_i$$$ (a subarray is a contiguous subsegment of an array). For example, if $$$a = [1, 1, 2, 3, 2, 4]$$$, then for query $$$(l_i = 2, r_i = 6)$$$ the subarray we are interested in is $$$[1, 2, 3, 2, 4]$$$, and possible answers are $$$1$$$, $$$3$$$ and $$$4$$$; for query $$$(l_i = 1, r_i = 2)$$$ the subarray we are interested in is $$$[1, 1]$$$, and there is no such element that occurs exactly once.\n\nCan you answer all of the queries?\n\nThe first line contains one integer $$$n$$$ ($$$1 \\le n \\le 5 \\cdot 10^5$$$).\n\nThe second line contains $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$ ($$$1 \\le a_i \\le 5 \\cdot 10^5$$$).\n\nThe third line contains one integer $$$q$$$ ($$$1 \\le q \\le 5 \\cdot 10^5$$$).\n\nThen $$$q$$$ lines follow, $$$i$$$-th line containing two integers $$$l_i$$$ and $$$r_i$$$ representing $$$i$$$-th query ($$$1 \\le l_i \\le r_i \\le n$$$).\n\nAnswer the queries as follows:\n\nIf there is no integer such that it occurs in the subarray from index $$$l_i$$$ to index $$$r_i$$$ exactly once, print $$$0$$$. Otherwise print any such integer."}, {"role": "assistant", "content": "datastructures, divideandconquer"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given a weighted tree (undirected connected graph with no cycles, loops or multiple edges) with $$$n$$$ vertices. The edge $$$\\{u_j, v_j\\}$$$ has weight $$$w_j$$$. Also each vertex $$$i$$$ has its own value $$$a_i$$$ assigned to it.\n\nLet's call a path starting in vertex $$$u$$$ and ending in vertex $$$v$$$, where each edge can appear no more than twice (regardless of direction), a 2-path. Vertices can appear in the 2-path multiple times (even start and end vertices).\n\nFor some 2-path $$$p$$$ profit $$$\\text{Pr}(p) = \\sum\\limits_{v \\in \\text{distinct vertices in } p}{a_v} - \\sum\\limits_{e \\in \\text{distinct edges in } p}{k_e \\cdot w_e}$$$, where $$$k_e$$$ is the number of times edge $$$e$$$ appears in $$$p$$$. That is, vertices are counted once, but edges are counted the number of times they appear in $$$p$$$.\n\nYou are about to answer $$$m$$$ queries. Each query is a pair of vertices $$$(qu, qv)$$$. For each query find 2-path $$$p$$$ from $$$qu$$$ to $$$qv$$$ with maximal profit $$$\\text{Pr}(p)$$$.\n\nThe first line contains two integers $$$n$$$ and $$$q$$$ ($$$2 \\le n \\le 3 \\cdot 10^5$$$, $$$1 \\le q \\le 4 \\cdot 10^5$$$) \u2014 the number of vertices in the tree and the number of queries.\n\nThe second line contains $$$n$$$ space-separated integers $$$a_1, a_2, \\dots, a_n$$$ $$$(1 \\le a_i \\le 10^9)$$$ \u2014 the values of the vertices.\n\nNext $$$n - 1$$$ lines contain descriptions of edges: each line contains three space separated integers $$$u_i$$$, $$$v_i$$$ and $$$w_i$$$ ($$$1 \\le u_i, v_i \\le n$$$, $$$u_i \\neq v_i$$$, $$$1 \\le w_i \\le 10^9$$$) \u2014 there is edge $$$\\{u_i, v_i\\}$$$ with weight $$$w_i$$$ in the tree.\n\nNext $$$q$$$ lines contain queries (one per line). Each query contains two integers $$$qu_i$$$ and $$$qv_i$$$ $$$(1 \\le qu_i, qv_i \\le n)$$$ \u2014 endpoints of the 2-path you need to find.\n\nFor each query print one integer per line \u2014 maximal profit $$$\\text{Pr}(p)$$$ of the some 2-path $$$p$$$ with the corresponding endpoints.\n\nExplanation of queries: "}, {"role": "assistant", "content": "datastructures, dp, trees"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given a qubit in state  and an integer sign. \n\nYour task is to convert the given qubit to state  if sign\u2009=\u20091 or  if sign\u2009=\u2009\u2009-\u20091.\n\nYou have to implement an operation which takes a qubit and an integer as an input and has no output. The \"output\" of your solution is the state in which it left the input qubit.\n\nYour code should have the following signature:"}, {"role": "assistant", "content": "*specialproblem"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given two qubits in state  and an integer index. Your task is to create one of the Bell states on them according to the index:\n\nYou have to implement an operation which takes an array of 2 qubits and an integer as an input and has no output. The \"output\" of your solution is the state in which it left the input qubits.\n\nYour code should have the following signature:"}, {"role": "assistant", "content": "*specialproblem"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given N qubits (1\u2009\u2264\u2009N\u2009\u2264\u20098) in zero state . Your task is to create Greenberger\u2013Horne\u2013Zeilinger (GHZ) state on them:\n\nNote that for N\u2009=\u20091 and N\u2009=\u20092 GHZ state becomes states  and  from the previous tasks, respectively.\n\nYou have to implement an operation which takes an array of N qubits as an input and has no output. The \"output\" of your solution is the state in which it left the input qubits.\n\nYour code should have the following signature:"}, {"role": "assistant", "content": "*specialproblem"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given a qubit which is guaranteed to be either in  or in  state. \n\nYour task is to perform necessary operations and measurements to figure out which state it was and to return 1 if it was a  state or -1 if it was  state. The state of the qubit after the operations does not matter.\n\nYou have to implement an operation which takes a qubit as an input and returns an integer. \n\nYour code should have the following signature:"}, {"role": "assistant", "content": "*specialproblem"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given two qubits which are guaranteed to be in one of the Bell states:\n\nYour task is to perform necessary operations and measurements to figure out which state it was and to return the index of that state (0 for , 1 for  etc.). The state of the qubits after the operations does not matter.\n\nYou have to implement an operation which takes an array of two qubits as an input and returns an integer. \n\nYour code should have the following signature:"}, {"role": "assistant", "content": "*specialproblem"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given N qubits which are guaranteed to be in one of two basis states on N qubits. You are also given two bitstrings bits0 and bits1 which describe these basis states.\n\nYour task is to perform necessary operations and measurements to figure out which state it was and to return 0 if it was the state described with bits0 or 1 if it was the state described with bits1. The state of the qubits after the operations does not matter.\n\nYou have to implement an operation which takes the following inputs:\n\nAn array of boolean values represents a basis state as follows: the i-th element of the array is true if the i-th qubit is in state , and false if it is in state . For example, array [true; false] describes 2-qubit state .\n\nYour code should have the following signature:"}, {"role": "assistant", "content": "*specialproblem"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Implement a quantum oracle on N qubits which implements a function f(x)\u2009=\u2009xk, i.e. the value of the function is the value of the k-th qubit.\n\nFor an explanation on how the quantum oracles work, see the tutorial blog post.\n\nYou have to implement an operation which takes the following inputs:\n\nThe operation doesn't have an output; the \"output\" of your solution is the state in which it left the qubits.\n\nYour code should have the following signature:"}, {"role": "assistant", "content": "*specialproblem"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Implement a quantum oracle on N qubits which implements the following function: , i.e., the value of the function is 1 if x has odd number of 1s, and 0 otherwise.\n\nYou have to implement an operation which takes the following inputs:\n\nThe operation doesn't have an output; the \"output\" of your solution is the state in which it left the qubits.\n\nYour code should have the following signature:"}, {"role": "assistant", "content": "*specialproblem"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given a quantum oracle - an operation on N\u2009+\u20091 qubits which implements a function . You are guaranteed that the function f implemented by the oracle is either constant (returns 0 on all inputs or 1 on all inputs) or balanced (returns 0 on exactly one half of the input domain and 1 on the other half).\n\nThere are only two possible constant functions: f(x)\u2009=\u20090 and f(x)\u2009=\u20091. The functions implemented by oracles in the two previous problems (f(x)\u2009=\u2009xk and ) are examples of balanced functions.\n\nYour task is to figure out whether the function given by the oracle is constant. Your code is allowed to call the given oracle only once.\n\nYou have to implement an operation which takes the following inputs:\n\nThe return of your operation is a Boolean value: true if the oracle implements a constant function and false otherwise.\n\nYour code should have the following signature:"}, {"role": "assistant", "content": "*specialproblem"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given N qubits (1\u2009\u2264\u2009N\u2009\u2264\u20098) in zero state . \n\nYour task is to generate an equal superposition of all 2N basis vectors on N qubits:\n\nFor example,\n\nYou have to implement an operation which takes an array of N qubits as an input and has no output. The \"output\" of the operation is the state in which it leaves the qubits.\n\nYour code should have the following signature:"}, {"role": "assistant", "content": "*800"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given N qubits (1\u2009\u2264\u2009N\u2009\u2264\u20098) in zero state . You are also given a bitstring bits which describes a non-zero basis state on N qubits .\n\nYour task is to generate a state which is an equal superposition of  and the given basis state:\n\nYou have to implement an operation which takes the following inputs:\n\nThe operation doesn't have an output; its \"output\" is the state in which it leaves the qubits.\n\nAn array of boolean values represents a basis state as follows: the i-th element of the array is true if the i-th qubit is in state , and false if it is in state . For example, array [true; false] describes 2-qubit state , and in this case the resulting state should be .\n\nYour code should have the following signature:"}, {"role": "assistant", "content": "*1300"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given N qubits (1\u2009\u2264\u2009N\u2009\u2264\u20098) in zero state . You are also given two bitstrings bits0 and bits1 which describe two different basis states on N qubits  and .\n\nYour task is to generate a state which is an equal superposition of the given basis states:\n\nYou have to implement an operation which takes the following inputs:\n\nThe operation doesn't have an output; its \"output\" is the state in which it leaves the qubits.\n\nYour code should have the following signature:"}, {"role": "assistant", "content": "*1500"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given N\u2009=\u20092k qubits (0\u2009\u2264\u2009k\u2009\u2264\u20094) in zero state . Your task is to create a generalized W state on them. Generalized W state is an equal superposition of all basis states on N qubits that have Hamming weight equal to 1:\n\nFor example, for N\u2009=\u20091, .\n\nYou have to implement an operation which takes an array of N qubits as an input and has no output. The \"output\" of the operation is the state in which it leaves the qubits.\n\nYour code should have the following signature:"}, {"role": "assistant", "content": "*1900"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given N qubits (2\u2009\u2264\u2009N\u2009\u2264\u20098) which are guaranteed to be in one of the two states:\n\nYour task is to perform necessary operations and measurements to figure out which state it was and to return 0 if it was  state or 1 if it was W state. The state of the qubits after the operations does not matter.\n\nYou have to implement an operation which takes an array of N qubits as an input and returns an integer. \n\nYour code should have the following signature:"}, {"role": "assistant", "content": "*1300"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given N qubits (2\u2009\u2264\u2009N\u2009\u2264\u20098) which are guaranteed to be in one of the two states:\n\nYour task is to perform necessary operations and measurements to figure out which state it was and to return 0 if it was GHZ state or 1 if it was W state. The state of the qubits after the operations does not matter.\n\nYou have to implement an operation which takes an array of N qubits as an input and returns an integer. \n\nYour code should have the following signature:"}, {"role": "assistant", "content": "*1600"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given 2 qubits which are guaranteed to be in one of the four orthogonal states:\n\nYour task is to perform necessary operations and measurements to figure out which state it was and to return the index of that state (0 for , 1 for  etc.). The state of the qubits after the operations does not matter.\n\nYou have to implement an operation which takes an array of 2 qubits as an input and returns an integer. \n\nYour code should have the following signature:"}, {"role": "assistant", "content": "*1600"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given 2 qubits which are guaranteed to be in one of the four orthogonal states:\n\nYour task is to perform necessary operations and measurements to figure out which state it was and to return the index of that state (0 for , 1 for  etc.). The state of the qubits after the operations does not matter.\n\nYou have to implement an operation which takes an array of 2 qubits as an input and returns an integer. \n\nYour code should have the following signature:"}, {"role": "assistant", "content": "*1700"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given a qubit which is guaranteed to be either in  state or in  state. \n\nYour task is to perform necessary operations and measurements to figure out which state it was and to return 0 if it was a  state or 1 if it was  state. The state of the qubit after the operations does not matter.\n\nNote that these states are not orthogonal, and thus can not be distinguished perfectly. In each test your solution will be called 1000 times, and your goal is to get a correct answer at least 80% of the times. In each test  and  states will be provided with 50% probability.\n\nYou have to implement an operation which takes a qubit as an input and returns an integer. \n\nYour code should have the following signature:"}, {"role": "assistant", "content": "*1700"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given a qubit which is guaranteed to be either in  state or in  state. \n\nYour task is to perform necessary operations and measurements to figure out which state it was and to return 0 if it was a  state, 1 if it was  state or -1 if you can not decide, i.e., an \"inconclusive\" result. The state of the qubit after the operations does not matter.\n\nNote that these states are not orthogonal, and thus can not be distinguished perfectly. In each test your solution will be called 10000 times, and your goals are:\n\nIn each test  and  states will be provided with 50% probability.\n\nYou have to implement an operation which takes a qubit as an input and returns an integer. \n\nYour code should have the following signature:"}, {"role": "assistant", "content": "*1800"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Implement a quantum oracle on N qubits which implements the following function: , where  (a vector of N integers, each of which can be 0 or 1).\n\nFor an explanation on how this type of quantum oracles works, see Introduction to quantum oracles.\n\nYou have to implement an operation which takes the following inputs:\n\nThe operation doesn't have an output; its \"output\" is the state in which it leaves the qubits.\n\nYour code should have the following signature:"}, {"role": "assistant", "content": "*1200"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Implement a quantum oracle on N qubits which implements the following function: \n\nHere  (a vector of N integers, each of which can be 0 or 1), and  is a vector of N 1s.\n\nFor an explanation on how this type of quantum oracles works, see Introduction to quantum oracles.\n\nYou have to implement an operation which takes the following inputs:\n\nThe operation doesn't have an output; its \"output\" is the state in which it leaves the qubits.\n\nYour code should have the following signature:"}, {"role": "assistant", "content": "*1300"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Implement a quantum oracle on 3 qubits which implements a majority function. Majority function on 3-bit vectors is defined as follows:  if vector  has two or three 1s, and 0 if it has zero or one 1s.\n\nFor an explanation on how this type of quantum oracles works, see Introduction to quantum oracles.\n\nYou have to implement an operation which takes the following inputs:\n\nThe operation doesn't have an output; its \"output\" is the state in which it leaves the qubits.\n\nYour code should have the following signature:"}, {"role": "assistant", "content": "*1600"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given a quantum oracle - an operation on N\u2009+\u20091 qubits which implements a function . You are guaranteed that the function f implemented by the oracle is scalar product function (oracle from problem D1): \n\nHere  (an array of N integers, each of which can be 0 or 1). \n\nYour task is to reconstruct the array . Your code is allowed to call the given oracle only once.\n\nYou have to implement an operation which takes the following inputs:\n\nThe return of your operation is an array of integers of length N, each of them 0 or 1.\n\nYour code should have the following signature:"}, {"role": "assistant", "content": "*1500"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given a quantum oracle - an operation on N\u2009+\u20091 qubits which implements a function . You are guaranteed that the function f implemented by the oracle can be represented in the following form (oracle from problem D2):\n\nHere  (a vector of N integers, each of which can be 0 or 1), and  is a vector of N 1s.\n\nYour task is to reconstruct the array  which could produce the given oracle. Your code is allowed to call the given oracle only once.\n\nYou have to implement an operation which takes the following inputs:\n\nThe return of your operation is an array of integers of length N, each of them 0 or 1.\n\nNote that in this problem we're comparing the oracle generated by your return to the oracle Uf, instead of comparing your return to the (hidden) value of  used to generate Uf. This means that any kind of incorrect return results in \"Runtime Error\" verdict, as well as actual runtime errors like releasing qubits in non-zero state.\n\nYour code should have the following signature:"}, {"role": "assistant", "content": "*1900"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Polycarp has $$$n$$$ coins, the value of the $$$i$$$-th coin is $$$a_i$$$. Polycarp wants to distribute all the coins between his pockets, but he cannot put two coins with the same value into the same pocket.\n\nFor example, if Polycarp has got six coins represented as an array $$$a = [1, 2, 4, 3, 3, 2]$$$, he can distribute the coins into two pockets as follows: $$$[1, 2, 3], [2, 3, 4]$$$.\n\nPolycarp wants to distribute all the coins with the minimum number of used pockets. Help him to do that.\n\nThe first line of the input contains one integer $$$n$$$ ($$$1 \\le n \\le 100$$$) \u2014 the number of coins.\n\nThe second line of the input contains $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$ ($$$1 \\le a_i \\le 100$$$) \u2014 values of coins.\n\nPrint only one integer \u2014 the minimum number of pockets Polycarp needs to distribute all the coins so no two coins with the same value are put into the same pocket."}, {"role": "assistant", "content": "implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given three integers $$$a$$$, $$$b$$$ and $$$x$$$. Your task is to construct a binary string $$$s$$$ of length $$$n = a + b$$$ such that there are exactly $$$a$$$ zeroes, exactly $$$b$$$ ones and exactly $$$x$$$ indices $$$i$$$ (where $$$1 \\le i < n$$$) such that $$$s_i \\ne s_{i + 1}$$$. It is guaranteed that the answer always exists.\n\nFor example, for the string \"01010\" there are four indices $$$i$$$ such that $$$1 \\le i < n$$$ and $$$s_i \\ne s_{i + 1}$$$ ($$$i = 1, 2, 3, 4$$$). For the string \"111001\" there are two such indices $$$i$$$ ($$$i = 3, 5$$$).\n\nRecall that binary string is a non-empty sequence of characters where each character is either 0 or 1.\n\nThe first line of the input contains three integers $$$a$$$, $$$b$$$ and $$$x$$$ ($$$1 \\le a, b \\le 100, 1 \\le x < a + b)$$$.\n\nPrint only one string $$$s$$$, where $$$s$$$ is any binary string satisfying conditions described above. It is guaranteed that the answer always exists.\n\nAll possible answers for the first example: \n\nAll possible answers for the second example: "}, {"role": "assistant", "content": "constructivealgorithms"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The heat during the last few days has been really intense. Scientists from all over the Berland study how the temperatures and weather change, and they claim that this summer is abnormally hot. But any scientific claim sounds a lot more reasonable if there are some numbers involved, so they have decided to actually calculate some value which would represent how high the temperatures are.\n\nMathematicians of Berland State University came up with a special heat intensity value. This value is calculated as follows:\n\nSuppose we want to analyze the segment of $$$n$$$ consecutive days. We have measured the temperatures during these $$$n$$$ days; the temperature during $$$i$$$-th day equals $$$a_i$$$.\n\nWe denote the average temperature of a segment of some consecutive days as the arithmetic mean of the temperature measures during this segment of days. So, if we want to analyze the average temperature from day $$$x$$$ to day $$$y$$$, we calculate it as $$$\\frac{\\sum \\limits_{i = x}^{y} a_i}{y - x + 1}$$$ (note that division is performed without any rounding). The heat intensity value is the maximum of average temperatures over all segments of not less than $$$k$$$ consecutive days. For example, if analyzing the measures $$$[3, 4, 1, 2]$$$ and $$$k = 3$$$, we are interested in segments $$$[3, 4, 1]$$$, $$$[4, 1, 2]$$$ and $$$[3, 4, 1, 2]$$$ (we want to find the maximum value of average temperature over these segments).\n\nYou have been hired by Berland State University to write a program that would compute the heat intensity value of a given period of days. Are you up to this task?\n\nThe first line contains two integers $$$n$$$ and $$$k$$$ ($$$1 \\le k \\le n \\le 5000$$$) \u2014 the number of days in the given period, and the minimum number of days in a segment we consider when calculating heat intensity value, respectively.\n\nThe second line contains $$$n$$$ integers $$$a_1$$$, $$$a_2$$$, ..., $$$a_n$$$ ($$$1 \\le a_i \\le 5000$$$) \u2014 the temperature measures during given $$$n$$$ days.\n\nPrint one real number \u2014 the heat intensity value, i. e., the maximum of average temperatures over all segments of not less than $$$k$$$ consecutive days.\n\nYour answer will be considered correct if the following condition holds: $$$|res - res_0| < 10^{-6}$$$, where $$$res$$$ is your answer, and $$$res_0$$$ is the answer given by the jury's solution."}, {"role": "assistant", "content": "bruteforce, implementation, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Polycarp has $$$n$$$ coins, the value of the $$$i$$$-th coin is $$$a_i$$$. It is guaranteed that all the values are integer powers of $$$2$$$ (i.e. $$$a_i = 2^d$$$ for some non-negative integer number $$$d$$$).\n\nPolycarp wants to know answers on $$$q$$$ queries. The $$$j$$$-th query is described as integer number $$$b_j$$$. The answer to the query is the minimum number of coins that is necessary to obtain the value $$$b_j$$$ using some subset of coins (Polycarp can use only coins he has). If Polycarp can't obtain the value $$$b_j$$$, the answer to the $$$j$$$-th query is -1.\n\nThe queries are independent (the answer on the query doesn't affect Polycarp's coins).\n\nThe first line of the input contains two integers $$$n$$$ and $$$q$$$ ($$$1 \\le n, q \\le 2 \\cdot 10^5$$$) \u2014 the number of coins and the number of queries.\n\nThe second line of the input contains $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$ \u2014 values of coins ($$$1 \\le a_i \\le 2 \\cdot 10^9$$$). It is guaranteed that all $$$a_i$$$ are integer powers of $$$2$$$ (i.e. $$$a_i = 2^d$$$ for some non-negative integer number $$$d$$$).\n\nThe next $$$q$$$ lines contain one integer each. The $$$j$$$-th line contains one integer $$$b_j$$$ \u2014 the value of the $$$j$$$-th query ($$$1 \\le b_j \\le 10^9$$$).\n\nPrint $$$q$$$ integers $$$ans_j$$$. The $$$j$$$-th integer must be equal to the answer on the $$$j$$$-th query. If Polycarp can't obtain the value $$$b_j$$$ the answer to the $$$j$$$-th query is -1."}, {"role": "assistant", "content": "greedy"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given three integers $$$n$$$, $$$d$$$ and $$$k$$$.\n\nYour task is to construct an undirected tree on $$$n$$$ vertices with diameter $$$d$$$ and degree of each vertex at most $$$k$$$, or say that it is impossible.\n\nAn undirected tree is a connected undirected graph with $$$n - 1$$$ edges.\n\nDiameter of a tree is the maximum length of a simple path (a path in which each vertex appears at most once) between all pairs of vertices of this tree.\n\nDegree of a vertex is the number of edges incident to this vertex (i.e. for a vertex $$$u$$$ it is the number of edges $$$(u, v)$$$ that belong to the tree, where $$$v$$$ is any other vertex of a tree).\n\nThe first line of the input contains three integers $$$n$$$, $$$d$$$ and $$$k$$$ ($$$1 \\le n, d, k \\le 4 \\cdot 10^5$$$).\n\nIf there is no tree satisfying the conditions above, print only one word \"NO\" (without quotes).\n\nOtherwise in the first line print \"YES\" (without quotes), and then print $$$n - 1$$$ lines describing edges of a tree satisfying the conditions above. Vertices of the tree must be numbered from $$$1$$$ to $$$n$$$. You can print edges and vertices connected by an edge in any order. If there are multiple answers, print any of them.1"}, {"role": "assistant", "content": "constructivealgorithms, graphs"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given a text consisting of $$$n$$$ space-separated words. There is exactly one space character between any pair of adjacent words. There are no spaces before the first word and no spaces after the last word. The length of text is the number of letters and spaces in it. $$$w_i$$$ is the $$$i$$$-th word of text. All words consist only of lowercase Latin letters.\n\nLet's denote a segment of words $$$w[i..j]$$$ as a sequence of words $$$w_i, w_{i + 1}, \\dots, w_j$$$. Two segments of words $$$w[i_1 .. j_1]$$$ and $$$w[i_2 .. j_2]$$$ are considered equal if $$$j_1 - i_1 = j_2 - i_2$$$, $$$j_1 \\ge i_1$$$, $$$j_2 \\ge i_2$$$, and for every $$$t \\in [0, j_1 - i_1]$$$ $$$w_{i_1 + t} = w_{i_2 + t}$$$. For example, for the text \"to be or not to be\" the segments $$$w[1..2]$$$ and $$$w[5..6]$$$ are equal, they correspond to the words \"to be\".\n\nAn abbreviation is a replacement of some segments of words with their first uppercase letters. In order to perform an abbreviation, you have to choose at least two non-intersecting equal segments of words, and replace each chosen segment with the string consisting of first letters of the words in the segment (written in uppercase). For example, for the text \"a ab a a b ab a a b c\" you can replace segments of words $$$w[2..4]$$$ and $$$w[6..8]$$$ with an abbreviation \"AAA\" and obtain the text \"a AAA b AAA b c\", or you can replace segments of words $$$w[2..5]$$$ and $$$w[6..9]$$$ with an abbreviation \"AAAB\" and obtain the text \"a AAAB AAAB c\".\n\nWhat is the minimum length of the text after at most one abbreviation?\n\nThe first line of the input contains one integer $$$n$$$ ($$$1 \\le n \\le 300$$$) \u2014 the number of words in the text.\n\nThe next line contains $$$n$$$ space-separated words of the text $$$w_1, w_2, \\dots, w_n$$$. Each word consists only of lowercase Latin letters.\n\nIt is guaranteed that the length of text does not exceed $$$10^5$$$.\n\nPrint one integer \u2014 the minimum length of the text after at most one abbreviation.\n\nIn the first example you can obtain the text \"TB or not TB\".\n\nIn the second example you can obtain the text \"a AAAB AAAB c\".\n\nIn the third example you can obtain the text \"AB aa AB bb\"."}, {"role": "assistant", "content": "dp, hashing, strings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Sonya decided that having her own hotel business is the best way of earning money because she can profit and rest wherever she wants.\n\nThe country where Sonya lives is an endless line. There is a city in each integer coordinate on this line. She has $$$n$$$ hotels, where the $$$i$$$-th hotel is located in the city with coordinate $$$x_i$$$. Sonya is a smart girl, so she does not open two or more hotels in the same city.\n\nSonya understands that her business needs to be expanded by opening new hotels, so she decides to build one more. She wants to make the minimum distance from this hotel to all others to be equal to $$$d$$$. The girl understands that there are many possible locations to construct such a hotel. Thus she wants to know the number of possible coordinates of the cities where she can build a new hotel. \n\nBecause Sonya is lounging in a jacuzzi in one of her hotels, she is asking you to find the number of cities where she can build a new hotel so that the minimum distance from the original $$$n$$$ hotels to the new one is equal to $$$d$$$.\n\nThe first line contains two integers $$$n$$$ and $$$d$$$ ($$$1\\leq n\\leq 100$$$, $$$1\\leq d\\leq 10^9$$$)\u00a0\u2014 the number of Sonya's hotels and the needed minimum distance from a new hotel to all others.\n\nThe second line contains $$$n$$$ different integers in strictly increasing order $$$x_1, x_2, \\ldots, x_n$$$ ($$$-10^9\\leq x_i\\leq 10^9$$$)\u00a0\u2014 coordinates of Sonya's hotels.\n\nPrint the number of cities where Sonya can build a new hotel so that the minimum distance from this hotel to all others is equal to $$$d$$$.\n\nIn the first example, there are $$$6$$$ possible cities where Sonya can build a hotel. These cities have coordinates $$$-6$$$, $$$5$$$, $$$6$$$, $$$12$$$, $$$13$$$, and $$$19$$$.\n\nIn the second example, there are $$$5$$$ possible cities where Sonya can build a hotel. These cities have coordinates $$$2$$$, $$$6$$$, $$$13$$$, $$$16$$$, and $$$21$$$."}, {"role": "assistant", "content": "implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Sonya decided to organize an exhibition of flowers. Since the girl likes only roses and lilies, she decided that only these two kinds of flowers should be in this exhibition.\n\nThere are $$$n$$$ flowers in a row in the exhibition. Sonya can put either a rose or a lily in the $$$i$$$-th position. Thus each of $$$n$$$ positions should contain exactly one flower: a rose or a lily.\n\nShe knows that exactly $$$m$$$ people will visit this exhibition. The $$$i$$$-th visitor will visit all flowers from $$$l_i$$$ to $$$r_i$$$ inclusive. The girl knows that each segment has its own beauty that is equal to the product of the number of roses and the number of lilies.\n\nSonya wants her exhibition to be liked by a lot of people. That is why she wants to put the flowers in such way that the sum of beauties of all segments would be maximum possible.\n\nThe first line contains two integers $$$n$$$ and $$$m$$$ ($$$1\\leq n, m\\leq 10^3$$$)\u00a0\u2014 the number of flowers and visitors respectively.\n\nEach of the next $$$m$$$ lines contains two integers $$$l_i$$$ and $$$r_i$$$ ($$$1\\leq l_i\\leq r_i\\leq n$$$), meaning that $$$i$$$-th visitor will visit all flowers from $$$l_i$$$ to $$$r_i$$$ inclusive.\n\nPrint the string of $$$n$$$ characters. The $$$i$$$-th symbol should be \u00ab0\u00bb if you want to put a rose in the $$$i$$$-th position, otherwise \u00ab1\u00bb if you want to put a lily.\n\nIf there are multiple answers, print any.\n\nIn the first example, Sonya can put roses in the first, fourth, and fifth positions, and lilies in the second and third positions;\n\nThe total beauty is equal to $$$2+2+4=8$$$.\n\nIn the second example, Sonya can put roses in the third, fourth, and sixth positions, and lilies in the first, second, and fifth positions;\n\nThe total beauty is equal to $$$1+4+2=7$$$."}, {"role": "assistant", "content": "constructivealgorithms, greedy, implementation, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Since Sonya is interested in robotics too, she decided to construct robots that will read and recognize numbers.\n\nSonya has drawn $$$n$$$ numbers in a row, $$$a_i$$$ is located in the $$$i$$$-th position. She also has put a robot at each end of the row (to the left of the first number and to the right of the last number). Sonya will give a number to each robot (they can be either same or different) and run them. When a robot is running, it is moving toward to another robot, reading numbers in the row. When a robot is reading a number that is equal to the number that was given to that robot, it will turn off and stay in the same position.\n\nSonya does not want robots to break, so she will give such numbers that robots will stop before they meet. That is, the girl wants them to stop at different positions so that the first robot is to the left of the second one.\n\nFor example, if the numbers $$$[1, 5, 4, 1, 3]$$$ are written, and Sonya gives the number $$$1$$$ to the first robot and the number $$$4$$$ to the second one, the first robot will stop in the $$$1$$$-st position while the second one in the $$$3$$$-rd position. In that case, robots will not meet each other. As a result, robots will not be broken. But if Sonya gives the number $$$4$$$ to the first robot and the number $$$5$$$ to the second one, they will meet since the first robot will stop in the $$$3$$$-rd position while the second one is in the $$$2$$$-nd position.\n\nSonya understands that it does not make sense to give a number that is not written in the row because a robot will not find this number and will meet the other robot.\n\nSonya is now interested in finding the number of different pairs that she can give to robots so that they will not meet. In other words, she wants to know the number of pairs ($$$p$$$, $$$q$$$), where she will give $$$p$$$ to the first robot and $$$q$$$ to the second one. Pairs ($$$p_i$$$, $$$q_i$$$) and ($$$p_j$$$, $$$q_j$$$) are different if $$$p_i\\neq p_j$$$ or $$$q_i\\neq q_j$$$.\n\nUnfortunately, Sonya is busy fixing robots that broke after a failed launch. That is why she is asking you to find the number of pairs that she can give to robots so that they will not meet.\n\nThe first line contains a single integer $$$n$$$ ($$$1\\leq n\\leq 10^5$$$)\u00a0\u2014 the number of numbers in a row.\n\nThe second line contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$1\\leq a_i\\leq 10^5$$$)\u00a0\u2014 the numbers in a row.\n\nPrint one number\u00a0\u2014 the number of possible pairs that Sonya can give to robots so that they will not meet.\n\nIn the first example, Sonya can give pairs ($$$1$$$, $$$1$$$), ($$$1$$$, $$$3$$$), ($$$1$$$, $$$4$$$), ($$$1$$$, $$$5$$$), ($$$4$$$, $$$1$$$), ($$$4$$$, $$$3$$$), ($$$5$$$, $$$1$$$), ($$$5$$$, $$$3$$$), and ($$$5$$$, $$$4$$$).\n\nIn the second example, Sonya can give pairs ($$$1$$$, $$$1$$$), ($$$1$$$, $$$2$$$), ($$$1$$$, $$$3$$$), ($$$2$$$, $$$1$$$), ($$$2$$$, $$$2$$$), ($$$2$$$, $$$3$$$), and ($$$3$$$, $$$2$$$)."}, {"role": "assistant", "content": "constructivealgorithms, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Since Sonya has just learned the basics of matrices, she decided to play with them a little bit.\n\nSonya imagined a new type of matrices that she called rhombic matrices. These matrices have exactly one zero, while all other cells have the Manhattan distance to the cell containing the zero. The cells with equal numbers have the form of a rhombus, that is why Sonya called this type so.\n\nThe Manhattan distance between two cells ($$$x_1$$$, $$$y_1$$$) and ($$$x_2$$$, $$$y_2$$$) is defined as $$$|x_1 - x_2| + |y_1 - y_2|$$$. For example, the Manhattan distance between the cells $$$(5, 2)$$$ and $$$(7, 1)$$$ equals to $$$|5-7|+|2-1|=3$$$.\n\nNote that rhombic matrices are uniquely defined by $$$n$$$, $$$m$$$, and the coordinates of the cell containing the zero.\n\nShe drew a $$$n\\times m$$$ rhombic matrix. She believes that you can not recreate the matrix if she gives you only the elements of this matrix in some arbitrary order (i.e., the sequence of $$$n\\cdot m$$$ numbers). Note that Sonya will not give you $$$n$$$ and $$$m$$$, so only the sequence of numbers in this matrix will be at your disposal.\n\nWrite a program that finds such an $$$n\\times m$$$ rhombic matrix whose elements are the same as the elements in the sequence in some order.\n\nThe first line contains a single integer $$$t$$$ ($$$1\\leq t\\leq 10^6$$$)\u00a0\u2014 the number of cells in the matrix.\n\nThe second line contains $$$t$$$ integers $$$a_1, a_2, \\ldots, a_t$$$ ($$$0\\leq a_i< t$$$)\u00a0\u2014 the values in the cells in arbitrary order.\n\nIn the first line, print two positive integers $$$n$$$ and $$$m$$$ ($$$n \\times m = t$$$)\u00a0\u2014 the size of the matrix.\n\nIn the second line, print two integers $$$x$$$ and $$$y$$$ ($$$1\\leq x\\leq n$$$, $$$1\\leq y\\leq m$$$)\u00a0\u2014 the row number and the column number where the cell with $$$0$$$ is located.\n\nIf there are multiple possible answers, print any of them. If there is no solution, print the single integer $$$-1$$$.\n\nYou can see the solution to the first example in the legend. You also can choose the cell $$$(2, 2)$$$ for the cell where $$$0$$$ is located. You also can choose a $$$5\\times 4$$$ matrix with zero at $$$(4, 2)$$$.\n\nIn the second example, there is a $$$3\\times 6$$$ matrix, where the zero is located at $$$(2, 3)$$$ there.\n\nIn the third example, a solution does not exist."}, {"role": "assistant", "content": "bruteforce, constructivealgorithms, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Sonya likes ice cream very much. She eats it even during programming competitions. That is why the girl decided that she wants to open her own ice cream shops.\n\nSonya lives in a city with $$$n$$$ junctions and $$$n-1$$$ streets between them. All streets are two-way and connect two junctions. It is possible to travel from any junction to any other using one or more streets. City Hall allows opening shops only on junctions. The girl cannot open shops in the middle of streets. \n\nSonya has exactly $$$k$$$ friends whom she can trust. If she opens a shop, one of her friends has to work there and not to allow anybody to eat an ice cream not paying for it. Since Sonya does not want to skip an important competition, she will not work in shops personally.\n\nSonya wants all her ice cream shops to form a simple path of the length $$$r$$$ ($$$1 \\le r \\le k$$$), i.e. to be located in different junctions $$$f_1, f_2, \\dots, f_r$$$ and there is street between $$$f_i$$$ and $$$f_{i+1}$$$ for each $$$i$$$ from $$$1$$$ to $$$r-1$$$.\n\nThe girl takes care of potential buyers, so she also wants to minimize the maximum distance between the junctions to the nearest ice cream shop. The distance between two junctions $$$a$$$ and $$$b$$$ is equal to the sum of all the street lengths that you need to pass to get from the junction $$$a$$$ to the junction $$$b$$$. So Sonya wants to minimize\n\n$$$$$$\\max_{a} \\min_{1 \\le i \\le r} d_{a,f_i}$$$$$$\n\nwhere $$$a$$$ takes a value of all possible $$$n$$$ junctions, $$$f_i$$$\u00a0\u2014 the junction where the $$$i$$$-th Sonya's shop is located, and $$$d_{x,y}$$$\u00a0\u2014 the distance between the junctions $$$x$$$ and $$$y$$$.\n\nSonya is not sure that she can find the optimal shops locations, that is why she is asking you to help her to open not more than $$$k$$$ shops that will form a simple path and the maximum distance between any junction and the nearest shop would be minimal. \n\nThe first line contains two integers $$$n$$$ and $$$k$$$ ($$$1\\leq k\\leq n\\leq 10^5$$$)\u00a0\u2014 the number of junctions and friends respectively.\n\nEach of the next $$$n-1$$$ lines contains three integers $$$u_i$$$, $$$v_i$$$, and $$$d_i$$$ ($$$1\\leq u_i, v_i\\leq n$$$, $$$v_i\\neq u_i$$$, $$$1\\leq d\\leq 10^4$$$)\u00a0\u2014 junctions that are connected by a street and the length of this street. It is guaranteed that each pair of junctions is connected by at most one street. It is guaranteed that you can get from any junctions to any other.\n\nPrint one number\u00a0\u2014 the minimal possible maximum distance that you need to pass to get from any junction to the nearest ice cream shop. Sonya's shops must form a simple path and the number of shops must be at most $$$k$$$.\n\nIn the first example, you can choose the path 2-4, so the answer will be 4.\n\nIn the second example, you can choose the path 4-1-2, so the answer will be 7."}, {"role": "assistant", "content": "binarysearch, datastructures, dp, greedy, shortestpaths, trees"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Sonya has an array $$$a_1, a_2, \\ldots, a_n$$$ consisting of $$$n$$$ integers and also one non-negative integer $$$x$$$. She has to perform $$$m$$$ queries of two types:\n\nCan you help Sonya perform all her queries?\n\nBitwise OR is a binary operation on a pair of non-negative integers. To calculate the bitwise OR of two numbers, you need to write both numbers in binary notation. The result is a number, in binary, which contains a one in each digit if there is a one in the binary notation of at least one of the two numbers. For example, $$$10$$$ OR $$$19$$$ = $$$1010_2$$$ OR $$$10011_2$$$ = $$$11011_2$$$ = $$$27$$$.\n\nThe first line contains three integers $$$n$$$, $$$m$$$, and $$$x$$$ ($$$1\\leq n, m\\leq 10^5$$$, $$$0\\leq x<2^{20}$$$)\u00a0\u2014 the number of numbers, the number of queries, and the constant for all queries.\n\nThe second line contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$0\\leq a_i<2^{20}$$$)\u00a0\u2014 numbers of the array.\n\nThe following $$$m$$$ lines each describe an query. A line has one of the following formats:\n\nFor each query of type 2, print the number of subarrays such that the bitwise OR of all the numbers in the range is at least $$$x$$$.\n\nIn the first example, there are an array [$$$0$$$, $$$3$$$, $$$6$$$, $$$1$$$] and queries: \n\nIn the second example, there are an array [$$$6$$$, $$$0$$$, $$$3$$$, $$$15$$$, $$$2$$$] are queries: "}, {"role": "assistant", "content": "bitmasks, datastructures, divideandconquer"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Little girl Tanya climbs the stairs inside a multi-storey building. Every time Tanya climbs a stairway, she starts counting steps from $$$1$$$ to the number of steps in this stairway. She speaks every number aloud. For example, if she climbs two stairways, the first of which contains $$$3$$$ steps, and the second contains $$$4$$$ steps, she will pronounce the numbers $$$1, 2, 3, 1, 2, 3, 4$$$.\n\nYou are given all the numbers pronounced by Tanya. How many stairways did she climb? Also, output the number of steps in each stairway.\n\nThe given sequence will be a valid sequence that Tanya could have pronounced when climbing one or more stairways.\n\nThe first line contains $$$n$$$ ($$$1 \\le n \\le 1000$$$) \u2014 the total number of numbers pronounced by Tanya.\n\nThe second line contains integers $$$a_1, a_2, \\dots, a_n$$$ ($$$1 \\le a_i \\le 1000$$$) \u2014 all the numbers Tanya pronounced while climbing the stairs, in order from the first to the last pronounced number. Passing a stairway with $$$x$$$ steps, she will pronounce the numbers $$$1, 2, \\dots, x$$$ in that order.\n\nThe given sequence will be a valid sequence that Tanya could have pronounced when climbing one or more stairways.\n\nIn the first line, output $$$t$$$ \u2014 the number of stairways that Tanya climbed. In the second line, output $$$t$$$ numbers \u2014 the number of steps in each stairway she climbed. Write the numbers in the correct order of passage of the stairways."}, {"role": "assistant", "content": "implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given two strings $$$s$$$ and $$$t$$$. In a single move, you can choose any of two strings and delete the first (that is, the leftmost) character. After a move, the length of the string decreases by $$$1$$$. You can't choose a string if it is empty.\n\nFor example:\n\nYou are required to make two given strings equal using the fewest number of moves. It is possible that, in the end, both strings will be equal to the empty string, and so, are equal to each other. In this case, the answer is obviously the sum of the lengths of the initial strings.\n\nWrite a program that finds the minimum number of moves to make two given strings $$$s$$$ and $$$t$$$ equal.\n\nThe first line of the input contains $$$s$$$. In the second line of the input contains $$$t$$$. Both strings consist only of lowercase Latin letters. The number of letters in each string is between 1 and $$$2\\cdot10^5$$$, inclusive.\n\nOutput the fewest number of moves required. It is possible that, in the end, both strings will be equal to the empty string, and so, are equal to each other. In this case, the answer is obviously the sum of the lengths of the given strings.\n\nIn the first example, you should apply the move once to the first string and apply the move once to the second string. As a result, both strings will be equal to \"est\".\n\nIn the second example, the move should be applied to the string \"codeforces\" $$$8$$$ times. As a result, the string becomes \"codeforces\" $$$\\to$$$ \"es\". The move should be applied to the string \"yes\" once. The result is the same string \"yes\" $$$\\to$$$ \"es\".\n\nIn the third example, you can make the strings equal only by completely deleting them. That is, in the end, both strings will be empty.\n\nIn the fourth example, the first character of the second string should be deleted."}, {"role": "assistant", "content": "bruteforce, implementation, strings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "A sequence $$$a_1, a_2, \\dots, a_n$$$ is called good if, for each element $$$a_i$$$, there exists an element $$$a_j$$$ ($$$i \\ne j$$$) such that $$$a_i+a_j$$$ is a power of two (that is, $$$2^d$$$ for some non-negative integer $$$d$$$).\n\nFor example, the following sequences are good:\n\nNote that, by definition, an empty sequence (with a length of $$$0$$$) is good.\n\nFor example, the following sequences are not good:\n\nYou are given a sequence $$$a_1, a_2, \\dots, a_n$$$. What is the minimum number of elements you need to remove to make it good? You can delete an arbitrary set of elements.\n\nThe first line contains the integer $$$n$$$ ($$$1 \\le n \\le 120000$$$) \u2014 the length of the given sequence.\n\nThe second line contains the sequence of integers $$$a_1, a_2, \\dots, a_n$$$ ($$$1 \\le a_i \\le 10^9$$$).\n\nPrint the minimum number of elements needed to be removed from the given sequence in order to make it good. It is possible that you need to delete all $$$n$$$ elements, make it empty, and thus get a good sequence.\n\nIn the first example, it is enough to delete one element $$$a_4=5$$$. The remaining elements form the sequence $$$[4, 7, 1, 4, 9]$$$, which is good."}, {"role": "assistant", "content": "bruteforce, greedy, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Polycarp likes numbers that are divisible by 3.\n\nHe has a huge number $$$s$$$. Polycarp wants to cut from it the maximum number of numbers that are divisible by $$$3$$$. To do this, he makes an arbitrary number of vertical cuts between pairs of adjacent digits. As a result, after $$$m$$$ such cuts, there will be $$$m+1$$$ parts in total. Polycarp analyzes each of the obtained numbers and finds the number of those that are divisible by $$$3$$$.\n\nFor example, if the original number is $$$s=3121$$$, then Polycarp can cut it into three parts with two cuts: $$$3|1|21$$$. As a result, he will get two numbers that are divisible by $$$3$$$.\n\nPolycarp can make an arbitrary number of vertical cuts, where each cut is made between a pair of adjacent digits. The resulting numbers cannot contain extra leading zeroes (that is, the number can begin with 0 if and only if this number is exactly one character '0'). For example, 007, 01 and 00099 are not valid numbers, but 90, 0 and 10001 are valid.\n\nWhat is the maximum number of numbers divisible by $$$3$$$ that Polycarp can obtain?\n\nThe first line of the input contains a positive integer $$$s$$$. The number of digits of the number $$$s$$$ is between $$$1$$$ and $$$2\\cdot10^5$$$, inclusive. The first (leftmost) digit is not equal to 0.\n\nPrint the maximum number of numbers divisible by $$$3$$$ that Polycarp can get by making vertical cuts in the given number $$$s$$$.\n\nIn the first example, an example set of optimal cuts on the number is 3|1|21.\n\nIn the second example, you do not need to make any cuts. The specified number 6 forms one number that is divisible by $$$3$$$.\n\nIn the third example, cuts must be made between each pair of digits. As a result, Polycarp gets one digit 1 and $$$33$$$ digits 0. Each of the $$$33$$$ digits 0 forms a number that is divisible by $$$3$$$.\n\nIn the fourth example, an example set of optimal cuts is 2|0|1|9|201|81. The numbers $$$0$$$, $$$9$$$, $$$201$$$ and $$$81$$$ are divisible by $$$3$$$."}, {"role": "assistant", "content": "dp, greedy, numbertheory"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given a permutation $$$p_1, p_2, \\dots, p_n$$$. A permutation of length $$$n$$$ is a sequence such that each integer between $$$1$$$ and $$$n$$$ occurs exactly once in the sequence.\n\nFind the number of pairs of indices $$$(l, r)$$$ ($$$1 \\le l \\le r \\le n$$$) such that the value of the median of $$$p_l, p_{l+1}, \\dots, p_r$$$ is exactly the given number $$$m$$$.\n\nThe median of a sequence is the value of the element which is in the middle of the sequence after sorting it in non-decreasing order. If the length of the sequence is even, the left of two middle elements is used.\n\nFor example, if $$$a=[4, 2, 7, 5]$$$ then its median is $$$4$$$ since after sorting the sequence, it will look like $$$[2, 4, 5, 7]$$$ and the left of two middle elements is equal to $$$4$$$. The median of $$$[7, 1, 2, 9, 6]$$$ equals $$$6$$$ since after sorting, the value $$$6$$$ will be in the middle of the sequence.\n\nWrite a program to find the number of pairs of indices $$$(l, r)$$$ ($$$1 \\le l \\le r \\le n$$$) such that the value of the median of $$$p_l, p_{l+1}, \\dots, p_r$$$ is exactly the given number $$$m$$$.\n\nThe first line contains integers $$$n$$$ and $$$m$$$ ($$$1 \\le n \\le 2\\cdot10^5$$$, $$$1 \\le m \\le n$$$) \u2014 the length of the given sequence and the required value of the median.\n\nThe second line contains a permutation $$$p_1, p_2, \\dots, p_n$$$ ($$$1 \\le p_i \\le n$$$). Each integer between $$$1$$$ and $$$n$$$ occurs in $$$p$$$ exactly once.\n\nPrint the required number.\n\nIn the first example, the suitable pairs of indices are: $$$(1, 3)$$$, $$$(2, 2)$$$, $$$(2, 3)$$$ and $$$(2, 4)$$$."}, {"role": "assistant", "content": "sortings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given an integer sequence $$$a_1, a_2, \\dots, a_n$$$.\n\nFind the number of pairs of indices $$$(l, r)$$$ ($$$1 \\le l \\le r \\le n$$$) such that the value of median of $$$a_l, a_{l+1}, \\dots, a_r$$$ is exactly the given number $$$m$$$.\n\nThe median of a sequence is the value of an element which is in the middle of the sequence after sorting it in non-decreasing order. If the length of the sequence is even, the left of two middle elements is used.\n\nFor example, if $$$a=[4, 2, 7, 5]$$$ then its median is $$$4$$$ since after sorting the sequence, it will look like $$$[2, 4, 5, 7]$$$ and the left of two middle elements is equal to $$$4$$$. The median of $$$[7, 1, 2, 9, 6]$$$ equals $$$6$$$ since after sorting, the value $$$6$$$ will be in the middle of the sequence.\n\nWrite a program to find the number of pairs of indices $$$(l, r)$$$ ($$$1 \\le l \\le r \\le n$$$) such that the value of median of $$$a_l, a_{l+1}, \\dots, a_r$$$ is exactly the given number $$$m$$$.\n\nThe first line contains integers $$$n$$$ and $$$m$$$ ($$$1 \\le n,m \\le 2\\cdot10^5$$$) \u2014 the length of the given sequence and the required value of the median.\n\nThe second line contains an integer sequence $$$a_1, a_2, \\dots, a_n$$$ ($$$1 \\le a_i \\le 2\\cdot10^5$$$).\n\nPrint the required number.\n\nIn the first example, the suitable pairs of indices are: $$$(1, 3)$$$, $$$(1, 4)$$$, $$$(1, 5)$$$, $$$(2, 2)$$$, $$$(2, 3)$$$, $$$(2, 5)$$$, $$$(4, 5)$$$ and $$$(5, 5)$$$."}, {"role": "assistant", "content": "sortings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "There are $$$n$$$ cities in Berland. Some pairs of cities are connected by roads. All roads are bidirectional. Each road connects two different cities. There is at most one road between a pair of cities. The cities are numbered from $$$1$$$ to $$$n$$$.\n\nIt is known that, from the capital (the city with the number $$$1$$$), you can reach any other city by moving along the roads.\n\nThe President of Berland plans to improve the country's road network. The budget is enough to repair exactly $$$n-1$$$ roads. The President plans to choose a set of $$$n-1$$$ roads such that:\n\nIn other words, the set of $$$n-1$$$ roads should preserve the connectivity of the country, and the sum of distances from city $$$1$$$ to all cities should be minimized (where you can only use the $$$n-1$$$ chosen roads).\n\nThe president instructed the ministry to prepare $$$k$$$ possible options to choose $$$n-1$$$ roads so that both conditions above are met.\n\nWrite a program that will find $$$k$$$ possible ways to choose roads for repair. If there are fewer than $$$k$$$ ways, then the program should output all possible valid ways to choose roads.\n\nThe first line of the input contains integers $$$n$$$, $$$m$$$ and $$$k$$$ ($$$2 \\le n \\le 2\\cdot10^5, n-1 \\le m \\le 2\\cdot10^5, 1 \\le k \\le 2\\cdot10^5$$$), where $$$n$$$ is the number of cities in the country, $$$m$$$ is the number of roads and $$$k$$$ is the number of options to choose a set of roads for repair. It is guaranteed that $$$m \\cdot k \\le 10^6$$$.\n\nThe following $$$m$$$ lines describe the roads, one road per line. Each line contains two integers $$$a_i$$$, $$$b_i$$$ ($$$1 \\le a_i, b_i \\le n$$$, $$$a_i \\ne b_i$$$) \u2014 the numbers of the cities that the $$$i$$$-th road connects. There is at most one road between a pair of cities. The given set of roads is such that you can reach any city from the capital.\n\nPrint $$$t$$$ ($$$1 \\le t \\le k$$$) \u2014 the number of ways to choose a set of roads for repair. Recall that you need to find $$$k$$$ different options; if there are fewer than $$$k$$$ of them, then you need to find all possible different valid options.\n\nIn the following $$$t$$$ lines, print the options, one per line. Print an option as a string of $$$m$$$ characters where the $$$j$$$-th character is equal to '1' if the $$$j$$$-th road is included in the option, and is equal to '0' if the road is not included. The roads should be numbered according to their order in the input. The options can be printed in any order. All the $$$t$$$ lines should be different.\n\nSince it is guaranteed that $$$m \\cdot k \\le 10^6$$$, the total length of all the $$$t$$$ lines will not exceed $$$10^6$$$.\n\nIf there are several answers, output any of them."}, {"role": "assistant", "content": "bruteforce, dfsandsimilar, graphs, shortestpaths"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Mishka got an integer array $$$a$$$ of length $$$n$$$ as a birthday present (what a surprise!).\n\nMishka doesn't like this present and wants to change it somehow. He has invented an algorithm and called it \"Mishka's Adjacent Replacements Algorithm\". This algorithm can be represented as a sequence of steps:\n\nNote that the dots in the middle of this algorithm mean that Mishka applies these replacements for each pair of adjacent integers ($$$2i - 1, 2i$$$) for each $$$i \\in\\{1, 2, \\ldots, 5 \\cdot 10^8\\}$$$ as described above.\n\nFor example, for the array $$$a = [1, 2, 4, 5, 10]$$$, the following sequence of arrays represents the algorithm: \n\n$$$[1, 2, 4, 5, 10]$$$ $$$\\rightarrow$$$ (replace all occurrences of $$$1$$$ with $$$2$$$) $$$\\rightarrow$$$ $$$[2, 2, 4, 5, 10]$$$ $$$\\rightarrow$$$ (replace all occurrences of $$$2$$$ with $$$1$$$) $$$\\rightarrow$$$ $$$[1, 1, 4, 5, 10]$$$ $$$\\rightarrow$$$ (replace all occurrences of $$$3$$$ with $$$4$$$) $$$\\rightarrow$$$ $$$[1, 1, 4, 5, 10]$$$ $$$\\rightarrow$$$ (replace all occurrences of $$$4$$$ with $$$3$$$) $$$\\rightarrow$$$ $$$[1, 1, 3, 5, 10]$$$ $$$\\rightarrow$$$ (replace all occurrences of $$$5$$$ with $$$6$$$) $$$\\rightarrow$$$ $$$[1, 1, 3, 6, 10]$$$ $$$\\rightarrow$$$ (replace all occurrences of $$$6$$$ with $$$5$$$) $$$\\rightarrow$$$ $$$[1, 1, 3, 5, 10]$$$ $$$\\rightarrow$$$ $$$\\dots$$$ $$$\\rightarrow$$$ $$$[1, 1, 3, 5, 10]$$$ $$$\\rightarrow$$$ (replace all occurrences of $$$10$$$ with $$$9$$$) $$$\\rightarrow$$$ $$$[1, 1, 3, 5, 9]$$$. The later steps of the algorithm do not change the array.\n\nMishka is very lazy and he doesn't want to apply these changes by himself. But he is very interested in their result. Help him find it.\n\nThe first line of the input contains one integer number $$$n$$$ ($$$1 \\le n \\le 1000$$$) \u2014 the number of elements in Mishka's birthday present (surprisingly, an array).\n\nThe second line of the input contains $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$ ($$$1 \\le a_i \\le 10^9$$$) \u2014 the elements of the array.\n\nPrint $$$n$$$ integers \u2014 $$$b_1, b_2, \\dots, b_n$$$, where $$$b_i$$$ is the final value of the $$$i$$$-th element of the array after applying \"Mishka's Adjacent Replacements Algorithm\" to the array $$$a$$$. Note that you cannot change the order of elements in the array.\n\nThe first example is described in the problem statement."}, {"role": "assistant", "content": "implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Polycarp is practicing his problem solving skill. He has a list of $$$n$$$ problems with difficulties $$$a_1, a_2, \\dots, a_n$$$, respectively. His plan is to practice for exactly $$$k$$$ days. Each day he has to solve at least one problem from his list. Polycarp solves the problems in the order they are given in his list, he cannot skip any problem from his list. He has to solve all $$$n$$$ problems in exactly $$$k$$$ days.\n\nThus, each day Polycarp solves a contiguous sequence of (consecutive) problems from the start of the list. He can't skip problems or solve them multiple times. As a result, in $$$k$$$ days he will solve all the $$$n$$$ problems.\n\nThe profit of the $$$j$$$-th day of Polycarp's practice is the maximum among all the difficulties of problems Polycarp solves during the $$$j$$$-th day (i.e. if he solves problems with indices from $$$l$$$ to $$$r$$$ during a day, then the profit of the day is $$$\\max\\limits_{l \\le i \\le r}a_i$$$). The total profit of his practice is the sum of the profits over all $$$k$$$ days of his practice.\n\nYou want to help Polycarp to get the maximum possible total profit over all valid ways to solve problems. Your task is to distribute all $$$n$$$ problems between $$$k$$$ days satisfying the conditions above in such a way, that the total profit is maximum.\n\nFor example, if $$$n = 8, k = 3$$$ and $$$a = [5, 4, 2, 6, 5, 1, 9, 2]$$$, one of the possible distributions with maximum total profit is: $$$[5, 4, 2], [6, 5], [1, 9, 2]$$$. Here the total profit equals $$$5 + 6 + 9 = 20$$$.\n\nThe first line of the input contains two integers $$$n$$$ and $$$k$$$ ($$$1 \\le k \\le n \\le 2000$$$) \u2014 the number of problems and the number of days, respectively.\n\nThe second line of the input contains $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$ ($$$1 \\le a_i \\le 2000$$$) \u2014 difficulties of problems in Polycarp's list, in the order they are placed in the list (i.e. in the order Polycarp will solve them).\n\nIn the first line of the output print the maximum possible total profit.\n\nIn the second line print exactly $$$k$$$ positive integers $$$t_1, t_2, \\dots, t_k$$$ ($$$t_1 + t_2 + \\dots + t_k$$$ must equal $$$n$$$), where $$$t_j$$$ means the number of problems Polycarp will solve during the $$$j$$$-th day in order to achieve the maximum possible total profit of his practice.\n\nIf there are many possible answers, you may print any of them.\n\nThe first example is described in the problem statement.\n\nIn the second example there is only one possible distribution.\n\nIn the third example the best answer is to distribute problems in the following way: $$$[1, 2000], [2000, 2]$$$. The total profit of this distribution is $$$2000 + 2000 = 4000$$$."}, {"role": "assistant", "content": "greedy, implementation, sortings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given an array $$$d_1, d_2, \\dots, d_n$$$ consisting of $$$n$$$ integer numbers.\n\nYour task is to split this array into three parts (some of which may be empty) in such a way that each element of the array belongs to exactly one of the three parts, and each of the parts forms a consecutive contiguous subsegment (possibly, empty) of the original array. \n\nLet the sum of elements of the first part be $$$sum_1$$$, the sum of elements of the second part be $$$sum_2$$$ and the sum of elements of the third part be $$$sum_3$$$. Among all possible ways to split the array you have to choose a way such that $$$sum_1 = sum_3$$$ and $$$sum_1$$$ is maximum possible.\n\nMore formally, if the first part of the array contains $$$a$$$ elements, the second part of the array contains $$$b$$$ elements and the third part contains $$$c$$$ elements, then:\n\n$$$$$$sum_1 = \\sum\\limits_{1 \\le i \\le a}d_i,$$$$$$ $$$$$$sum_2 = \\sum\\limits_{a + 1 \\le i \\le a + b}d_i,$$$$$$ $$$$$$sum_3 = \\sum\\limits_{a + b + 1 \\le i \\le a + b + c}d_i.$$$$$$\n\nThe sum of an empty array is $$$0$$$.\n\nYour task is to find a way to split the array such that $$$sum_1 = sum_3$$$ and $$$sum_1$$$ is maximum possible.\n\nThe first line of the input contains one integer $$$n$$$ ($$$1 \\le n \\le 2 \\cdot 10^5$$$) \u2014 the number of elements in the array $$$d$$$.\n\nThe second line of the input contains $$$n$$$ integers $$$d_1, d_2, \\dots, d_n$$$ ($$$1 \\le d_i \\le 10^9$$$) \u2014 the elements of the array $$$d$$$.\n\nPrint a single integer \u2014 the maximum possible value of $$$sum_1$$$, considering that the condition $$$sum_1 = sum_3$$$ must be met.\n\nObviously, at least one valid way to split the array exists (use $$$a=c=0$$$ and $$$b=n$$$).\n\nIn the first example there is only one possible splitting which maximizes $$$sum_1$$$: $$$[1, 3, 1], [~], [1, 4]$$$.\n\nIn the second example the only way to have $$$sum_1=4$$$ is: $$$[1, 3], [2, 1], [4]$$$.\n\nIn the third example there is only one way to split the array: $$$[~], [4, 1, 2], [~]$$$."}, {"role": "assistant", "content": "binarysearch, datastructures, twopointers"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given two strings $$$a$$$ and $$$b$$$ consisting of lowercase English letters, both of length $$$n$$$. The characters of both strings have indices from $$$1$$$ to $$$n$$$, inclusive. \n\nYou are allowed to do the following changes: \n\nNote that if $$$n$$$ is odd, you are formally allowed to swap $$$a_{\\lceil\\frac{n}{2}\\rceil}$$$ with $$$a_{\\lceil\\frac{n}{2}\\rceil}$$$ (and the same with the string $$$b$$$) but this move is useless. Also you can swap two equal characters but this operation is useless as well.\n\nYou have to make these strings equal by applying any number of changes described above, in any order. But it is obvious that it may be impossible to make two strings equal by these swaps.\n\nIn one preprocess move you can replace a character in $$$a$$$ with another character. In other words, in a single preprocess move you can choose any index $$$i$$$ ($$$1 \\le i \\le n$$$), any character $$$c$$$ and set $$$a_i := c$$$.\n\nYour task is to find the minimum number of preprocess moves to apply in such a way that after them you can make strings $$$a$$$ and $$$b$$$ equal by applying some number of changes described in the list above.\n\nNote that the number of changes you make after the preprocess moves does not matter. Also note that you cannot apply preprocess moves to the string $$$b$$$ or make any preprocess moves after the first change is made.\n\nThe first line of the input contains one integer $$$n$$$ ($$$1 \\le n \\le 10^5$$$) \u2014 the length of strings $$$a$$$ and $$$b$$$.\n\nThe second line contains the string $$$a$$$ consisting of exactly $$$n$$$ lowercase English letters.\n\nThe third line contains the string $$$b$$$ consisting of exactly $$$n$$$ lowercase English letters.\n\nPrint a single integer \u2014 the minimum number of preprocess moves to apply before changes, so that it is possible to make the string $$$a$$$ equal to string $$$b$$$ with a sequence of changes from the list above.\n\nIn the first example preprocess moves are as follows: $$$a_1 := $$$'b', $$$a_3 := $$$'c', $$$a_4 := $$$'a' and $$$a_5:=$$$'b'. Afterwards, $$$a = $$$\"bbcabba\". Then we can obtain equal strings by the following sequence of changes: $$$swap(a_2, b_2)$$$ and $$$swap(a_2, a_6)$$$. There is no way to use fewer than $$$4$$$ preprocess moves before a sequence of changes to make string equal, so the answer in this example is $$$4$$$.\n\nIn the second example no preprocess moves are required. We can use the following sequence of changes to make $$$a$$$ and $$$b$$$ equal: $$$swap(b_1, b_5)$$$, $$$swap(a_2, a_4)$$$."}, {"role": "assistant", "content": "implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "In this problem you will have to help Berland army with organizing their command delivery system.\n\nThere are $$$n$$$ officers in Berland army. The first officer is the commander of the army, and he does not have any superiors. Every other officer has exactly one direct superior. If officer $$$a$$$ is the direct superior of officer $$$b$$$, then we also can say that officer $$$b$$$ is a direct subordinate of officer $$$a$$$.\n\nOfficer $$$x$$$ is considered to be a subordinate (direct or indirect) of officer $$$y$$$ if one of the following conditions holds:\n\nFor example, on the picture below the subordinates of the officer $$$3$$$ are: $$$5, 6, 7, 8, 9$$$.\n\nThe structure of Berland army is organized in such a way that every officer, except for the commander, is a subordinate of the commander of the army.\n\nFormally, let's represent Berland army as a tree consisting of $$$n$$$ vertices, in which vertex $$$u$$$ corresponds to officer $$$u$$$. The parent of vertex $$$u$$$ corresponds to the direct superior of officer $$$u$$$. The root (which has index $$$1$$$) corresponds to the commander of the army.\n\nBerland War Ministry has ordered you to give answers on $$$q$$$ queries, the $$$i$$$-th query is given as $$$(u_i, k_i)$$$, where $$$u_i$$$ is some officer, and $$$k_i$$$ is a positive integer.\n\nTo process the $$$i$$$-th query imagine how a command from $$$u_i$$$ spreads to the subordinates of $$$u_i$$$. Typical DFS (depth first search) algorithm is used here.\n\nSuppose the current officer is $$$a$$$ and he spreads a command. Officer $$$a$$$ chooses $$$b$$$ \u2014 one of his direct subordinates (i.e. a child in the tree) who has not received this command yet. If there are many such direct subordinates, then $$$a$$$ chooses the one having minimal index. Officer $$$a$$$ gives a command to officer $$$b$$$. Afterwards, $$$b$$$ uses exactly the same algorithm to spread the command to its subtree. After $$$b$$$ finishes spreading the command, officer $$$a$$$ chooses the next direct subordinate again (using the same strategy). When officer $$$a$$$ cannot choose any direct subordinate who still hasn't received this command, officer $$$a$$$ finishes spreading the command.\n\nLet's look at the following example:\n\nIf officer $$$1$$$ spreads a command, officers receive it in the following order: $$$[1, 2, 3, 5 ,6, 8, 7, 9, 4]$$$.\n\nIf officer $$$3$$$ spreads a command, officers receive it in the following order: $$$[3, 5, 6, 8, 7, 9]$$$.\n\nIf officer $$$7$$$ spreads a command, officers receive it in the following order: $$$[7, 9]$$$.\n\nIf officer $$$9$$$ spreads a command, officers receive it in the following order: $$$[9]$$$.\n\nTo answer the $$$i$$$-th query $$$(u_i, k_i)$$$, construct a sequence which describes the order in which officers will receive the command if the $$$u_i$$$-th officer spreads it. Return the $$$k_i$$$-th element of the constructed list or -1 if there are fewer than $$$k_i$$$ elements in it.\n\nYou should process queries independently. A query doesn't affect the following queries.\n\nThe first line of the input contains two integers $$$n$$$ and $$$q$$$ ($$$2 \\le n \\le 2 \\cdot 10^5, 1 \\le q \\le 2 \\cdot 10^5$$$) \u2014 the number of officers in Berland army and the number of queries.\n\nThe second line of the input contains $$$n - 1$$$ integers $$$p_2, p_3, \\dots, p_n$$$ ($$$1 \\le p_i < i$$$), where $$$p_i$$$ is the index of the direct superior of the officer having the index $$$i$$$. The commander has index $$$1$$$ and doesn't have any superiors.\n\nThe next $$$q$$$ lines describe the queries. The $$$i$$$-th query is given as a pair ($$$u_i, k_i$$$) ($$$1 \\le u_i, k_i \\le n$$$), where $$$u_i$$$ is the index of the officer which starts spreading a command, and $$$k_i$$$ is the index of the required officer in the command spreading sequence.\n\nPrint $$$q$$$ numbers, where the $$$i$$$-th number is the officer at the position $$$k_i$$$ in the list which describes the order in which officers will receive the command if it starts spreading from officer $$$u_i$$$. Print \"-1\" if the number of officers which receive the command is less than $$$k_i$$$.\n\nYou should process queries independently. They do not affect each other."}, {"role": "assistant", "content": "dfsandsimilar, graphs, trees"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "There is a rectangular grid of size $$$n \\times m$$$. Each cell has a number written on it; the number on the cell ($$$i, j$$$) is $$$a_{i, j}$$$. Your task is to calculate the number of paths from the upper-left cell ($$$1, 1$$$) to the bottom-right cell ($$$n, m$$$) meeting the following constraints:\n\nFind the number of such paths in the given grid.\n\nThe first line of the input contains three integers $$$n$$$, $$$m$$$ and $$$k$$$ ($$$1 \\le n, m \\le 20$$$, $$$0 \\le k \\le 10^{18}$$$) \u2014 the height and the width of the grid, and the number $$$k$$$.\n\nThe next $$$n$$$ lines contain $$$m$$$ integers each, the $$$j$$$-th element in the $$$i$$$-th line is $$$a_{i, j}$$$ ($$$0 \\le a_{i, j} \\le 10^{18}$$$).\n\nPrint one integer \u2014 the number of paths from ($$$1, 1$$$) to ($$$n, m$$$) with xor sum equal to $$$k$$$.\n\nAll the paths from the first example: \n\nAll the paths from the second example: "}, {"role": "assistant", "content": "bitmasks, bruteforce, dp, meet-in-the-middle"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given an array of integers. Vasya can permute (change order) its integers. He wants to do it so that as many as possible integers will become on a place where a smaller integer used to stand. Help Vasya find the maximal number of such integers.\n\nFor instance, if we are given an array $$$[10, 20, 30, 40]$$$, we can permute it so that it becomes $$$[20, 40, 10, 30]$$$. Then on the first and the second positions the integers became larger ($$$20>10$$$, $$$40>20$$$) and did not on the third and the fourth, so for this permutation, the number that Vasya wants to maximize equals $$$2$$$. Read the note for the first example, there is one more demonstrative test case.\n\nHelp Vasya to permute integers in such way that the number of positions in a new array, where integers are greater than in the original one, is maximal.\n\nThe first line contains a single integer $$$n$$$ ($$$1 \\leq n \\leq 10^5$$$)\u00a0\u2014 the length of the array.\n\nThe second line contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\leq a_i \\leq 10^9$$$)\u00a0\u2014 the elements of the array.\n\nPrint a single integer\u00a0\u2014 the maximal number of the array's elements which after a permutation will stand on the position where a smaller element stood in the initial array.\n\nIn the first sample, one of the best permutations is $$$[1, 5, 5, 3, 10, 1, 1]$$$. On the positions from second to fifth the elements became larger, so the answer for this permutation is 4.\n\nIn the second sample, there is no way to increase any element with a permutation, so the answer is 0."}, {"role": "assistant", "content": "combinatorics, datastructures, math, sortings, twopointers"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given a rectangular parallelepiped with sides of positive integer lengths $$$A$$$, $$$B$$$ and $$$C$$$. \n\nFind the number of different groups of three integers ($$$a$$$, $$$b$$$, $$$c$$$) such that $$$1\\leq a\\leq b\\leq c$$$ and parallelepiped $$$A\\times B\\times C$$$ can be paved with parallelepipeds $$$a\\times b\\times c$$$. Note, that all small parallelepipeds have to be rotated in the same direction.\n\nFor example, parallelepiped $$$1\\times 5\\times 6$$$ can be divided into parallelepipeds $$$1\\times 3\\times 5$$$, but can not be divided into parallelepipeds $$$1\\times 2\\times 3$$$.\n\nThe first line contains a single integer $$$t$$$ ($$$1 \\leq t \\leq 10^5$$$)\u00a0\u2014 the number of test cases.\n\nEach of the next $$$t$$$ lines contains three integers $$$A$$$, $$$B$$$ and $$$C$$$ ($$$1 \\leq A, B, C \\leq 10^5$$$)\u00a0\u2014 the sizes of the parallelepiped.\n\nFor each test case, print the number of different groups of three points that satisfy all given conditions.\n\nIn the first test case, rectangular parallelepiped $$$(1, 1, 1)$$$ can be only divided into rectangular parallelepiped with sizes $$$(1, 1, 1)$$$.\n\nIn the second test case, rectangular parallelepiped $$$(1, 6, 1)$$$ can be divided into rectangular parallelepipeds with sizes $$$(1, 1, 1)$$$, $$$(1, 1, 2)$$$, $$$(1, 1, 3)$$$ and $$$(1, 1, 6)$$$.\n\nIn the third test case, rectangular parallelepiped $$$(2, 2, 2)$$$ can be divided into rectangular parallelepipeds with sizes $$$(1, 1, 1)$$$, $$$(1, 1, 2)$$$, $$$(1, 2, 2)$$$ and $$$(2, 2, 2)$$$. "}, {"role": "assistant", "content": "bitmasks, bruteforce, combinatorics, math, numbertheory"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "This is an interactive problem.\n\nVasya and Vitya play a game. Vasya thought of two integers $$$a$$$ and $$$b$$$ from $$$1$$$ to $$$n$$$ and Vitya tries to guess them. Each round he tells Vasya two numbers $$$x$$$ and $$$y$$$ from $$$1$$$ to $$$n$$$. If both $$$x=a$$$ and $$$y=b$$$ then Vitya wins. Else Vasya must say one of the three phrases: \n\nVasya can't lie, but if multiple phrases are true, he may choose any of them. For example, if Vasya thought of numbers $$$2$$$ and $$$4$$$, then he answers with the phrase $$$3$$$ to a query $$$(3, 4)$$$, and he can answer with the phrase $$$1$$$ or phrase $$$3$$$ to a query $$$(1, 5)$$$.\n\nHelp Vitya win in no more than $$$600$$$ rounds. \n\nThe first line contains a single integer $$$n$$$ ($$$1 \\leq n \\leq 10^{18}$$$)\u00a0\u2014 the upper limit of the numbers.\n\nFirst, you need to read the number $$$n$$$, after that you can make queries.\n\nTo make a query, print two integers: $$$x$$$ and $$$y$$$ ($$$1 \\leq x, y \\leq n$$$), then flush the output.\n\nAfter each query, read a single integer $$$ans$$$ ($$$0 \\leq ans \\leq 3$$$).\n\nIf $$$ans > 0$$$, then it is the number of the phrase said by Vasya.\n\nIf $$$ans = 0$$$, it means that you win and your program should terminate.\n\nIf you make more than $$$600$$$ queries or make an incorrect query, you will get Wrong Answer.\n\nYour solution will get Idleness Limit Exceeded, if you don't print anything or forget to flush the output.\n\nTo flush you need to do the following right after printing a query and a line end: \n\nHacks format\n\nFor hacks, use the following format:\n\nIn the first line, print a single integer $$$n$$$ ($$$1 \\leq n \\leq 10^{18}$$$)\u00a0\u2014 the upper limit of the numbers.\n\nIn the second line, print two integers $$$a$$$ and $$$b$$$ ($$$1 \\leq a, b \\leq n$$$)\u00a0\u2014 the numbers which Vasya thought of.\n\nIn the third line, print a single integer $$$m$$$ ($$$1 \\leq m \\leq 10^5$$$)\u00a0\u2014 the number of instructions for the interactor.\n\nIn each of the next $$$m$$$ lines, print five integers: $$$x_i$$$, $$$y_i$$$, $$$r^{12}_i$$$, $$$r^{13}_i$$$, and $$$r^{23}_i$$$ ($$$1 \\leq x_i, y_i \\leq n$$$), where $$$r^{ST}_i$$$ equals to either number $$$S$$$ or number $$$T$$$.\n\nWhile answering the query $$$x\\,\\, y$$$, the interactor finds a number $$$i$$$ from $$$1$$$ to $$$n$$$ with the minimal value $$$|x-x_i| + |y-y_i|$$$. If multiple numbers can be chosen, the least $$$i$$$ is preferred. Then the interactor answers to the query, but if there are two phrases $$$S$$$ and $$$T$$$ that can be given, then $$$r^{ST}_i$$$ is chosen.\n\nFor example, the sample test data file contains the following: \n\nLet's analyze the sample test. The chosen numbers are $$$2$$$ and $$$4$$$. The interactor was given two instructions.\n\nFor the query $$$(4, 3)$$$, it can return $$$2$$$ or $$$3$$$. Out of the two instructions the second one is chosen, so the interactor returns $$$a^{23}_2=3$$$.\n\nFor the query $$$(3, 4)$$$, it can return only $$$3$$$.\n\nFor the query $$$(3, 3)$$$, it can return $$$2$$$ or $$$3$$$. Out of the two instructions the first one is chosen (since in case of equal values, the least number is preferred), so the interactor returns $$$a^{23}_1=2$$$.\n\nFor the query $$$(1, 5)$$$, it can return $$$1$$$ or $$$3$$$. Out of the two instructions the first one is chosen, so the interactor returns $$$a^{13}_1=1$$$.\n\nIn the fifth query $$$(2, 4)$$$, the numbers are guessed correctly, the player wins."}, {"role": "assistant", "content": "binarysearch, interactive"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "There is a tree with $$$n$$$ vertices. There are also $$$m$$$ ants living on it. Each ant has its own color. The $$$i$$$-th ant has two favorite pairs of vertices: ($$$a_i, b_i$$$) and ($$$c_i, d_i$$$). You need to tell if it is possible to paint the edges of the tree in $$$m$$$ colors so that every ant will be able to walk between vertices from one of its favorite pairs using only edges of his color; if it is possible, you need to print which pair every ant should use.\n\nThe first line contains a single integer $$$n$$$ ($$$2 \\leq n \\leq 10^5$$$)\u00a0\u2014 the number of vertices.\n\nEach of the next $$$n-1$$$ lines contains two integers $$$u_i$$$ and $$$v_i$$$ ($$$1 \\leq u_i, v_i \\leq n$$$), meaning that there is an edge between vertices $$$u_i$$$ and $$$v_i$$$.\n\nThe next line contains a single integer $$$m$$$ ($$$1 \\leq m \\leq 10^4$$$)\u00a0\u2014 the number of ants.\n\nEach of the next $$$m$$$ lines contains four integers $$$a_i$$$, $$$b_i$$$, $$$c_i$$$, and $$$d_i$$$ ($$$1 \\leq a_i, b_i, c_i, d_i \\leq n$$$, $$$a_i \\neq b_i, c_i \\neq d_i$$$), meaning that pairs ($$$a_i$$$, $$$b_i$$$) and ($$$c_i$$$, $$$d_i$$$) are favorite for the $$$i$$$-th ant.\n\nPrint \"NO\" (without quotes) if the wanted painting is impossible.\n\nOtherwise, print \"YES\" (without quotes). Print $$$m$$$ lines. On the $$$i$$$-th line, print $$$1$$$ if the $$$i$$$-th ant will use the first pair and $$$2$$$ otherwise. If there are multiple answers, print any.\n\nIn the sample, the second and the third edge should be painted in the first color, the first and the fifth should be painted in the second color, and the fourth should be painted in the third color."}, {"role": "assistant", "content": "2-sat, datastructures, trees"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "In a simplified version of a \"Mini Metro\" game, there is only one subway line, and all the trains go in the same direction. There are $$$n$$$ stations on the line, $$$a_i$$$ people are waiting for the train at the $$$i$$$-th station at the beginning of the game. The game starts at the beginning of the $$$0$$$-th hour. At the end of each hour (couple minutes before the end of the hour), $$$b_i$$$ people instantly arrive to the $$$i$$$-th station. If at some moment, the number of people at the $$$i$$$-th station is larger than $$$c_i$$$, you lose.\n\nA player has several trains which he can appoint to some hours. The capacity of each train is $$$k$$$ passengers. In the middle of the appointed hour, the train goes from the $$$1$$$-st to the $$$n$$$-th station, taking as many people at each station as it can accommodate. A train can not take people from the $$$i$$$-th station if there are people at the $$$i-1$$$-th station.\n\nIf multiple trains are appointed to the same hour, their capacities are being added up and they are moving together.\n\nThe player wants to stay in the game for $$$t$$$ hours. Determine the minimum number of trains he will need for it.\n\nThe first line contains three integers $$$n$$$, $$$t$$$, and $$$k$$$ ($$$1 \\leq n, t \\leq 200, 1 \\leq k \\leq 10^9$$$)\u00a0\u2014 the number of stations on the line, hours we want to survive, and capacity of each train respectively.\n\nEach of the next $$$n$$$ lines contains three integers $$$a_i$$$, $$$b_i$$$, and $$$c_i$$$ ($$$0 \\leq a_i, b_i \\leq c_i \\leq 10^9$$$)\u00a0\u2014 number of people at the $$$i$$$-th station in the beginning of the game, number of people arriving to $$$i$$$-th station in the end of each hour and maximum number of people at the $$$i$$$-th station allowed respectively.\n\nOutput a single integer number\u00a0\u2014 the answer to the problem.\n\n\n\nLet's look at the sample. There are three stations, on the first, there are initially 2 people, 3 people on the second, and 4 people on the third. Maximal capacities of the stations are 10, 9, and 8 respectively.\n\nOne of the winning strategies is to appoint two trains to the first and the third hours. Then on the first hour, the train takes all of the people from the stations, and at the end of the hour, 4 people arrive at the first station, 3 on the second, and 2 on the third.\n\nIn the second hour there are no trains appointed, and at the end of it, the same amount of people are arriving again.\n\nIn the third hour, the train first takes 8 people from the first station, and when it arrives at the second station, it takes only 2 people because it can accommodate no more than 10 people. Then it passes by the third station because it is already full. After it, people arrive at the stations once more, and the game ends.\n\nAs there was no such moment when the number of people at a station exceeded maximal capacity, we won using two trains."}, {"role": "assistant", "content": "dp"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Vitya has just started learning Berlanese language. It is known that Berlanese uses the Latin alphabet. Vowel letters are \"a\", \"o\", \"u\", \"i\", and \"e\". Other letters are consonant.\n\nIn Berlanese, there has to be a vowel after every consonant, but there can be any letter after any vowel. The only exception is a consonant \"n\"; after this letter, there can be any letter (not only a vowel) or there can be no letter at all. For example, the words \"harakiri\", \"yupie\", \"man\", and \"nbo\" are Berlanese while the words \"horse\", \"king\", \"my\", and \"nz\" are not.\n\nHelp Vitya find out if a word $$$s$$$ is Berlanese.\n\nThe first line of the input contains the string $$$s$$$ consisting of $$$|s|$$$ ($$$1\\leq |s|\\leq 100$$$) lowercase Latin letters.\n\nPrint \"YES\" (without quotes) if there is a vowel after every consonant except \"n\", otherwise print \"NO\".\n\nYou can print each letter in any case (upper or lower).\n\nIn the first and second samples, a vowel goes after each consonant except \"n\", so the word is Berlanese.\n\nIn the third sample, the consonant \"c\" goes after the consonant \"r\", and the consonant \"s\" stands on the end, so the word is not Berlanese."}, {"role": "assistant", "content": "implementation, strings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "There are $$$n$$$ rectangles in a row. You can either turn each rectangle by $$$90$$$ degrees or leave it as it is. If you turn a rectangle, its width will be height, and its height will be width. Notice that you can turn any number of rectangles, you also can turn all or none of them. You can not change the order of the rectangles.\n\nFind out if there is a way to make the rectangles go in order of non-ascending height. In other words, after all the turns, a height of every rectangle has to be not greater than the height of the previous rectangle (if it is such). \n\nThe first line contains a single integer $$$n$$$ ($$$1 \\leq n \\leq 10^5$$$)\u00a0\u2014 the number of rectangles.\n\nEach of the next $$$n$$$ lines contains two integers $$$w_i$$$ and $$$h_i$$$ ($$$1 \\leq w_i, h_i \\leq 10^9$$$)\u00a0\u2014 the width and the height of the $$$i$$$-th rectangle.\n\nPrint \"YES\" (without quotes) if there is a way to make the rectangles go in order of non-ascending height, otherwise print \"NO\".\n\nYou can print each letter in any case (upper or lower).\n\nIn the first test, you can rotate the second and the third rectangles so that the heights will be [4, 4, 3].\n\nIn the second test, there is no way the second rectangle will be not higher than the first one."}, {"role": "assistant", "content": "greedy, sortings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given an array of integers. Vasya can permute (change order) its integers. He wants to do it so that as many as possible integers will become on a place where a smaller integer used to stand. Help Vasya find the maximal number of such integers.\n\nFor instance, if we are given an array $$$[10, 20, 30, 40]$$$, we can permute it so that it becomes $$$[20, 40, 10, 30]$$$. Then on the first and the second positions the integers became larger ($$$20>10$$$, $$$40>20$$$) and did not on the third and the fourth, so for this permutation, the number that Vasya wants to maximize equals $$$2$$$. Read the note for the first example, there is one more demonstrative test case.\n\nHelp Vasya to permute integers in such way that the number of positions in a new array, where integers are greater than in the original one, is maximal.\n\nThe first line contains a single integer $$$n$$$ ($$$1 \\leq n \\leq 10^5$$$)\u00a0\u2014 the length of the array.\n\nThe second line contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\leq a_i \\leq 10^9$$$)\u00a0\u2014 the elements of the array.\n\nPrint a single integer\u00a0\u2014 the maximal number of the array's elements which after a permutation will stand on the position where a smaller element stood in the initial array.\n\nIn the first sample, one of the best permutations is $$$[1, 5, 5, 3, 10, 1, 1]$$$. On the positions from second to fifth the elements became larger, so the answer for this permutation is 4.\n\nIn the second sample, there is no way to increase any element with a permutation, so the answer is 0."}, {"role": "assistant", "content": "combinatorics, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given a rectangular parallelepiped with sides of positive integer lengths $$$A$$$, $$$B$$$ and $$$C$$$. \n\nFind the number of different groups of three integers ($$$a$$$, $$$b$$$, $$$c$$$) such that $$$1\\leq a\\leq b\\leq c$$$ and parallelepiped $$$A\\times B\\times C$$$ can be paved with parallelepipeds $$$a\\times b\\times c$$$. Note, that all small parallelepipeds have to be rotated in the same direction.\n\nFor example, parallelepiped $$$1\\times 5\\times 6$$$ can be divided into parallelepipeds $$$1\\times 3\\times 5$$$, but can not be divided into parallelepipeds $$$1\\times 2\\times 3$$$.\n\nThe first line contains a single integer $$$t$$$ ($$$1 \\leq t \\leq 10^5$$$)\u00a0\u2014 the number of test cases.\n\nEach of the next $$$t$$$ lines contains three integers $$$A$$$, $$$B$$$ and $$$C$$$ ($$$1 \\leq A, B, C \\leq 10^5$$$)\u00a0\u2014 the sizes of the parallelepiped.\n\nFor each test case, print the number of different groups of three points that satisfy all given conditions.\n\nIn the first test case, rectangular parallelepiped $$$(1, 1, 1)$$$ can be only divided into rectangular parallelepiped with sizes $$$(1, 1, 1)$$$.\n\nIn the second test case, rectangular parallelepiped $$$(1, 6, 1)$$$ can be divided into rectangular parallelepipeds with sizes $$$(1, 1, 1)$$$, $$$(1, 1, 2)$$$, $$$(1, 1, 3)$$$ and $$$(1, 1, 6)$$$.\n\nIn the third test case, rectangular parallelepiped $$$(2, 2, 2)$$$ can be divided into rectangular parallelepipeds with sizes $$$(1, 1, 1)$$$, $$$(1, 1, 2)$$$, $$$(1, 2, 2)$$$ and $$$(2, 2, 2)$$$. "}, {"role": "assistant", "content": "math, numbertheory"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "This is an interactive problem.\n\nVasya and Vitya play a game. Vasya thought of two integers $$$a$$$ and $$$b$$$ from $$$1$$$ to $$$n$$$ and Vitya tries to guess them. Each round he tells Vasya two numbers $$$x$$$ and $$$y$$$ from $$$1$$$ to $$$n$$$. If both $$$x=a$$$ and $$$y=b$$$ then Vitya wins. Else Vasya must say one of the three phrases: \n\nVasya can't lie, but if multiple phrases are true, he may choose any of them. For example, if Vasya thought of numbers $$$2$$$ and $$$4$$$, then he answers with the phrase $$$3$$$ to a query $$$(3, 4)$$$, and he can answer with the phrase $$$1$$$ or phrase $$$3$$$ to a query $$$(1, 5)$$$.\n\nHelp Vitya win in no more than $$$600$$$ rounds. \n\nThe first line contains a single integer $$$n$$$ ($$$1 \\leq n \\leq 10^{18}$$$)\u00a0\u2014 the upper limit of the numbers.\n\nFirst, you need to read the number $$$n$$$, after that you can make queries.\n\nTo make a query, print two integers: $$$x$$$ and $$$y$$$ ($$$1 \\leq x, y \\leq n$$$), then flush the output.\n\nAfter each query, read a single integer $$$ans$$$ ($$$0 \\leq ans \\leq 3$$$).\n\nIf $$$ans > 0$$$, then it is the number of the phrase said by Vasya.\n\nIf $$$ans = 0$$$, it means that you win and your program should terminate.\n\nIf you make more than $$$600$$$ queries or make an incorrect query, you will get Wrong Answer.\n\nYour solution will get Idleness Limit Exceeded, if you don't print anything or forget to flush the output.\n\nTo flush you need to do the following right after printing a query and a line end: \n\nHacks format\n\nFor hacks, use the following format:\n\nIn the first line, print a single integer $$$n$$$ ($$$1 \\leq n \\leq 10^{18}$$$)\u00a0\u2014 the upper limit of the numbers.\n\nIn the second line, print two integers $$$a$$$ and $$$b$$$ ($$$1 \\leq a, b \\leq n$$$)\u00a0\u2014 the numbers which Vasya thought of.\n\nIn the third line, print a single integer $$$m$$$ ($$$1 \\leq m \\leq 10^5$$$)\u00a0\u2014 the number of instructions for the interactor.\n\nIn each of the next $$$m$$$ lines, print five integers: $$$x_i$$$, $$$y_i$$$, $$$r^{12}_i$$$, $$$r^{13}_i$$$, and $$$r^{23}_i$$$ ($$$1 \\leq x_i, y_i \\leq n$$$), where $$$r^{ST}_i$$$ equals to either number $$$S$$$ or number $$$T$$$.\n\nWhile answering the query $$$x\\,\\, y$$$, the interactor finds a number $$$i$$$ from $$$1$$$ to $$$n$$$ with the minimal value $$$|x-x_i| + |y-y_i|$$$. If multiple numbers can be chosen, the least $$$i$$$ is preferred. Then the interactor answers to the query, but if there are two phrases $$$S$$$ and $$$T$$$ that can be given, then $$$r^{ST}_i$$$ is chosen.\n\nFor example, the sample test data file contains the following: \n\nLet's analyze the sample test. The chosen numbers are $$$2$$$ and $$$4$$$. The interactor was given two instructions.\n\nFor the query $$$(4, 3)$$$, it can return $$$2$$$ or $$$3$$$. Out of the two instructions the second one is chosen, so the interactor returns $$$a^{23}_2=3$$$.\n\nFor the query $$$(3, 4)$$$, it can return only $$$3$$$.\n\nFor the query $$$(3, 3)$$$, it can return $$$2$$$ or $$$3$$$. Out of the two instructions the first one is chosen (since in case of equal values, the least number is preferred), so the interactor returns $$$a^{23}_1=2$$$.\n\nFor the query $$$(1, 5)$$$, it can return $$$1$$$ or $$$3$$$. Out of the two instructions the first one is chosen, so the interactor returns $$$a^{13}_1=1$$$.\n\nIn the fifth query $$$(2, 4)$$$, the numbers are guessed correctly, the player wins."}, {"role": "assistant", "content": "binarysearch, interactive"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Maxim wants to buy some games at the local game shop. There are $$$n$$$ games in the shop, the $$$i$$$-th game costs $$$c_i$$$.\n\nMaxim has a wallet which can be represented as an array of integers. His wallet contains $$$m$$$ bills, the $$$j$$$-th bill has value $$$a_j$$$.\n\nGames in the shop are ordered from left to right, Maxim tries to buy every game in that order.\n\nWhen Maxim stands at the position $$$i$$$ in the shop, he takes the first bill from his wallet (if his wallet is empty then he proceeds to the next position immediately) and tries to buy the $$$i$$$-th game using this bill. After Maxim tried to buy the $$$n$$$-th game, he leaves the shop.\n\nMaxim buys the $$$i$$$-th game if and only if the value of the first bill (which he takes) from his wallet is greater or equal to the cost of the $$$i$$$-th game. If he successfully buys the $$$i$$$-th game, the first bill from his wallet disappears and the next bill becomes first. Otherwise Maxim leaves the first bill in his wallet (this bill still remains the first one) and proceeds to the next game.\n\nFor example, for array $$$c = [2, 4, 5, 2, 4]$$$ and array $$$a = [5, 3, 4, 6]$$$ the following process takes place: Maxim buys the first game using the first bill (its value is $$$5$$$), the bill disappears, after that the second bill (with value $$$3$$$) becomes the first one in Maxim's wallet, then Maxim doesn't buy the second game because $$$c_2 > a_2$$$, the same with the third game, then he buys the fourth game using the bill of value $$$a_2$$$ (the third bill becomes the first one in Maxim's wallet) and buys the fifth game using the bill of value $$$a_3$$$.\n\nYour task is to get the number of games Maxim will buy.\n\nThe first line of the input contains two integers $$$n$$$ and $$$m$$$ ($$$1 \\le n, m \\le 1000$$$) \u2014 the number of games and the number of bills in Maxim's wallet.\n\nThe second line of the input contains $$$n$$$ integers $$$c_1, c_2, \\dots, c_n$$$ ($$$1 \\le c_i \\le 1000$$$), where $$$c_i$$$ is the cost of the $$$i$$$-th game.\n\nThe third line of the input contains $$$m$$$ integers $$$a_1, a_2, \\dots, a_m$$$ ($$$1 \\le a_j \\le 1000$$$), where $$$a_j$$$ is the value of the $$$j$$$-th bill from the Maxim's wallet.\n\nPrint a single integer \u2014 the number of games Maxim will buy.\n\nThe first example is described in the problem statement.\n\nIn the second example Maxim cannot buy any game because the value of the first bill in his wallet is smaller than the cost of any game in the shop.\n\nIn the third example the values of the bills in Maxim's wallet are large enough to buy any game he encounter until he runs out of bills in his wallet."}, {"role": "assistant", "content": "implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given a ternary string (it is a string which consists only of characters '0', '1' and '2').\n\nYou can swap any two adjacent (consecutive) characters '0' and '1' (i.e. replace \"01\" with \"10\" or vice versa) or any two adjacent (consecutive) characters '1' and '2' (i.e. replace \"12\" with \"21\" or vice versa).\n\nFor example, for string \"010210\" we can perform the following moves: \n\nNote than you cannot swap \"02\" $$$\\rightarrow$$$ \"20\" and vice versa. You cannot perform any other operations with the given string excluding described above.\n\nYou task is to obtain the minimum possible (lexicographically) string by using these swaps arbitrary number of times (possibly, zero).\n\nString $$$a$$$ is lexicographically less than string $$$b$$$ (if strings $$$a$$$ and $$$b$$$ have the same length) if there exists some position $$$i$$$ ($$$1 \\le i \\le |a|$$$, where $$$|s|$$$ is the length of the string $$$s$$$) such that for every $$$j < i$$$ holds $$$a_j = b_j$$$, and $$$a_i < b_i$$$.\n\nThe first line of the input contains the string $$$s$$$ consisting only of characters '0', '1' and '2', its length is between $$$1$$$ and $$$10^5$$$ (inclusive).\n\nPrint a single string \u2014 the minimum possible (lexicographically) string you can obtain by using the swaps described above arbitrary number of times (possibly, zero)."}, {"role": "assistant", "content": "greedy, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Alice got an array of length $$$n$$$ as a birthday present once again! This is the third year in a row! \n\nAnd what is more disappointing, it is overwhelmengly boring, filled entirely with zeros. Bob decided to apply some changes to the array to cheer up Alice.\n\nBob has chosen $$$m$$$ changes of the following form. For some integer numbers $$$x$$$ and $$$d$$$, he chooses an arbitrary position $$$i$$$ ($$$1 \\le i \\le n$$$) and for every $$$j \\in [1, n]$$$ adds $$$x + d \\cdot dist(i, j)$$$ to the value of the $$$j$$$-th cell. $$$dist(i, j)$$$ is the distance between positions $$$i$$$ and $$$j$$$ (i.e. $$$dist(i, j) = |i - j|$$$, where $$$|x|$$$ is an absolute value of $$$x$$$).\n\nFor example, if Alice currently has an array $$$[2, 1, 2, 2]$$$ and Bob chooses position $$$3$$$ for $$$x = -1$$$ and $$$d = 2$$$ then the array will become $$$[2 - 1 + 2 \\cdot 2,~1 - 1 + 2 \\cdot 1,~2 - 1 + 2 \\cdot 0,~2 - 1 + 2 \\cdot 1]$$$ = $$$[5, 2, 1, 3]$$$. Note that Bob can't choose position $$$i$$$ outside of the array (that is, smaller than $$$1$$$ or greater than $$$n$$$).\n\nAlice will be the happiest when the elements of the array are as big as possible. Bob claimed that the arithmetic mean value of the elements will work fine as a metric.\n\nWhat is the maximum arithmetic mean value Bob can achieve?\n\nThe first line contains two integers $$$n$$$ and $$$m$$$ ($$$1 \\le n, m \\le 10^5$$$) \u2014 the number of elements of the array and the number of changes.\n\nEach of the next $$$m$$$ lines contains two integers $$$x_i$$$ and $$$d_i$$$ ($$$-10^3 \\le x_i, d_i \\le 10^3$$$) \u2014 the parameters for the $$$i$$$-th change.\n\nPrint the maximal average arithmetic mean of the elements Bob can achieve.\n\nYour answer is considered correct if its absolute or relative error doesn't exceed $$$10^{-6}$$$."}, {"role": "assistant", "content": "greedy, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Let's call an undirected graph $$$G = (V, E)$$$ relatively prime if and only if for each edge $$$(v, u) \\in E$$$ \u00a0$$$GCD(v, u) = 1$$$ (the greatest common divisor of $$$v$$$ and $$$u$$$ is $$$1$$$). If there is no edge between some pair of vertices $$$v$$$ and $$$u$$$ then the value of $$$GCD(v, u)$$$ doesn't matter. The vertices are numbered from $$$1$$$ to $$$|V|$$$.\n\nConstruct a relatively prime graph with $$$n$$$ vertices and $$$m$$$ edges such that it is connected and it contains neither self-loops nor multiple edges.\n\nIf there exists no valid graph with the given number of vertices and edges then output \"Impossible\".\n\nIf there are multiple answers then print any of them.\n\nThe only line contains two integers $$$n$$$ and $$$m$$$ ($$$1 \\le n, m \\le 10^5$$$) \u2014 the number of vertices and the number of edges.\n\nIf there exists no valid graph with the given number of vertices and edges then output \"Impossible\".\n\nOtherwise print the answer in the following format:\n\nThe first line should contain the word \"Possible\".\n\nThe $$$i$$$-th of the next $$$m$$$ lines should contain the $$$i$$$-th edge $$$(v_i, u_i)$$$ of the resulting graph ($$$1 \\le v_i, u_i \\le n, v_i \\neq u_i$$$). For each pair $$$(v, u)$$$ there can be no more pairs $$$(v, u)$$$ or $$$(u, v)$$$. The vertices are numbered from $$$1$$$ to $$$n$$$.\n\nIf there are multiple answers then print any of them.\n\nHere is the representation of the graph from the first example: "}, {"role": "assistant", "content": "bruteforce, constructivealgorithms, graphs, greedy, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Leha is planning his journey from Moscow to Saratov. He hates trains, so he has decided to get from one city to another by car.\n\nThe path from Moscow to Saratov can be represented as a straight line (well, it's not that straight in reality, but in this problem we will consider it to be straight), and the distance between Moscow and Saratov is $$$n$$$ km. Let's say that Moscow is situated at the point with coordinate $$$0$$$ km, and Saratov \u2014 at coordinate $$$n$$$ km.\n\nDriving for a long time may be really difficult. Formally, if Leha has already covered $$$i$$$ kilometers since he stopped to have a rest, he considers the difficulty of covering $$$(i + 1)$$$-th kilometer as $$$a_{i + 1}$$$. It is guaranteed that for every $$$i \\in [1, n - 1]$$$ $$$a_i \\le a_{i + 1}$$$. The difficulty of the journey is denoted as the sum of difficulties of each kilometer in the journey.\n\nFortunately, there may be some rest sites between Moscow and Saratov. Every integer point from $$$1$$$ to $$$n - 1$$$ may contain a rest site. When Leha enters a rest site, he may have a rest, and the next kilometer will have difficulty $$$a_1$$$, the kilometer after it \u2014 difficulty $$$a_2$$$, and so on.\n\nFor example, if $$$n = 5$$$ and there is a rest site in coordinate $$$2$$$, the difficulty of journey will be $$$2a_1 + 2a_2 + a_3$$$: the first kilometer will have difficulty $$$a_1$$$, the second one \u2014 $$$a_2$$$, then Leha will have a rest, and the third kilometer will have difficulty $$$a_1$$$, the fourth \u2014 $$$a_2$$$, and the last one \u2014 $$$a_3$$$. Another example: if $$$n = 7$$$ and there are rest sites in coordinates $$$1$$$ and $$$5$$$, the difficulty of Leha's journey is $$$3a_1 + 2a_2 + a_3 + a_4$$$.\n\nLeha doesn't know which integer points contain rest sites. So he has to consider every possible situation. Obviously, there are $$$2^{n - 1}$$$ different distributions of rest sites (two distributions are different if there exists some point $$$x$$$ such that it contains a rest site in exactly one of these distributions). Leha considers all these distributions to be equiprobable. He wants to calculate $$$p$$$ \u2014 the expected value of difficulty of his journey.\n\nObviously, $$$p \\cdot 2^{n - 1}$$$ is an integer number. You have to calculate it modulo $$$998244353$$$.\n\nThe first line contains one number $$$n$$$ ($$$1 \\le n \\le 10^6$$$) \u2014 the distance from Moscow to Saratov.\n\nThe second line contains $$$n$$$ integer numbers $$$a_1$$$, $$$a_2$$$, ..., $$$a_n$$$ ($$$1 \\le a_1 \\le a_2 \\le \\dots \\le a_n \\le 10^6$$$), where $$$a_i$$$ is the difficulty of $$$i$$$-th kilometer after Leha has rested.\n\nPrint one number \u2014 $$$p \\cdot 2^{n - 1}$$$, taken modulo $$$998244353$$$."}, {"role": "assistant", "content": "combinatorics, math, probabilities"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given a rooted undirected tree consisting of $$$n$$$ vertices. Vertex $$$1$$$ is the root.\n\nLet's denote a depth array of vertex $$$x$$$ as an infinite sequence $$$[d_{x, 0}, d_{x, 1}, d_{x, 2}, \\dots]$$$, where $$$d_{x, i}$$$ is the number of vertices $$$y$$$ such that both conditions hold:\n\nThe dominant index of a depth array of vertex $$$x$$$ (or, shortly, the dominant index of vertex $$$x$$$) is an index $$$j$$$ such that:\n\nFor every vertex in the tree calculate its dominant index.\n\nThe first line contains one integer $$$n$$$ ($$$1 \\le n \\le 10^6$$$) \u2014 the number of vertices in a tree.\n\nThen $$$n - 1$$$ lines follow, each containing two integers $$$x$$$ and $$$y$$$ ($$$1 \\le x, y \\le n$$$, $$$x \\ne y$$$). This line denotes an edge of the tree.\n\nIt is guaranteed that these edges form a tree.\n\nOutput $$$n$$$ numbers. $$$i$$$-th number should be equal to the dominant index of vertex $$$i$$$."}, {"role": "assistant", "content": "datastructures, dsu, trees"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Polycarp has just launched his new startup idea. The niche is pretty free and the key vector of development sounds really promising, so he easily found himself some investors ready to sponsor the company. However, he is yet to name the startup!\n\nActually, Polycarp has already came up with the name but some improvement to it will never hurt. So now he wants to swap letters at some positions in it to obtain the better name. It isn't necessary for letters to be adjacent.\n\nIn addition, each of the investors has chosen some index in the name and selected a set of letters that can go there. Indices chosen by different investors are pairwise distinct. If some indices aren't chosen by any investor then any letter can go there.\n\nFinally, Polycarp is sure that the smallest lexicographically name is the best. (Like why do you think Google decided to become Alphabet?)\n\nMore formally, you are given a string consisting of lowercase Latin letters from \"a\" to \"f\". You can swap letters at any positions arbitrary number of times (zero swaps is also possible).\n\nWhat is the smallest lexicographically name you can obtain such that the letter at every position is among the allowed letters?\n\nIf Polycarp can't produce any valid name then print \"Impossible\".\n\nThe first line is the string $$$s$$$ ($$$1 \\le |s| \\le 10^5$$$) \u2014 the name Polycarp has came up with. The string consists only of lowercase Latin letters from \"a\" to \"f\".\n\nThe second line contains a single integer $$$m$$$ ($$$0 \\le m \\le |s|$$$) \u2014 the number of investors.\n\nThe $$$i$$$-th of the next $$$m$$$ lines contain an integer number $$$pos_i$$$ and a non-empty string of allowed characters for $$$pos_i$$$ ($$$1 \\le pos_i \\le |s|$$$). Each string contains pairwise distinct letters from \"a\" to \"f\". $$$pos_1, pos_2, \\dots, pos_m$$$ are pairwise distinct. If any position of the string doesn't appear in the investors demands then any letter can go in this position.\n\nIf Polycarp can't produce any valid name then print \"Impossible\".\n\nOtherwise print the smallest lexicographically name Polycarp can obtain by swapping letters in string $$$s$$$ such that the letter at every position is among the allowed ones."}, {"role": "assistant", "content": "bitmasks, flows, graphmatchings, graphs, greedy"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Once when Gerald studied in the first year at school, his teacher gave the class the following homework. She offered the students a string consisting of n small Latin letters; the task was to learn the way the letters that the string contains are written. However, as Gerald is too lazy, he has no desire whatsoever to learn those letters. That's why he decided to lose some part of the string (not necessarily a connected part). The lost part can consist of any number of segments of any length, at any distance from each other. However, Gerald knows that if he loses more than k characters, it will be very suspicious. \n\nFind the least number of distinct characters that can remain in the string after no more than k characters are deleted. You also have to find any possible way to delete the characters.\n\nThe first input data line contains a string whose length is equal to n (1\u2009\u2264\u2009n\u2009\u2264\u2009105). The string consists of lowercase Latin letters. The second line contains the number k (0\u2009\u2264\u2009k\u2009\u2264\u2009105).\n\nPrint on the first line the only number m \u2014 the least possible number of different characters that could remain in the given string after it loses no more than k characters.\n\nPrint on the second line the string that Gerald can get after some characters are lost. The string should have exactly m distinct characters. The final string should be the subsequence of the initial string. If Gerald can get several different strings with exactly m distinct characters, print any of them.\n\nIn the first sample the string consists of five identical letters but you are only allowed to delete 4 of them so that there was at least one letter left. Thus, the right answer is 1 and any string consisting of characters \"a\" from 1 to 5 in length.\n\nIn the second sample you are allowed to delete 4 characters. You cannot delete all the characters, because the string has length equal to 7. However, you can delete all characters apart from \"a\" (as they are no more than four), which will result in the \"aaaa\" string.\n\nIn the third sample you are given a line whose length is equal to 8, and k\u2009=\u200910, so that the whole line can be deleted. The correct answer is 0 and an empty string."}, {"role": "assistant", "content": "greedy"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Little boy Gerald studies at school which is quite far from his house. That's why he has to go there by bus every day. The way from home to school is represented by a segment of a straight line; the segment contains exactly n\u2009+\u20091 bus stops. All of them are numbered with integers from 0 to n in the order in which they follow from Gerald's home. The bus stop by Gerald's home has number 0 and the bus stop by the school has number n.\n\nThere are m buses running between the house and the school: the i-th bus goes from stop si to ti (si\u2009<\u2009ti), visiting all the intermediate stops in the order in which they follow on the segment. Besides, Gerald's no idiot and he wouldn't get off the bus until it is still possible to ride on it closer to the school (obviously, getting off would be completely pointless). In other words, Gerald can get on the i-th bus on any stop numbered from si to ti\u2009-\u20091 inclusive, but he can get off the i-th bus only on the bus stop ti.\n\nGerald can't walk between the bus stops and he also can't move in the direction from the school to the house.\n\nGerald wants to know how many ways he has to get from home to school. Tell him this number. Two ways are considered different if Gerald crosses some segment between the stops on different buses. As the number of ways can be too much, find the remainder of a division of this number by 1000000007 (109\u2009+\u20097).\n\nThe first line contains two space-separated integers: n and m (1\u2009\u2264\u2009n\u2009\u2264\u2009109,\u20090\u2009\u2264\u2009m\u2009\u2264\u2009105). Then follow m lines each containing two integers si,\u2009ti. They are the numbers of starting stops and end stops of the buses (0\u2009\u2264\u2009si\u2009<\u2009ti\u2009\u2264\u2009n).\n\nPrint the only number \u2014 the number of ways to get to the school modulo 1000000007 (109\u2009+\u20097).\n\nThe first test has the only variant to get to school: first on bus number one to the bus stop number one; then on bus number two to the bus stop number two.\n\nIn the second test no bus goes to the third bus stop, where the school is positioned. Thus, the correct answer is 0.\n\nIn the third test Gerald can either get or not on any of the first four buses to get closer to the school. Thus, the correct answer is 24\u2009=\u200916."}, {"role": "assistant", "content": "binarysearch, datastructures, dp"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "At a geometry lesson Gerald was given a task: to get vector B out of vector A. Besides, the teacher permitted him to perform the following operations with vector \u0410:\n\nOperations could be performed in any order any number of times.\n\nCan Gerald cope with the task?\n\nThe first line contains integers x1 \u0438 y1 \u2014 the coordinates of the vector A (\u2009-\u2009108\u2009\u2264\u2009x1,\u2009y1\u2009\u2264\u2009108). The second and the third line contain in the similar manner vectors B and C (their coordinates are integers; their absolute value does not exceed 108).\n\nPrint \"YES\" (without the quotes) if it is possible to get vector B using the given operations. Otherwise print \"NO\" (without the quotes)."}, {"role": "assistant", "content": "implementation, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Gerald is positioned in an old castle which consists of n halls connected with n\u2009-\u20091 corridors. It is exactly one way to go from any hall to any other one. Thus, the graph is a tree. Initially, at the moment of time 0, Gerald is positioned in hall 1. Besides, some other hall of the castle contains the treasure Gerald is looking for. The treasure's position is not known; it can equiprobably be in any of other n\u2009-\u20091 halls. Gerald can only find out where the treasure is when he enters the hall with the treasure. That very moment Gerald sees the treasure and the moment is regarded is the moment of achieving his goal. \n\nThe corridors have different lengths. At that, the corridors are considered long and the halls are considered small and well lit. Thus, it is possible not to take the time Gerald spends in the halls into consideration. The castle is very old, that's why a corridor collapses at the moment when somebody visits it two times, no matter in which direction. \n\nGerald can move around the castle using the corridors; he will go until he finds the treasure. Naturally, Gerald wants to find it as quickly as possible. In other words, he wants to act in a manner that would make the average time of finding the treasure as small as possible. Each corridor can be used no more than two times. That's why Gerald chooses the strategy in such a way, so he can visit every hall for sure.\n\nMore formally, if the treasure is located in the second hall, then Gerald will find it the moment he enters the second hall for the first time \u2014 let it be moment t2. If the treasure is in the third hall, then Gerald will find it the moment he enters the third hall for the first time. Let it be the moment of time t3. And so on. Thus, the average time of finding the treasure will be equal to .\n\nThe first line contains the only integer n (2\u2009\u2264\u2009n\u2009\u2264\u2009105) \u2014 the number of halls in the castle. Next n\u2009-\u20091 lines each contain three integers. The i-th line contains numbers ai, bi and ti (1\u2009\u2264\u2009ai,\u2009bi\u2009\u2264\u2009n, ai\u2009\u2260\u2009bi, 1\u2009\u2264\u2009ti\u2009\u2264\u20091000) \u2014 the numbers of halls connected with the i-th corridor and the time needed to go along the corridor. Initially Gerald is in the hall number 1. It is guaranteed that one can get from any hall to any other one using corridors.\n\nPrint the only real number: the sought expectation of time needed to find the treasure. The answer should differ from the right one in no less than 10\u2009-\u20096.\n\nIn the first test the castle only has two halls which means that the treasure is located in the second hall. Gerald will only need one minute to go to the second hall from the first one.\n\nIn the second test Gerald can only go from the first hall to the third one. He can get from the third room to the first one or to the second one, but he has already visited the first hall and can get nowhere from there. Thus, he needs to go to the second hall. He should go to hall 4 from there, because all other halls have already been visited. If the treasure is located in the third hall, Gerald will find it in a minute, if the treasure is located in the second hall, Gerald finds it in two minutes, if the treasure is in the fourth hall, Gerald will find it in three minutes. The average time makes 2 minutes.\n\nIn the third test Gerald needs to visit 4 halls: the second, third, fourth and fifth ones. All of them are only reachable from the first hall. Thus, he needs to go to those 4 halls one by one and return. Gerald will enter the first of those halls in a minute, in the second one \u2014 in three minutes, in the third one - in 5 minutes, in the fourth one - in 7 minutes. The average time is 4 minutes. "}, {"role": "assistant", "content": "dp, greedy, probabilities, sortings, trees"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Little Gerald and his coach Mike play an interesting game. At the beginning of the game there is a pile consisting of n candies and a pile consisting of m stones. Gerald and Mike move in turns, Mike goes first. During his move Mike checks how many candies and stones Gerald has eaten. Let Gerald eat a candies and b stones. Then Mike awards Gerald f(a,\u2009b) prize points. Gerald during his move either eats a candy from the pile of candies or a stone from the pile of stones. As Mike sees that Gerald has eaten everything apart one candy and one stone, he awards points for the last time and the game ends. Gerald is not allowed to eat all the candies, and he is not allowed to eat all the stones too. Tell Gerald how to play to get the largest possible number of points: it is required to find one of the possible optimal playing strategies for Gerald.\n\nThe first line contains three integers n,\u2009m,\u2009p (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u200920000, 1\u2009\u2264\u2009p\u2009\u2264\u2009109). The second line contains n integers x0, x1, ..., xn\u2009-\u20091 (0\u2009\u2264\u2009xi\u2009\u2264\u200920000). The third line contains m integers y0, y1, ..., ym\u2009-\u20091 (0\u2009\u2264\u2009yi\u2009\u2264\u200920000). The value of f(a,\u2009b) is calculated as a remainder of the division of the sum xa\u2009+\u2009yb by number p.\n\nPrint on the first line the only number: the maximal number of points Gerald can earn. Print on the second line a sting consisting of n\u2009+\u2009m\u2009-\u20092 characters, each of which is either a \"C\" or \"S\", the i-th character should be \"C\" if Gerald's i-th move should be eating a candy and \"S\" if he should eat a stone.\n\nIn the first test if Gerald's first move is eating a stone, he will receive a point for it and if he eats a candy, he will get zero pints. In any way Gerald will get 0 points before his first move, and 1 after his second one. This, the maximum number of points Gerald can get equals to 2, and for that he should first eat a stone, then a candy."}, {"role": "assistant", "content": "divideandconquer, dp"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Natasha is going to fly on a rocket to Mars and return to Earth. Also, on the way to Mars, she will land on $$$n - 2$$$ intermediate planets. Formally: we number all the planets from $$$1$$$ to $$$n$$$. $$$1$$$ is Earth, $$$n$$$ is Mars. Natasha will make exactly $$$n$$$ flights: $$$1 \\to 2 \\to \\ldots n \\to 1$$$.\n\nFlight from $$$x$$$ to $$$y$$$ consists of two phases: take-off from planet $$$x$$$ and landing to planet $$$y$$$. This way, the overall itinerary of the trip will be: the $$$1$$$-st planet $$$\\to$$$ take-off from the $$$1$$$-st planet $$$\\to$$$ landing to the $$$2$$$-nd planet $$$\\to$$$ $$$2$$$-nd planet $$$\\to$$$ take-off from the $$$2$$$-nd planet $$$\\to$$$ $$$\\ldots$$$ $$$\\to$$$ landing to the $$$n$$$-th planet $$$\\to$$$ the $$$n$$$-th planet $$$\\to$$$ take-off from the $$$n$$$-th planet $$$\\to$$$ landing to the $$$1$$$-st planet $$$\\to$$$ the $$$1$$$-st planet.\n\nThe mass of the rocket together with all the useful cargo (but without fuel) is $$$m$$$ tons. However, Natasha does not know how much fuel to load into the rocket. Unfortunately, fuel can only be loaded on Earth, so if the rocket runs out of fuel on some other planet, Natasha will not be able to return home. Fuel is needed to take-off from each planet and to land to each planet. It is known that $$$1$$$ ton of fuel can lift off $$$a_i$$$ tons of rocket from the $$$i$$$-th planet or to land $$$b_i$$$ tons of rocket onto the $$$i$$$-th planet. \n\nFor example, if the weight of rocket is $$$9$$$ tons, weight of fuel is $$$3$$$ tons and take-off coefficient is $$$8$$$ ($$$a_i = 8$$$), then $$$1.5$$$ tons of fuel will be burnt (since $$$1.5 \\cdot 8 = 9 + 3$$$). The new weight of fuel after take-off will be $$$1.5$$$ tons. \n\nPlease note, that it is allowed to burn non-integral amount of fuel during take-off or landing, and the amount of initial fuel can be non-integral as well.\n\nHelp Natasha to calculate the minimum mass of fuel to load into the rocket. Note, that the rocket must spend fuel to carry both useful cargo and the fuel itself. However, it doesn't need to carry the fuel which has already been burnt. Assume, that the rocket takes off and lands instantly.\n\nThe first line contains a single integer $$$n$$$ ($$$2 \\le n \\le 1000$$$)\u00a0\u2014 number of planets.\n\nThe second line contains the only integer $$$m$$$ ($$$1 \\le m \\le 1000$$$)\u00a0\u2014 weight of the payload.\n\nThe third line contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\le a_i \\le 1000$$$), where $$$a_i$$$ is the number of tons, which can be lifted off by one ton of fuel.\n\nThe fourth line contains $$$n$$$ integers $$$b_1, b_2, \\ldots, b_n$$$ ($$$1 \\le b_i \\le 1000$$$), where $$$b_i$$$ is the number of tons, which can be landed by one ton of fuel. \n\nIt is guaranteed, that if Natasha can make a flight, then it takes no more than $$$10^9$$$ tons of fuel.\n\nIf Natasha can fly to Mars through $$$(n - 2)$$$ planets and return to Earth, print the minimum mass of fuel (in tons) that Natasha should take. Otherwise, print a single number $$$-1$$$.\n\nIt is guaranteed, that if Natasha can make a flight, then it takes no more than $$$10^9$$$ tons of fuel.\n\nThe answer will be considered correct if its absolute or relative error doesn't exceed $$$10^{-6}$$$. Formally, let your answer be $$$p$$$, and the jury's answer be $$$q$$$. Your answer is considered correct if $$$\\frac{|p - q|}{\\max{(1, |q|)}} \\le 10^{-6}$$$.\n\nLet's consider the first example.\n\nInitially, the mass of a rocket with fuel is $$$22$$$ tons.\n\nIn the second case, the rocket will not be able even to take off from Earth."}, {"role": "assistant", "content": "binarysearch, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "This is an interactive problem.\n\nNatasha is going to fly to Mars. Finally, Natasha sat in the rocket. She flies, flies... but gets bored. She wishes to arrive to Mars already! So she decides to find something to occupy herself. She couldn't think of anything better to do than to calculate the distance to the red planet.\n\nLet's define $$$x$$$ as the distance to Mars. Unfortunately, Natasha does not know $$$x$$$. But it is known that $$$1 \\le x \\le m$$$, where Natasha knows the number $$$m$$$. Besides, $$$x$$$ and $$$m$$$ are positive integers.\n\nNatasha can ask the rocket questions. Every question is an integer $$$y$$$ ($$$1 \\le y \\le m$$$). The correct answer to the question is $$$-1$$$, if $$$x<y$$$, $$$0$$$, if $$$x=y$$$, and $$$1$$$, if $$$x>y$$$. But the rocket is broken\u00a0\u2014 it does not always answer correctly. Precisely: let the correct answer to the current question be equal to $$$t$$$, then, if the rocket answers this question correctly, then it will answer $$$t$$$, otherwise it will answer $$$-t$$$.\n\nIn addition, the rocket has a sequence $$$p$$$ of length $$$n$$$. Each element of the sequence is either $$$0$$$ or $$$1$$$. The rocket processes this sequence in the cyclic order, that is $$$1$$$-st element, $$$2$$$-nd, $$$3$$$-rd, $$$\\ldots$$$, $$$(n-1)$$$-th, $$$n$$$-th, $$$1$$$-st, $$$2$$$-nd, $$$3$$$-rd, $$$\\ldots$$$, $$$(n-1)$$$-th, $$$n$$$-th, $$$\\ldots$$$. If the current element is $$$1$$$, the rocket answers correctly, if $$$0$$$\u00a0\u2014 lies. Natasha doesn't know the sequence $$$p$$$, but she knows its length\u00a0\u2014 $$$n$$$.\n\nYou can ask the rocket no more than $$$60$$$ questions.\n\nHelp Natasha find the distance to Mars. Assume, that the distance to Mars does not change while Natasha is asking questions.\n\nYour solution will not be accepted, if it does not receive an answer $$$0$$$ from the rocket (even if the distance to Mars is uniquely determined by the already received rocket's answers).\n\nThe first line contains two integers $$$m$$$ and $$$n$$$ ($$$1 \\le m \\le 10^9$$$, $$$1 \\le n \\le 30$$$)\u00a0\u2014 the maximum distance to Mars and the number of elements in the sequence $$$p$$$.\n\nYou can ask the rocket no more than $$$60$$$ questions.\n\nTo ask a question, print a number $$$y$$$ ($$$1\\le y\\le m$$$) and an end-of-line character, then do the operation flush and read the answer to the question.\n\nIf the program reads $$$0$$$, then the distance is correct and you must immediately terminate the program (for example, by calling exit(0)). If you ignore this, you can get any verdict, since your program will continue to read from the closed input stream.\n\nIf at some point your program reads $$$-2$$$ as an answer, it must immediately end (for example, by calling exit(0)). You will receive the \"Wrong answer\" verdict, and this will mean that the request is incorrect or the number of requests exceeds $$$60$$$. If you ignore this, you can get any verdict, since your program will continue to read from the closed input stream.\n\nIf your program's request is not a valid integer between $$$-2^{31}$$$ and $$$2^{31}-1$$$ (inclusive) without leading zeros, then you can get any verdict.\n\nYou can get \"Idleness limit exceeded\" if you don't print anything or if you forget to flush the output.\n\nTo flush the output buffer you can use (after printing a query and end-of-line):\n\nHacking\n\nUse the following format for hacking:\n\nIn the first line, print $$$3$$$ integers $$$m,n,x$$$ ($$$1\\le x\\le m\\le 10^9$$$, $$$1\\le n\\le 30$$$)\u00a0\u2014 the maximum distance to Mars, the number of elements in the sequence $$$p$$$ and the current distance to Mars.\n\nIn the second line, enter $$$n$$$ numbers, each of which is equal to $$$0$$$ or $$$1$$$\u00a0\u2014 sequence $$$p$$$.\n\nThe hacked solution will not have access to the number $$$x$$$ and sequence $$$p$$$.\n\nIn the example, hacking would look like this:\n\n5 2 3\n\n1 0\n\nThis means that the current distance to Mars is equal to $$$3$$$, Natasha knows that it does not exceed $$$5$$$, and the rocket answers in order: correctly, incorrectly, correctly, incorrectly ...\n\nReally:\n\non the first query ($$$1$$$) the correct answer is $$$1$$$, the rocket answered correctly: $$$1$$$;\n\non the second query ($$$2$$$) the correct answer is $$$1$$$, the rocket answered incorrectly: $$$-1$$$;\n\non the third query ($$$4$$$) the correct answer is $$$-1$$$, the rocket answered correctly: $$$-1$$$;\n\non the fourth query ($$$5$$$) the correct answer is $$$-1$$$, the rocket answered incorrectly: $$$1$$$;\n\non the fifth query ($$$3$$$) the correct and incorrect answer is $$$0$$$."}, {"role": "assistant", "content": "binarysearch, interactive"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Astronaut Natasha arrived on Mars. She knows that the Martians are very poor aliens. To ensure a better life for the Mars citizens, their emperor decided to take tax from every tourist who visited the planet. Natasha is the inhabitant of Earth, therefore she had to pay the tax to enter the territory of Mars.\n\nThere are $$$n$$$ banknote denominations on Mars: the value of $$$i$$$-th banknote is $$$a_i$$$. Natasha has an infinite number of banknotes of each denomination.\n\nMartians have $$$k$$$ fingers on their hands, so they use a number system with base $$$k$$$. In addition, the Martians consider the digit $$$d$$$ (in the number system with base $$$k$$$) divine. Thus, if the last digit in Natasha's tax amount written in the number system with the base $$$k$$$ is $$$d$$$, the Martians will be happy. Unfortunately, Natasha does not know the Martians' divine digit yet.\n\nDetermine for which values $$$d$$$ Natasha can make the Martians happy.\n\nNatasha can use only her banknotes. Martians don't give her change.\n\nThe first line contains two integers $$$n$$$ and $$$k$$$ ($$$1 \\le n \\le 100\\,000$$$, $$$2 \\le k \\le 100\\,000$$$)\u00a0\u2014 the number of denominations of banknotes and the base of the number system on Mars.\n\nThe second line contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\le a_i \\le 10^9$$$)\u00a0\u2014 denominations of banknotes on Mars.\n\nAll numbers are given in decimal notation.\n\nOn the first line output the number of values $$$d$$$ for which Natasha can make the Martians happy.\n\nIn the second line, output all these values in increasing order.\n\nPrint all numbers in decimal notation.\n\nConsider the first test case. It uses the octal number system.\n\nIf you take one banknote with the value of $$$12$$$, you will get $$$14_8$$$ in octal system. The last digit is $$$4_8$$$.\n\nIf you take one banknote with the value of $$$12$$$ and one banknote with the value of $$$20$$$, the total value will be $$$32$$$. In the octal system, it is $$$40_8$$$. The last digit is $$$0_8$$$.\n\nIf you take two banknotes with the value of $$$20$$$, the total value will be $$$40$$$, this is $$$50_8$$$ in the octal system. The last digit is $$$0_8$$$.\n\nNo other digits other than $$$0_8$$$ and $$$4_8$$$ can be obtained. Digits $$$0_8$$$ and $$$4_8$$$ could also be obtained in other ways.\n\nThe second test case uses the decimal number system. The nominals of all banknotes end with zero, so Natasha can give the Martians only the amount whose decimal notation also ends with zero."}, {"role": "assistant", "content": "numbertheory"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Natasha travels around Mars in the Mars rover. But suddenly it broke down, namely\u00a0\u2014 the logical scheme inside it. The scheme is an undirected tree (connected acyclic graph) with a root in the vertex $$$1$$$, in which every leaf (excluding root) is an input, and all other vertices are logical elements, including the root, which is output. One bit is fed to each input. One bit is returned at the output.\n\nThere are four types of logical elements: AND ($$$2$$$ inputs), OR ($$$2$$$ inputs), XOR ($$$2$$$ inputs), NOT ($$$1$$$ input). Logical elements take values from their direct descendants (inputs) and return the result of the function they perform. Natasha knows the logical scheme of the Mars rover, as well as the fact that only one input is broken. In order to fix the Mars rover, she needs to change the value on this input.\n\nFor each input, determine what the output will be if Natasha changes this input.\n\nThe first line contains a single integer $$$n$$$ ($$$2 \\le n \\le 10^6$$$)\u00a0\u2014 the number of vertices in the graph (both inputs and elements).\n\nThe $$$i$$$-th of the next $$$n$$$ lines contains a description of $$$i$$$-th vertex: the first word \"AND\", \"OR\", \"XOR\", \"NOT\" or \"IN\" (means the input of the scheme) is the vertex type. If this vertex is \"IN\", then the value of this input follows ($$$0$$$ or $$$1$$$), otherwise follow the indices of input vertices of this element: \"AND\", \"OR\", \"XOR\" have $$$2$$$ inputs, whereas \"NOT\" has $$$1$$$ input. The vertices are numbered from one.\n\nIt is guaranteed that input data contains a correct logical scheme with an output produced by the vertex $$$1$$$.\n\nPrint a string of characters '0' and '1' (without quotes)\u00a0\u2014 answers to the problem for each input in the ascending order of their vertex indices.\n\nThe original scheme from the example (before the input is changed):\n\n\n\nGreen indicates bits '1', yellow indicates bits '0'.\n\nIf Natasha changes the input bit $$$2$$$ to $$$0$$$, then the output will be $$$1$$$.\n\nIf Natasha changes the input bit $$$3$$$ to $$$0$$$, then the output will be $$$0$$$.\n\nIf Natasha changes the input bit $$$6$$$ to $$$1$$$, then the output will be $$$1$$$.\n\nIf Natasha changes the input bit $$$8$$$ to $$$0$$$, then the output will be $$$1$$$.\n\nIf Natasha changes the input bit $$$9$$$ to $$$0$$$, then the output will be $$$0$$$."}, {"role": "assistant", "content": "dfsandsimilar, graphs, implementation, trees"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Natasha was already going to fly back to Earth when she remembered that she needs to go to the Martian store to buy Martian souvenirs for her friends.\n\nIt is known, that the Martian year lasts $$$x_{max}$$$ months, month lasts $$$y_{max}$$$ days, day lasts $$$z_{max}$$$ seconds. Natasha also knows that this store works according to the following schedule: 2 months in a year were selected: $$$x_l$$$ and $$$x_r$$$ ($$$1\\le x_l\\le x_r\\le x_{max}$$$), 2 days in a month: $$$y_l$$$ and $$$y_r$$$ ($$$1\\le y_l\\le y_r\\le y_{max}$$$) and 2 seconds in a day: $$$z_l$$$ and $$$z_r$$$ ($$$1\\le z_l\\le z_r\\le z_{max}$$$). The store works at all such moments (month $$$x$$$, day $$$y$$$, second $$$z$$$), when simultaneously $$$x_l\\le x\\le x_r$$$, $$$y_l\\le y\\le y_r$$$ and $$$z_l\\le z\\le z_r$$$.\n\nUnfortunately, Natasha does not know the numbers $$$x_l,x_r,y_l,y_r,z_l,z_r$$$.\n\nOne Martian told Natasha: \"I went to this store $$$(n+m)$$$ times. $$$n$$$ times of them it was opened, and $$$m$$$ times\u00a0\u2014 closed.\" He also described his every trip to the store: the month, day, second of the trip and whether the store was open or closed at that moment.\n\nNatasha can go to the store $$$k$$$ times. For each of them, determine whether the store at the time of the trip is open, closed, or this information is unknown.\n\nThe first line contains $$$6$$$ integers $$$x_{max}$$$, $$$y_{max}$$$, $$$z_{max}$$$, $$$n$$$, $$$m$$$, $$$k$$$ ($$$1\\le x_{max},y_{max},z_{max}\\le 10^5$$$, $$$1\\le n\\le 10^5$$$, $$$0\\le m\\le 10^5$$$, $$$1\\le k\\le 10^5$$$)\u00a0\u2014 number of months in a year, days in a month, seconds in a day, times when the store (according to a Martian) was opened, when it was closed and Natasha's queries.\n\nThe $$$i$$$-th of the next $$$n$$$ lines contains $$$3$$$ integers $$$x_i$$$, $$$y_i$$$, $$$z_i$$$ ($$$1\\le x_i\\le x_{max}$$$, $$$1\\le y_i\\le y_{max}$$$, $$$1\\le z_i\\le z_{max}$$$)\u00a0\u2014 month, day and second of $$$i$$$-th time, when the store, according to the Martian, was opened.\n\nThe $$$i$$$-th of the next $$$m$$$ lines contains $$$3$$$ integers $$$x_i$$$, $$$y_i$$$, $$$z_i$$$ ($$$1\\le x_i\\le x_{max}$$$, $$$1\\le y_i\\le y_{max}$$$, $$$1\\le z_i\\le z_{max}$$$)\u00a0\u2014 month, day and second of $$$i$$$-th time, when the store, according to the Martian, was closed.\n\nThe $$$i$$$-th of the next $$$k$$$ lines contains $$$3$$$ integers $$$x_i$$$, $$$y_i$$$, $$$z_i$$$ ($$$1\\le x_i\\le x_{max}$$$, $$$1\\le y_i\\le y_{max}$$$, $$$1\\le z_i\\le z_{max}$$$)\u00a0\u2014 month, day and second of $$$i$$$-th Natasha's query.\n\nIf the Martian was mistaken and his information about when the store is open and when it is closed is inconsistent, print a single line \"INCORRECT\" (without quotes).\n\nOtherwise, print the first line \"CORRECT\" (without quotes). Next output $$$k$$$ lines: in $$$i$$$-th of them, output an answer to $$$i$$$-th Natasha's query: \"OPEN\" (without quotes), if the store was opened at the moment of this query, \"CLOSED\" (without quotes), if it was closed, or \"UNKNOWN\" (without quotes), if this information can not be determined on the basis of available data.\n\nConsider the first test case.\n\nThere are $$$10$$$ months in a year, $$$10$$$ days in a month, and $$$10$$$ seconds in a day.\n\nThe store was opened in $$$3$$$ moments:\n\nThe store was closed at the time: month $$$9$$$, day $$$9$$$, second $$$9$$$.\n\nQueries:\n\nIn the second test case, the store was closed and opened at the same time\u00a0\u2014 contradiction (\"INCORRECT\")."}, {"role": "assistant", "content": "datastructures"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The Main Martian Tree grows on Mars. It is a binary tree (a rooted tree, with no more than two sons at each vertex) with $$$n$$$ vertices, where the root vertex has the number $$$1$$$. Its fruits are the Main Martian Fruits. It's summer now, so this tree does not have any fruit yet.\n\nAutumn is coming soon, and leaves and branches will begin to fall off the tree. It is clear, that if a vertex falls off the tree, then its entire subtree will fall off too. In addition, the root will remain on the tree. Formally: the tree will have some connected subset of vertices containing the root.\n\nAfter that, the fruits will grow on the tree (only at those vertices which remain). Exactly $$$x$$$ fruits will grow in the root. The number of fruits in each remaining vertex will be not less than the sum of the numbers of fruits in the remaining sons of this vertex. It is allowed, that some vertices will not have any fruits.\n\nNatasha wondered how many tree configurations can be after the described changes. Since this number can be very large, output it modulo $$$998244353$$$.\n\nTwo configurations of the resulting tree are considered different if one of these two conditions is true:\n\nThe first line contains two integers: $$$n$$$ and $$$x$$$ ($$$1 \\le n \\le 10^5$$$, $$$0 \\le x \\le 10^{18}$$$)\u00a0\u2014 the size of the tree and the number of fruits in the root.\n\nThe $$$i$$$-th of the following $$$(n-1)$$$ lines contains two integers $$$a_i$$$ and $$$b_i$$$ ($$$1 \\le a_i, b_i \\le n$$$)\u00a0\u2014 vertices connected by the $$$i$$$-th edge of the tree.\n\nIt is guaranteed that the input data describes a correct binary tree with the root at the vertex $$$1$$$.\n\nPrint one number\u00a0\u2014 the number of configurations of the resulting tree modulo $$$998244353$$$.\n\nConsider the first example. \n\nThere are $$$2$$$ fruits at the vertex $$$1$$$. The following $$$13$$$ options are possible:\n\nConsider the second example. There are $$$5$$$ fruits at the vertex $$$1$$$. The following $$$7$$$ options are possible:"}, {"role": "assistant", "content": "fft, graphs, trees"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Natasha is going to fly to Mars. She needs to build a rocket, which consists of several stages in some order. Each of the stages is defined by a lowercase Latin letter. This way, the rocket can be described by the string\u00a0\u2014 concatenation of letters, which correspond to the stages.\n\nThere are $$$n$$$ stages available. The rocket must contain exactly $$$k$$$ of them. Stages in the rocket should be ordered by their weight. So, after the stage with some letter can go only stage with a letter, which is at least two positions after in the alphabet (skipping one letter in between, or even more). For example, after letter 'c' can't go letters 'a', 'b', 'c' and 'd', but can go letters 'e', 'f', ..., 'z'.\n\nFor the rocket to fly as far as possible, its weight should be minimal. The weight of the rocket is equal to the sum of the weights of its stages. The weight of the stage is the number of its letter in the alphabet. For example, the stage 'a 'weighs one ton,' b 'weighs two tons, and' z'\u00a0\u2014 $$$26$$$ tons.\n\nBuild the rocket with the minimal weight or determine, that it is impossible to build a rocket at all. Each stage can be used at most once.\n\nThe first line of input contains two integers\u00a0\u2014 $$$n$$$ and $$$k$$$ ($$$1 \\le k \\le n \\le 50$$$)\u00a0\u2013 the number of available stages and the number of stages to use in the rocket.\n\nThe second line contains string $$$s$$$, which consists of exactly $$$n$$$ lowercase Latin letters. Each letter defines a new stage, which can be used to build the rocket. Each stage can be used at most once.\n\nPrint a single integer\u00a0\u2014 the minimal total weight of the rocket or -1, if it is impossible to build the rocket at all.\n\nIn the first example, the following rockets satisfy the condition:\n\nRocket \"adx\" has the minimal weight, so the answer is $$$29$$$.\n\nIn the second example, target rocket is \"belo\". Its weight is $$$2+5+12+15=34$$$.\n\nIn the third example, $$$n=k=2$$$, so the rocket must have both stages: 'a' and 'b'. This rocket doesn't satisfy the condition, because these letters are adjacent in the alphabet. Answer is -1."}, {"role": "assistant", "content": "greedy, implementation, sortings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Natasha is planning an expedition to Mars for $$$n$$$ people. One of the important tasks is to provide food for each participant.\n\nThe warehouse has $$$m$$$ daily food packages. Each package has some food type $$$a_i$$$.\n\nEach participant must eat exactly one food package each day. Due to extreme loads, each participant must eat the same food type throughout the expedition. Different participants may eat different (or the same) types of food.\n\nFormally, for each participant $$$j$$$ Natasha should select his food type $$$b_j$$$ and each day $$$j$$$-th participant will eat one food package of type $$$b_j$$$. The values $$$b_j$$$ for different participants may be different.\n\nWhat is the maximum possible number of days the expedition can last, following the requirements above?\n\nThe first line contains two integers $$$n$$$ and $$$m$$$ ($$$1 \\le n \\le 100$$$, $$$1 \\le m \\le 100$$$)\u00a0\u2014 the number of the expedition participants and the number of the daily food packages available.\n\nThe second line contains sequence of integers $$$a_1, a_2, \\dots, a_m$$$ ($$$1 \\le a_i \\le 100$$$), where $$$a_i$$$ is the type of $$$i$$$-th food package.\n\nPrint the single integer\u00a0\u2014 the number of days the expedition can last. If it is not possible to plan the expedition for even one day, print 0.\n\nIn the first example, Natasha can assign type $$$1$$$ food to the first participant, the same type $$$1$$$ to the second, type $$$5$$$ to the third and type $$$2$$$ to the fourth. In this case, the expedition can last for $$$2$$$ days, since each participant can get two food packages of his food type (there will be used $$$4$$$ packages of type $$$1$$$, two packages of type $$$2$$$ and two packages of type $$$5$$$).\n\nIn the second example, there are $$$100$$$ participants and only $$$1$$$ food package. In this case, the expedition can't last even $$$1$$$ day."}, {"role": "assistant", "content": "binarysearch, bruteforce, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Natasha is going to fly on a rocket to Mars and return to Earth. Also, on the way to Mars, she will land on $$$n - 2$$$ intermediate planets. Formally: we number all the planets from $$$1$$$ to $$$n$$$. $$$1$$$ is Earth, $$$n$$$ is Mars. Natasha will make exactly $$$n$$$ flights: $$$1 \\to 2 \\to \\ldots n \\to 1$$$.\n\nFlight from $$$x$$$ to $$$y$$$ consists of two phases: take-off from planet $$$x$$$ and landing to planet $$$y$$$. This way, the overall itinerary of the trip will be: the $$$1$$$-st planet $$$\\to$$$ take-off from the $$$1$$$-st planet $$$\\to$$$ landing to the $$$2$$$-nd planet $$$\\to$$$ $$$2$$$-nd planet $$$\\to$$$ take-off from the $$$2$$$-nd planet $$$\\to$$$ $$$\\ldots$$$ $$$\\to$$$ landing to the $$$n$$$-th planet $$$\\to$$$ the $$$n$$$-th planet $$$\\to$$$ take-off from the $$$n$$$-th planet $$$\\to$$$ landing to the $$$1$$$-st planet $$$\\to$$$ the $$$1$$$-st planet.\n\nThe mass of the rocket together with all the useful cargo (but without fuel) is $$$m$$$ tons. However, Natasha does not know how much fuel to load into the rocket. Unfortunately, fuel can only be loaded on Earth, so if the rocket runs out of fuel on some other planet, Natasha will not be able to return home. Fuel is needed to take-off from each planet and to land to each planet. It is known that $$$1$$$ ton of fuel can lift off $$$a_i$$$ tons of rocket from the $$$i$$$-th planet or to land $$$b_i$$$ tons of rocket onto the $$$i$$$-th planet. \n\nFor example, if the weight of rocket is $$$9$$$ tons, weight of fuel is $$$3$$$ tons and take-off coefficient is $$$8$$$ ($$$a_i = 8$$$), then $$$1.5$$$ tons of fuel will be burnt (since $$$1.5 \\cdot 8 = 9 + 3$$$). The new weight of fuel after take-off will be $$$1.5$$$ tons. \n\nPlease note, that it is allowed to burn non-integral amount of fuel during take-off or landing, and the amount of initial fuel can be non-integral as well.\n\nHelp Natasha to calculate the minimum mass of fuel to load into the rocket. Note, that the rocket must spend fuel to carry both useful cargo and the fuel itself. However, it doesn't need to carry the fuel which has already been burnt. Assume, that the rocket takes off and lands instantly.\n\nThe first line contains a single integer $$$n$$$ ($$$2 \\le n \\le 1000$$$)\u00a0\u2014 number of planets.\n\nThe second line contains the only integer $$$m$$$ ($$$1 \\le m \\le 1000$$$)\u00a0\u2014 weight of the payload.\n\nThe third line contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\le a_i \\le 1000$$$), where $$$a_i$$$ is the number of tons, which can be lifted off by one ton of fuel.\n\nThe fourth line contains $$$n$$$ integers $$$b_1, b_2, \\ldots, b_n$$$ ($$$1 \\le b_i \\le 1000$$$), where $$$b_i$$$ is the number of tons, which can be landed by one ton of fuel. \n\nIt is guaranteed, that if Natasha can make a flight, then it takes no more than $$$10^9$$$ tons of fuel.\n\nIf Natasha can fly to Mars through $$$(n - 2)$$$ planets and return to Earth, print the minimum mass of fuel (in tons) that Natasha should take. Otherwise, print a single number $$$-1$$$.\n\nIt is guaranteed, that if Natasha can make a flight, then it takes no more than $$$10^9$$$ tons of fuel.\n\nThe answer will be considered correct if its absolute or relative error doesn't exceed $$$10^{-6}$$$. Formally, let your answer be $$$p$$$, and the jury's answer be $$$q$$$. Your answer is considered correct if $$$\\frac{|p - q|}{\\max{(1, |q|)}} \\le 10^{-6}$$$.\n\nLet's consider the first example.\n\nInitially, the mass of a rocket with fuel is $$$22$$$ tons.\n\nIn the second case, the rocket will not be able even to take off from Earth."}, {"role": "assistant", "content": "binarysearch, greedy, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "This is an interactive problem.\n\nNatasha is going to fly to Mars. Finally, Natasha sat in the rocket. She flies, flies... but gets bored. She wishes to arrive to Mars already! So she decides to find something to occupy herself. She couldn't think of anything better to do than to calculate the distance to the red planet.\n\nLet's define $$$x$$$ as the distance to Mars. Unfortunately, Natasha does not know $$$x$$$. But it is known that $$$1 \\le x \\le m$$$, where Natasha knows the number $$$m$$$. Besides, $$$x$$$ and $$$m$$$ are positive integers.\n\nNatasha can ask the rocket questions. Every question is an integer $$$y$$$ ($$$1 \\le y \\le m$$$). The correct answer to the question is $$$-1$$$, if $$$x<y$$$, $$$0$$$, if $$$x=y$$$, and $$$1$$$, if $$$x>y$$$. But the rocket is broken\u00a0\u2014 it does not always answer correctly. Precisely: let the correct answer to the current question be equal to $$$t$$$, then, if the rocket answers this question correctly, then it will answer $$$t$$$, otherwise it will answer $$$-t$$$.\n\nIn addition, the rocket has a sequence $$$p$$$ of length $$$n$$$. Each element of the sequence is either $$$0$$$ or $$$1$$$. The rocket processes this sequence in the cyclic order, that is $$$1$$$-st element, $$$2$$$-nd, $$$3$$$-rd, $$$\\ldots$$$, $$$(n-1)$$$-th, $$$n$$$-th, $$$1$$$-st, $$$2$$$-nd, $$$3$$$-rd, $$$\\ldots$$$, $$$(n-1)$$$-th, $$$n$$$-th, $$$\\ldots$$$. If the current element is $$$1$$$, the rocket answers correctly, if $$$0$$$\u00a0\u2014 lies. Natasha doesn't know the sequence $$$p$$$, but she knows its length\u00a0\u2014 $$$n$$$.\n\nYou can ask the rocket no more than $$$60$$$ questions.\n\nHelp Natasha find the distance to Mars. Assume, that the distance to Mars does not change while Natasha is asking questions.\n\nYour solution will not be accepted, if it does not receive an answer $$$0$$$ from the rocket (even if the distance to Mars is uniquely determined by the already received rocket's answers).\n\nThe first line contains two integers $$$m$$$ and $$$n$$$ ($$$1 \\le m \\le 10^9$$$, $$$1 \\le n \\le 30$$$)\u00a0\u2014 the maximum distance to Mars and the number of elements in the sequence $$$p$$$.\n\nYou can ask the rocket no more than $$$60$$$ questions.\n\nTo ask a question, print a number $$$y$$$ ($$$1\\le y\\le m$$$) and an end-of-line character, then do the operation flush and read the answer to the question.\n\nIf the program reads $$$0$$$, then the distance is correct and you must immediately terminate the program (for example, by calling exit(0)). If you ignore this, you can get any verdict, since your program will continue to read from the closed input stream.\n\nIf at some point your program reads $$$-2$$$ as an answer, it must immediately end (for example, by calling exit(0)). You will receive the \"Wrong answer\" verdict, and this will mean that the request is incorrect or the number of requests exceeds $$$60$$$. If you ignore this, you can get any verdict, since your program will continue to read from the closed input stream.\n\nIf your program's request is not a valid integer between $$$-2^{31}$$$ and $$$2^{31}-1$$$ (inclusive) without leading zeros, then you can get any verdict.\n\nYou can get \"Idleness limit exceeded\" if you don't print anything or if you forget to flush the output.\n\nTo flush the output buffer you can use (after printing a query and end-of-line):\n\nHacking\n\nUse the following format for hacking:\n\nIn the first line, print $$$3$$$ integers $$$m,n,x$$$ ($$$1\\le x\\le m\\le 10^9$$$, $$$1\\le n\\le 30$$$)\u00a0\u2014 the maximum distance to Mars, the number of elements in the sequence $$$p$$$ and the current distance to Mars.\n\nIn the second line, enter $$$n$$$ numbers, each of which is equal to $$$0$$$ or $$$1$$$\u00a0\u2014 sequence $$$p$$$.\n\nThe hacked solution will not have access to the number $$$x$$$ and sequence $$$p$$$.\n\nIn the example, hacking would look like this:\n\n5 2 3\n\n1 0\n\nThis means that the current distance to Mars is equal to $$$3$$$, Natasha knows that it does not exceed $$$5$$$, and the rocket answers in order: correctly, incorrectly, correctly, incorrectly ...\n\nReally:\n\non the first query ($$$1$$$) the correct answer is $$$1$$$, the rocket answered correctly: $$$1$$$;\n\non the second query ($$$2$$$) the correct answer is $$$1$$$, the rocket answered incorrectly: $$$-1$$$;\n\non the third query ($$$4$$$) the correct answer is $$$-1$$$, the rocket answered correctly: $$$-1$$$;\n\non the fourth query ($$$5$$$) the correct answer is $$$-1$$$, the rocket answered incorrectly: $$$1$$$;\n\non the fifth query ($$$3$$$) the correct and incorrect answer is $$$0$$$."}, {"role": "assistant", "content": "binarysearch, interactive"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Astronaut Natasha arrived on Mars. She knows that the Martians are very poor aliens. To ensure a better life for the Mars citizens, their emperor decided to take tax from every tourist who visited the planet. Natasha is the inhabitant of Earth, therefore she had to pay the tax to enter the territory of Mars.\n\nThere are $$$n$$$ banknote denominations on Mars: the value of $$$i$$$-th banknote is $$$a_i$$$. Natasha has an infinite number of banknotes of each denomination.\n\nMartians have $$$k$$$ fingers on their hands, so they use a number system with base $$$k$$$. In addition, the Martians consider the digit $$$d$$$ (in the number system with base $$$k$$$) divine. Thus, if the last digit in Natasha's tax amount written in the number system with the base $$$k$$$ is $$$d$$$, the Martians will be happy. Unfortunately, Natasha does not know the Martians' divine digit yet.\n\nDetermine for which values $$$d$$$ Natasha can make the Martians happy.\n\nNatasha can use only her banknotes. Martians don't give her change.\n\nThe first line contains two integers $$$n$$$ and $$$k$$$ ($$$1 \\le n \\le 100\\,000$$$, $$$2 \\le k \\le 100\\,000$$$)\u00a0\u2014 the number of denominations of banknotes and the base of the number system on Mars.\n\nThe second line contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\le a_i \\le 10^9$$$)\u00a0\u2014 denominations of banknotes on Mars.\n\nAll numbers are given in decimal notation.\n\nOn the first line output the number of values $$$d$$$ for which Natasha can make the Martians happy.\n\nIn the second line, output all these values in increasing order.\n\nPrint all numbers in decimal notation.\n\nConsider the first test case. It uses the octal number system.\n\nIf you take one banknote with the value of $$$12$$$, you will get $$$14_8$$$ in octal system. The last digit is $$$4_8$$$.\n\nIf you take one banknote with the value of $$$12$$$ and one banknote with the value of $$$20$$$, the total value will be $$$32$$$. In the octal system, it is $$$40_8$$$. The last digit is $$$0_8$$$.\n\nIf you take two banknotes with the value of $$$20$$$, the total value will be $$$40$$$, this is $$$50_8$$$ in the octal system. The last digit is $$$0_8$$$.\n\nNo other digits other than $$$0_8$$$ and $$$4_8$$$ can be obtained. Digits $$$0_8$$$ and $$$4_8$$$ could also be obtained in other ways.\n\nThe second test case uses the decimal number system. The nominals of all banknotes end with zero, so Natasha can give the Martians only the amount whose decimal notation also ends with zero."}, {"role": "assistant", "content": "numbertheory"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Natasha travels around Mars in the Mars rover. But suddenly it broke down, namely\u00a0\u2014 the logical scheme inside it. The scheme is an undirected tree (connected acyclic graph) with a root in the vertex $$$1$$$, in which every leaf (excluding root) is an input, and all other vertices are logical elements, including the root, which is output. One bit is fed to each input. One bit is returned at the output.\n\nThere are four types of logical elements: AND ($$$2$$$ inputs), OR ($$$2$$$ inputs), XOR ($$$2$$$ inputs), NOT ($$$1$$$ input). Logical elements take values from their direct descendants (inputs) and return the result of the function they perform. Natasha knows the logical scheme of the Mars rover, as well as the fact that only one input is broken. In order to fix the Mars rover, she needs to change the value on this input.\n\nFor each input, determine what the output will be if Natasha changes this input.\n\nThe first line contains a single integer $$$n$$$ ($$$2 \\le n \\le 10^6$$$)\u00a0\u2014 the number of vertices in the graph (both inputs and elements).\n\nThe $$$i$$$-th of the next $$$n$$$ lines contains a description of $$$i$$$-th vertex: the first word \"AND\", \"OR\", \"XOR\", \"NOT\" or \"IN\" (means the input of the scheme) is the vertex type. If this vertex is \"IN\", then the value of this input follows ($$$0$$$ or $$$1$$$), otherwise follow the indices of input vertices of this element: \"AND\", \"OR\", \"XOR\" have $$$2$$$ inputs, whereas \"NOT\" has $$$1$$$ input. The vertices are numbered from one.\n\nIt is guaranteed that input data contains a correct logical scheme with an output produced by the vertex $$$1$$$.\n\nPrint a string of characters '0' and '1' (without quotes)\u00a0\u2014 answers to the problem for each input in the ascending order of their vertex indices.\n\nThe original scheme from the example (before the input is changed):\n\n\n\nGreen indicates bits '1', yellow indicates bits '0'.\n\nIf Natasha changes the input bit $$$2$$$ to $$$0$$$, then the output will be $$$1$$$.\n\nIf Natasha changes the input bit $$$3$$$ to $$$0$$$, then the output will be $$$0$$$.\n\nIf Natasha changes the input bit $$$6$$$ to $$$1$$$, then the output will be $$$1$$$.\n\nIf Natasha changes the input bit $$$8$$$ to $$$0$$$, then the output will be $$$1$$$.\n\nIf Natasha changes the input bit $$$9$$$ to $$$0$$$, then the output will be $$$0$$$."}, {"role": "assistant", "content": "dfsandsimilar, graphs, trees"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Pavel made a photo of his favourite stars in the sky. His camera takes a photo of all points of the sky that belong to some rectangle with sides parallel to the coordinate axes.\n\nStrictly speaking, it makes a photo of all points with coordinates $$$(x, y)$$$, such that $$$x_1 \\leq x \\leq x_2$$$ and $$$y_1 \\leq y \\leq y_2$$$, where $$$(x_1, y_1)$$$ and $$$(x_2, y_2)$$$ are coordinates of the left bottom and the right top corners of the rectangle being photographed. The area of this rectangle can be zero.\n\nAfter taking the photo, Pavel wrote down coordinates of $$$n$$$ of his favourite stars which appeared in the photo. These points are not necessarily distinct, there can be multiple stars in the same point of the sky.\n\nPavel has lost his camera recently and wants to buy a similar one. Specifically, he wants to know the dimensions of the photo he took earlier. Unfortunately, the photo is also lost. His notes are also of not much help; numbers are written in random order all over his notepad, so it's impossible to tell which numbers specify coordinates of which points.\n\nPavel asked you to help him to determine what are the possible dimensions of the photo according to his notes. As there are multiple possible answers, find the dimensions with the minimal possible area of the rectangle.\n\nThe first line of the input contains an only integer $$$n$$$ ($$$1 \\leq n \\leq 100\\,000$$$), the number of points in Pavel's records.\n\nThe second line contains $$$2 \\cdot n$$$ integers $$$a_1$$$, $$$a_2$$$, ..., $$$a_{2 \\cdot n}$$$ ($$$1 \\leq a_i \\leq 10^9$$$), coordinates, written by Pavel in some order.\n\nPrint the only integer, the minimal area of the rectangle which could have contained all points from Pavel's records.\n\nIn the first sample stars in Pavel's records can be $$$(1, 3)$$$, $$$(1, 3)$$$, $$$(2, 3)$$$, $$$(2, 4)$$$. In this case, the minimal area of the rectangle, which contains all these points is $$$1$$$ (rectangle with corners at $$$(1, 3)$$$ and $$$(2, 4)$$$)."}, {"role": "assistant", "content": "bruteforce, implementation, math, sortings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Innopolis University scientists continue to investigate the periodic table. There are n\u00b7m known elements and they form a periodic table: a rectangle with n rows and m columns. Each element can be described by its coordinates (r,\u2009c) (1\u2009\u2264\u2009r\u2009\u2264\u2009n, 1\u2009\u2264\u2009c\u2009\u2264\u2009m) in the table.\n\nRecently scientists discovered that for every four different elements in this table that form a rectangle with sides parallel to the sides of the table, if they have samples of three of the four elements, they can produce a sample of the fourth element using nuclear fusion. So if we have elements in positions (r1,\u2009c1), (r1,\u2009c2), (r2,\u2009c1), where r1\u2009\u2260\u2009r2 and c1\u2009\u2260\u2009c2, then we can produce element (r2,\u2009c2).\n\nSamples used in fusion are not wasted and can be used again in future fusions. Newly crafted elements also can be used in future fusions.\n\nInnopolis University scientists already have samples of q elements. They want to obtain samples of all n\u00b7m elements. To achieve that, they will purchase some samples from other laboratories and then produce all remaining elements using an arbitrary number of nuclear fusions in some order. Help them to find the minimal number of elements they need to purchase.\n\nThe first line contains three integers n, m, q (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009200\u2009000; 0\u2009\u2264\u2009q\u2009\u2264\u2009min(n\u00b7m,\u2009200\u2009000)), the chemical table dimensions and the number of elements scientists already have.\n\nThe following q lines contain two integers ri, ci (1\u2009\u2264\u2009ri\u2009\u2264\u2009n, 1\u2009\u2264\u2009ci\u2009\u2264\u2009m), each describes an element that scientists already have. All elements in the input are different.\n\nPrint the minimal number of elements to be purchased.\n\nFor each example you have a picture which illustrates it.\n\nThe first picture for each example describes the initial set of element samples available. Black crosses represent elements available in the lab initially.\n\nThe second picture describes how remaining samples can be obtained. Red dashed circles denote elements that should be purchased from other labs (the optimal solution should minimize the number of red circles). Blue dashed circles are elements that can be produced with nuclear fusion. They are numbered in order in which they can be produced.\n\nTest 1\n\nWe can use nuclear fusion and get the element from three other samples, so we don't need to purchase anything.\n\nTest 2\n\nWe cannot use any nuclear fusion at all as there is only one row, so we have to purchase all missing elements.\n\nTest 3\n\nThere are several possible solutions. One of them is illustrated below.\n\nNote that after purchasing one element marked as red it's still not possible to immidiately produce the middle element in the bottom row (marked as 4). So we produce the element in the left-top corner first (marked as 1), and then use it in future fusions."}, {"role": "assistant", "content": "constructivealgorithms, dfsandsimilar, dsu, graphs, matrices"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Welcome to Innopolis city. Throughout the whole year, Innopolis citizens suffer from everlasting city construction. \n\nFrom the window in your room, you see the sequence of n hills, where i-th of them has height ai. The Innopolis administration wants to build some houses on the hills. However, for the sake of city appearance, a house can be only built on the hill, which is strictly higher than neighbouring hills (if they are present). For example, if the sequence of heights is 5,\u20094,\u20096,\u20092, then houses could be built on hills with heights 5 and 6 only.\n\nThe Innopolis administration has an excavator, that can decrease the height of an arbitrary hill by one in one hour. The excavator can only work on one hill at a time. It is allowed to decrease hills up to zero height, or even to negative values. Increasing height of any hill is impossible. The city administration wants to build k houses, so there must be at least k hills that satisfy the condition above. What is the minimum time required to adjust the hills to achieve the administration's plan?\n\nHowever, the exact value of k is not yet determined, so could you please calculate answers for all k in range ? Here  denotes n divided by two, rounded up.\n\nThe first line of input contains the only integer n (1\u2009\u2264\u2009n\u2009\u2264\u20095000)\u2014the number of the hills in the sequence.\n\nSecond line contains n integers ai (1\u2009\u2264\u2009ai\u2009\u2264\u2009100\u2009000)\u2014the heights of the hills in the sequence.\n\nPrint exactly  numbers separated by spaces. The i-th printed number should be equal to the minimum number of hours required to level hills so it becomes possible to build i houses.\n\nIn the first example, to get at least one hill suitable for construction, one can decrease the second hill by one in one hour, then the sequence of heights becomes 1,\u20090,\u20091,\u20091,\u20091 and the first hill becomes suitable for construction.\n\nIn the first example, to get at least two or at least three suitable hills, one can decrease the second and the fourth hills, then the sequence of heights becomes 1,\u20090,\u20091,\u20090,\u20091, and hills 1,\u20093,\u20095 become suitable for construction."}, {"role": "assistant", "content": "dp"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "There are two strings s and t, consisting only of letters a and b. You can make the following operation several times: choose a prefix of s, a prefix of t and swap them. Prefixes can be empty, also a prefix can coincide with a whole string. \n\nYour task is to find a sequence of operations after which one of the strings consists only of a letters and the other consists only of b letters. The number of operations should be minimized.\n\nThe first line contains a string s (1\u2009\u2264\u2009|s|\u2009\u2264\u20092\u00b7105).\n\nThe second line contains a string t (1\u2009\u2264\u2009|t|\u2009\u2264\u20092\u00b7105).\n\nHere |s| and |t| denote the lengths of s and t, respectively. It is guaranteed that at least one of the strings contains at least one a letter and at least one of the strings contains at least one b letter.\n\nThe first line should contain a single integer n (0\u2009\u2264\u2009n\u2009\u2264\u20095\u00b7105)\u00a0\u2014 the number of operations.\n\nEach of the next n lines should contain two space-separated integers ai, bi\u00a0\u2014 the lengths of prefixes of s and t to swap, respectively.\n\nIf there are multiple possible solutions, you can print any of them. It's guaranteed that a solution with given constraints exists.\n\nIn the first example, you can solve the problem in two operations:\n\nIn the second example, the strings are already appropriate, so no operations are needed."}, {"role": "assistant", "content": "constructivealgorithms, strings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given an array of $$$n$$$ positive integers $$$a_1, a_2, \\dots, a_n$$$. You can perform the following operation any number of times: select several distinct indices $$$i_1, i_2, \\dots, i_k$$$ ($$$1 \\le i_j \\le n$$$) and move the number standing at the position $$$i_1$$$ to the position $$$i_2$$$, the number at the position $$$i_2$$$ to the position $$$i_3$$$, ..., the number at the position $$$i_k$$$ to the position $$$i_1$$$. In other words, the operation cyclically shifts elements: $$$i_1 \\to i_2 \\to \\ldots i_k \\to i_1$$$.\n\nFor example, if you have $$$n=4$$$, an array $$$a_1=10, a_2=20, a_3=30, a_4=40$$$, and you choose three indices $$$i_1=2$$$, $$$i_2=1$$$, $$$i_3=4$$$, then the resulting array would become $$$a_1=20, a_2=40, a_3=30, a_4=10$$$.\n\nYour goal is to make the array sorted in non-decreasing order with the minimum number of operations. The additional constraint is that the sum of cycle lengths over all operations should be less than or equal to a number $$$s$$$. If it's impossible to sort the array while satisfying that constraint, your solution should report that as well.\n\nThe first line of the input contains two integers $$$n$$$ and $$$s$$$ ($$$1 \\leq n \\leq 200\\,000$$$, $$$0 \\leq s \\leq 200\\,000$$$)\u2014the number of elements in the array and the upper bound on the sum of cycle lengths.\n\nThe next line contains $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$\u2014elements of the array ($$$1 \\leq a_i \\leq 10^9$$$).\n\nIf it's impossible to sort the array using cycles of total length not exceeding $$$s$$$, print a single number \"-1\" (quotes for clarity).\n\nOtherwise, print a single number $$$q$$$\u2014 the minimum number of operations required to sort the array.\n\nOn the next $$$2 \\cdot q$$$ lines print descriptions of operations in the order they are applied to the array. The description of $$$i$$$-th operation begins with a single line containing one integer $$$k$$$ ($$$1 \\le k \\le n$$$)\u2014the length of the cycle (that is, the number of selected indices). The next line should contain $$$k$$$ distinct integers $$$i_1, i_2, \\dots, i_k$$$ ($$$1 \\le i_j \\le n$$$)\u2014the indices of the cycle.\n\nThe sum of lengths of these cycles should be less than or equal to $$$s$$$, and the array should be sorted after applying these $$$q$$$ operations.\n\nIf there are several possible answers with the optimal $$$q$$$, print any of them.\n\nIn the first example, it's also possible to sort the array with two operations of total length 5: first apply the cycle $$$1 \\to 4 \\to 1$$$ (of length 2), then apply the cycle $$$2 \\to 3 \\to 5 \\to 2$$$ (of length 3). However, it would be wrong answer as you're asked to use the minimal possible number of operations, which is 1 in that case.\n\nIn the second example, it's possible to the sort the array with two cycles of total length 4 ($$$1 \\to 2 \\to 1$$$ and $$$3 \\to 4 \\to 3$$$). However, it's impossible to achieve the same using shorter cycles, which is required by $$$s=3$$$.\n\nIn the third example, the array is already sorted, so no operations are needed. Total length of empty set of cycles is considered to be zero."}, {"role": "assistant", "content": "dsu, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Gleb is a famous competitive programming teacher from Innopolis. He is planning a trip to N programming camps in the nearest future. Each camp will be held in a different country. For each of them, Gleb needs to apply for a visa. \n\nFor each of these trips Gleb knows three integers: the number of the first day of the trip si, the length of the trip in days leni, and the number of days ti this country's consulate will take to process a visa application and stick a visa in a passport. Gleb has P (1\u2009\u2264\u2009P\u2009\u2264\u20092) valid passports and is able to decide which visa he wants to put in which passport.\n\nFor each trip, Gleb will have a flight to that country early in the morning of the day si and will return back late in the evening of the day si\u2009+\u2009leni\u2009-\u20091.\n\nTo apply for a visa on the day d, Gleb needs to be in Innopolis in the middle of this day. So he can't apply for a visa while he is on a trip, including the first and the last days. If a trip starts the next day after the end of the other one, Gleb can't apply for a visa between them as well. The earliest Gleb can apply for a visa is day 1.\n\nAfter applying for a visa of country i on day d, Gleb will get his passport back in the middle of the day d\u2009+\u2009ti. Consulates use delivery services, so Gleb can get his passport back even if he is not in Innopolis on this day. Gleb can apply for another visa on the same day he received his passport back, if he is in Innopolis this day. \n\nGleb will not be able to start his trip on day si if he doesn't has a passport with a visa for the corresponding country in the morning of day si. In particular, the passport should not be in another country's consulate for visa processing.\n\nHelp Gleb to decide which visas he needs to receive in which passport, and when he should apply for each visa. \n\nIn the first line of the input there are two integers N (1\u2009\u2264\u2009N\u2009\u2264\u200922) and P (1\u2009\u2264\u2009P\u2009\u2264\u20092)\u2014the number of trips and the number of passports Gleb has, respectively.\n\nThe next N lines describe Gleb's trips. Each line contains three positive integers si, leni, ti (1\u2009\u2264\u2009si,\u2009leni,\u2009ti\u2009\u2264\u2009109)\u2014the first day of the trip, the length of the trip and number of days the consulate of this country needs to process a visa application. It is guaranteed that no two trips intersect.\n\nIf it is impossible to get all visas on time, just print \"NO\" (quotes for clarity). Otherwise, print \"YES\" and N lines describing trips. For each trip, first print number of the passport Gleb should put this country's visa in, and then print number of the day he should apply for it. Print trips in the same order as they appear in the input. Days are numbered from 1, starting with tomorrow\u2014the first day you can apply for a visa. Passports are numbered from 1 to P.\n\nIf there are several possible answers, print any of them.\n\nExamples with answer \"YES\" are depicted below.\n\nEach cell of the stripe represents a single day. Rectangles represent trips, each trip starts in the morning and ends in the evening. Rectangles with angled corners represent visa applications. Each application starts in the middle of a day and ends ti days after. The trip and the visa application for the same country have the same color.\n\nIn examples with two passports, visa applications and trips depicted above the time stripe are made using the first passport, visa applications and trips depicted below the time stripe are made using the second passport.\n\nExample 1: \n\nExample 2: \n\nExample 3: "}, {"role": "assistant", "content": "dp, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "There is a beautiful garden of stones in Innopolis.\n\nIts most beautiful place is the $$$n$$$ piles with stones numbered from $$$1$$$ to $$$n$$$.\n\nEJOI participants have visited this place twice. \n\nWhen they first visited it, the number of stones in piles was $$$x_1, x_2, \\ldots, x_n$$$, correspondingly. One of the participants wrote down this sequence in a notebook. \n\nThey visited it again the following day, and the number of stones in piles was equal to $$$y_1, y_2, \\ldots, y_n$$$. One of the participants also wrote it down in a notebook.\n\nIt is well known that every member of the EJOI jury during the night either sits in the room $$$108$$$ or comes to the place with stones. Each jury member who comes there either takes one stone for himself or moves one stone from one pile to another. We can assume that there is an unlimited number of jury members. No one except the jury goes to the place with stones at night.\n\nParticipants want to know whether their notes can be correct or they are sure to have made a mistake.\n\nThe first line of the input file contains a single integer $$$n$$$, the number of piles with stones in the garden ($$$1 \\leq n \\leq 50$$$).\n\nThe second line contains $$$n$$$ integers separated by spaces $$$x_1, x_2, \\ldots, x_n$$$, the number of stones in piles recorded in the notebook when the participants came to the place with stones for the first time ($$$0 \\leq x_i \\leq 1000$$$).\n\nThe third line contains $$$n$$$ integers separated by spaces $$$y_1, y_2, \\ldots, y_n$$$, the number of stones in piles recorded in the notebook when the participants came to the place with stones for the second time ($$$0 \\leq y_i \\leq 1000$$$).\n\nIf the records can be consistent output \"Yes\", otherwise output \"No\" (quotes for clarity).\n\nIn the first example, the following could have happened during the night: one of the jury members moved one stone from the second pile to the first pile, and the other jury member moved one stone from the fourth pile to the third pile.\n\nIn the second example, the jury took stones from the second and fourth piles.\n\nIt can be proved that it is impossible for the jury members to move and took stones to convert the first array into the second array."}, {"role": "assistant", "content": "math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "There is an array with n elements a1,\u2009a2,\u2009...,\u2009an and the number x.\n\nIn one operation you can select some i (1\u2009\u2264\u2009i\u2009\u2264\u2009n) and replace element ai with ai\u2009&\u2009x, where & denotes the bitwise and operation.\n\nYou want the array to have at least two equal elements after applying some operations (possibly, none). In other words, there should be at least two distinct indices i\u2009\u2260\u2009j such that ai\u2009=\u2009aj. Determine whether it is possible to achieve and, if possible, the minimal number of operations to apply.\n\nThe first line contains integers n and x (2\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000, 1\u2009\u2264\u2009x\u2009\u2264\u2009100\u2009000), number of elements in the array and the number to and with.\n\nThe second line contains n integers ai (1\u2009\u2264\u2009ai\u2009\u2264\u2009100\u2009000), the elements of the array.\n\nPrint a single integer denoting the minimal number of operations to do, or -1, if it is impossible.\n\nIn the first example one can apply the operation to the last element of the array. That replaces 7 with 3, so we achieve the goal in one move.\n\nIn the second example the array already has two equal elements.\n\nIn the third example applying the operation won't change the array at all, so it is impossible to make some pair of elements equal."}, {"role": "assistant", "content": "greedy"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Pavel made a photo of his favourite stars in the sky. His camera takes a photo of all points of the sky that belong to some rectangle with sides parallel to the coordinate axes.\n\nStrictly speaking, it makes a photo of all points with coordinates $$$(x, y)$$$, such that $$$x_1 \\leq x \\leq x_2$$$ and $$$y_1 \\leq y \\leq y_2$$$, where $$$(x_1, y_1)$$$ and $$$(x_2, y_2)$$$ are coordinates of the left bottom and the right top corners of the rectangle being photographed. The area of this rectangle can be zero.\n\nAfter taking the photo, Pavel wrote down coordinates of $$$n$$$ of his favourite stars which appeared in the photo. These points are not necessarily distinct, there can be multiple stars in the same point of the sky.\n\nPavel has lost his camera recently and wants to buy a similar one. Specifically, he wants to know the dimensions of the photo he took earlier. Unfortunately, the photo is also lost. His notes are also of not much help; numbers are written in random order all over his notepad, so it's impossible to tell which numbers specify coordinates of which points.\n\nPavel asked you to help him to determine what are the possible dimensions of the photo according to his notes. As there are multiple possible answers, find the dimensions with the minimal possible area of the rectangle.\n\nThe first line of the input contains an only integer $$$n$$$ ($$$1 \\leq n \\leq 100\\,000$$$), the number of points in Pavel's records.\n\nThe second line contains $$$2 \\cdot n$$$ integers $$$a_1$$$, $$$a_2$$$, ..., $$$a_{2 \\cdot n}$$$ ($$$1 \\leq a_i \\leq 10^9$$$), coordinates, written by Pavel in some order.\n\nPrint the only integer, the minimal area of the rectangle which could have contained all points from Pavel's records.\n\nIn the first sample stars in Pavel's records can be $$$(1, 3)$$$, $$$(1, 3)$$$, $$$(2, 3)$$$, $$$(2, 4)$$$. In this case, the minimal area of the rectangle, which contains all these points is $$$1$$$ (rectangle with corners at $$$(1, 3)$$$ and $$$(2, 4)$$$)."}, {"role": "assistant", "content": "implementation, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Innopolis University scientists continue to investigate the periodic table. There are n\u00b7m known elements and they form a periodic table: a rectangle with n rows and m columns. Each element can be described by its coordinates (r,\u2009c) (1\u2009\u2264\u2009r\u2009\u2264\u2009n, 1\u2009\u2264\u2009c\u2009\u2264\u2009m) in the table.\n\nRecently scientists discovered that for every four different elements in this table that form a rectangle with sides parallel to the sides of the table, if they have samples of three of the four elements, they can produce a sample of the fourth element using nuclear fusion. So if we have elements in positions (r1,\u2009c1), (r1,\u2009c2), (r2,\u2009c1), where r1\u2009\u2260\u2009r2 and c1\u2009\u2260\u2009c2, then we can produce element (r2,\u2009c2).\n\nSamples used in fusion are not wasted and can be used again in future fusions. Newly crafted elements also can be used in future fusions.\n\nInnopolis University scientists already have samples of q elements. They want to obtain samples of all n\u00b7m elements. To achieve that, they will purchase some samples from other laboratories and then produce all remaining elements using an arbitrary number of nuclear fusions in some order. Help them to find the minimal number of elements they need to purchase.\n\nThe first line contains three integers n, m, q (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009200\u2009000; 0\u2009\u2264\u2009q\u2009\u2264\u2009min(n\u00b7m,\u2009200\u2009000)), the chemical table dimensions and the number of elements scientists already have.\n\nThe following q lines contain two integers ri, ci (1\u2009\u2264\u2009ri\u2009\u2264\u2009n, 1\u2009\u2264\u2009ci\u2009\u2264\u2009m), each describes an element that scientists already have. All elements in the input are different.\n\nPrint the minimal number of elements to be purchased.\n\nFor each example you have a picture which illustrates it.\n\nThe first picture for each example describes the initial set of element samples available. Black crosses represent elements available in the lab initially.\n\nThe second picture describes how remaining samples can be obtained. Red dashed circles denote elements that should be purchased from other labs (the optimal solution should minimize the number of red circles). Blue dashed circles are elements that can be produced with nuclear fusion. They are numbered in order in which they can be produced.\n\nTest 1\n\nWe can use nuclear fusion and get the element from three other samples, so we don't need to purchase anything.\n\nTest 2\n\nWe cannot use any nuclear fusion at all as there is only one row, so we have to purchase all missing elements.\n\nTest 3\n\nThere are several possible solutions. One of them is illustrated below.\n\nNote that after purchasing one element marked as red it's still not possible to immidiately produce the middle element in the bottom row (marked as 4). So we produce the element in the left-top corner first (marked as 1), and then use it in future fusions."}, {"role": "assistant", "content": "dfsandsimilar, graphs, matrices"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Welcome to Innopolis city. Throughout the whole year, Innopolis citizens suffer from everlasting city construction. \n\nFrom the window in your room, you see the sequence of n hills, where i-th of them has height ai. The Innopolis administration wants to build some houses on the hills. However, for the sake of city appearance, a house can be only built on the hill, which is strictly higher than neighbouring hills (if they are present). For example, if the sequence of heights is 5,\u20094,\u20096,\u20092, then houses could be built on hills with heights 5 and 6 only.\n\nThe Innopolis administration has an excavator, that can decrease the height of an arbitrary hill by one in one hour. The excavator can only work on one hill at a time. It is allowed to decrease hills up to zero height, or even to negative values. Increasing height of any hill is impossible. The city administration wants to build k houses, so there must be at least k hills that satisfy the condition above. What is the minimum time required to adjust the hills to achieve the administration's plan?\n\nHowever, the exact value of k is not yet determined, so could you please calculate answers for all k in range ? Here  denotes n divided by two, rounded up.\n\nThe first line of input contains the only integer n (1\u2009\u2264\u2009n\u2009\u2264\u20095000)\u2014the number of the hills in the sequence.\n\nSecond line contains n integers ai (1\u2009\u2264\u2009ai\u2009\u2264\u2009100\u2009000)\u2014the heights of the hills in the sequence.\n\nPrint exactly  numbers separated by spaces. The i-th printed number should be equal to the minimum number of hours required to level hills so it becomes possible to build i houses.\n\nIn the first example, to get at least one hill suitable for construction, one can decrease the second hill by one in one hour, then the sequence of heights becomes 1,\u20090,\u20091,\u20091,\u20091 and the first hill becomes suitable for construction.\n\nIn the first example, to get at least two or at least three suitable hills, one can decrease the second and the fourth hills, then the sequence of heights becomes 1,\u20090,\u20091,\u20090,\u20091, and hills 1,\u20093,\u20095 become suitable for construction."}, {"role": "assistant", "content": "dp"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "There are two strings s and t, consisting only of letters a and b. You can make the following operation several times: choose a prefix of s, a prefix of t and swap them. Prefixes can be empty, also a prefix can coincide with a whole string. \n\nYour task is to find a sequence of operations after which one of the strings consists only of a letters and the other consists only of b letters. The number of operations should be minimized.\n\nThe first line contains a string s (1\u2009\u2264\u2009|s|\u2009\u2264\u20092\u00b7105).\n\nThe second line contains a string t (1\u2009\u2264\u2009|t|\u2009\u2264\u20092\u00b7105).\n\nHere |s| and |t| denote the lengths of s and t, respectively. It is guaranteed that at least one of the strings contains at least one a letter and at least one of the strings contains at least one b letter.\n\nThe first line should contain a single integer n (0\u2009\u2264\u2009n\u2009\u2264\u20095\u00b7105)\u00a0\u2014 the number of operations.\n\nEach of the next n lines should contain two space-separated integers ai, bi\u00a0\u2014 the lengths of prefixes of s and t to swap, respectively.\n\nIf there are multiple possible solutions, you can print any of them. It's guaranteed that a solution with given constraints exists.\n\nIn the first example, you can solve the problem in two operations:\n\nIn the second example, the strings are already appropriate, so no operations are needed."}, {"role": "assistant", "content": "constructivealgorithms, strings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Imagine an infinite colored stripe with a beginning but without end. The stripe is separated into squares, and its width is equal to the size of a square. Each square is painted in one of $$$C = 10$$$ colors. The colors are denoted by the first $$$10$$$ capital English letters.\n\nThere are $$$U = 10$$$ chameleons living on the stripe. The chameleons are numbered by integers starting from zero. Initially, the chameleons occupy the first $$$10$$$ squares according to their order: chameleon $$$0$$$ is in the very first square, chameleon $$$1$$$ is in the square after the first one, and so on.\n\nKurt is the shepherd of the chameleons. He can freely move around the colored stripe. Kurt wants the chameleons to move as far as possible from the beginning of the stripe before the night comes. Kurt holds $$$H = 10$$$ bottles of paint in his hands, and his backpack contains $$$S = 10\\,000$$$ additional bottles. Each bottle also has one of the $$$C$$$ colors.\n\nKurt can compel a chameleon to move. For that, he has to throw one of the bottles in his hands at one of the chameleons, painting it in the color of the bottle (let it be color $$$x$$$). After that, the chameleon which was hit by the bottle goes forward along the stripe until it finds the next free square painted in color $$$x$$$, and then stops at this square. As the chameleon moves because of the throw, other chameleons stand still, and Kurt just manages to blindly take the next bottle from his backpack, so that he again has exactly $$$10$$$ of them in his hands.\n\nNote that a chameleon starts to search for his color from the next square, so it can not stay in place even if the color of the thrown bottle was the same as the color of the square where it stood. Also note that two chameleons never appear at the same square simultaneously: if chameleon $$$h$$$ sees a square of the appropriate color, but the square is occupied by another chameleon, then $$$h$$$ will move further searching for a free square of the required color.\n\nThe night comes when Kurt takes the last bottle from the backpack. (Kurt can also put chameleons at rest at any moment and wait for the night to come.) At this moment, consider chameleon $$$s$$$ which is closest to the beginning of the stripe. The result is an integer: the number of squares from the beginning of the stripe to this chameleon $$$s$$$. Come up with how Kurt should act to make this number as large as possible.\n\nInput\n\nThe input consists of three lines.\n\nThe first line contains integers $$$N$$$, $$$S$$$, $$$C$$$, $$$H$$$, and $$$U$$$: the length of the stripe pattern, the number of bottles of paint in the backpack, the number of colors, the number of bottles Kurt simultaneously holds in his hands, and the number of chameleons. These are given just in case: in all tests for this problem, $$$N = 100\\,000$$$, $$$S = 10\\,000$$$, $$$C = 10$$$, $$$H = 10$$$, and $$$U = 10$$$.\n\nThe second line contains $$$N$$$ characters each of which is one of the first $$$10$$$ capital English letters. This is the stripe pattern: if we concatenate it with itself for infinity, and then read from left to right, the result will denote the colors of the squares on the stripe starting from the beginning.\n\nThe third line contains $$$H + S$$$ characters each of which is also one of the first $$$10$$$ capital English letters. The first $$$H$$$ characters correspond to the bottles which Kurt initially holds in his hands. The next $$$S$$$ characters denote the colors of the bottles Kurt takes from his backpack, in the order in which it happens. As Kurt takes them blindly, the order in which they appear from the backpack can not be changed.\n\nOutput\n\nPrint from $$$0$$$ to $$$S$$$ actions for Kurt in chronological order, one per line. Each action is denoted as \"$$$u$$$\u00a0$$$c$$$\", where the integer $$$u$$$ is the number of the chameleon at which the bottle is thrown, and the character $$$c$$$ is the capital English letter denoting the color of the bottle.\n\nIn case $$$u$$$ or $$$c$$$ are outside the required limits, or Kurt no bottle of the requested color in his hands, the output is judged as \"Wrong\u00a0Answer\".\n\nTesting\n\nYour solution will be checked on sets of tests generated in advance. Each test is created using a pseudo-random number generator. You can consider that the colors of the squares in the stripe pattern, the bottles in Kurt's hands, and the bottles in the backpack are uniformly distributed (the probabilities of all $$$C$$$ colors are the same) and mutually independent (the probabilities of all $$$C^{N + H + S}$$$ possible tests are the same).\n\nA solution's score is the average of its results on all the tests. If a solution did not output a valid answer on a certain test, the result for this test is zero.\n\nDuring the main phase of the contest, there are two ways to send a solution for checking.\n\nAfter the main phase ends, for each participant, the system chooses the final solution:\n\nNote that the solutions sent only to be checked on examples are not considered when choosing the final solution.\n\nDuring the final testing, all final solutions will be checked on the same large set of a large number ($$$\\approx 1000$$$) of final tests. The score for final tests determines the final scoreboard. The winner is the contestant whose solution gets the highest total score. In case two or more participants have equal total score, the contestants with such score tie for the same place.\n\nExample\n\nTo have an example which fits into the problem statement, let $$$N = 40$$$ and $$$S = 5$$$ (recall that in all the real tests for this problem, $$$N = 100\\,000$$$ and $$$S = 10\\,000$$$). \n\nConsider an output which lists three actions.\n\nThe initial state:\n\nThe state after the first action (0\u00a0D):\n\nThe state after the second action (8\u00a0H):\n\nThe state after the third action (1\u00a0D):\n\nThe chameleon closest to the beginning of the stripe is the chameleon number $$$2$$$. The result, which is the number of squares from the beginning of the stripe to this chameleon, is equal to 2.\n\nNote\n\nThe rules of chameleon movement are similar to the game mechanic used in the children's board games \"Hoot Owl Hoot!\" and \"Cartagena\"."}, {"role": "assistant", "content": "*specialproblem"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given a set of $$$n$$$ segments on the axis $$$Ox$$$, each segment has integer endpoints between $$$1$$$ and $$$m$$$ inclusive. Segments may intersect, overlap or even coincide with each other. Each segment is characterized by two integers $$$l_i$$$ and $$$r_i$$$ ($$$1 \\le l_i \\le r_i \\le m$$$) \u2014 coordinates of the left and of the right endpoints. \n\nConsider all integer points between $$$1$$$ and $$$m$$$ inclusive. Your task is to print all such points that don't belong to any segment. The point $$$x$$$ belongs to the segment $$$[l; r]$$$ if and only if $$$l \\le x \\le r$$$.\n\nThe first line of the input contains two integers $$$n$$$ and $$$m$$$ ($$$1 \\le n, m \\le 100$$$) \u2014 the number of segments and the upper bound for coordinates.\n\nThe next $$$n$$$ lines contain two integers each $$$l_i$$$ and $$$r_i$$$ ($$$1 \\le l_i \\le r_i \\le m$$$) \u2014 the endpoints of the $$$i$$$-th segment. Segments may intersect, overlap or even coincide with each other. Note, it is possible that $$$l_i=r_i$$$, i.e. a segment can degenerate to a point.\n\nIn the first line print one integer $$$k$$$ \u2014 the number of points that don't belong to any segment.\n\nIn the second line print exactly $$$k$$$ integers in any order \u2014 the points that don't belong to any segment. All points you print should be distinct.\n\nIf there are no such points at all, print a single integer $$$0$$$ in the first line and either leave the second line empty or do not print it at all.\n\nIn the first example the point $$$1$$$ belongs to the second segment, the point $$$2$$$ belongs to the first and the second segments and the point $$$5$$$ belongs to the third segment. The points $$$3$$$ and $$$4$$$ do not belong to any segment.\n\nIn the second example all the points from $$$1$$$ to $$$7$$$ belong to the first segment."}, {"role": "assistant", "content": "implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given two strings $$$s$$$ and $$$t$$$. Both strings have length $$$n$$$ and consist of lowercase Latin letters. The characters in the strings are numbered from $$$1$$$ to $$$n$$$.\n\nYou can successively perform the following move any number of times (possibly, zero):\n\nYou can't apply a move to the string $$$t$$$. The moves are applied to the string $$$s$$$ one after another.\n\nYour task is to obtain the string $$$t$$$ from the string $$$s$$$. Find any way to do it with at most $$$10^4$$$ such moves.\n\nYou do not have to minimize the number of moves, just find any sequence of moves of length $$$10^4$$$ or less to transform $$$s$$$ into $$$t$$$.\n\nThe first line of the input contains one integer $$$n$$$ ($$$1 \\le n \\le 50$$$) \u2014 the length of strings $$$s$$$ and $$$t$$$.\n\nThe second line of the input contains the string $$$s$$$ consisting of $$$n$$$ lowercase Latin letters.\n\nThe third line of the input contains the string $$$t$$$ consisting of $$$n$$$ lowercase Latin letters.\n\nIf it is impossible to obtain the string $$$t$$$ using moves, print \"-1\".\n\nOtherwise in the first line print one integer $$$k$$$ \u2014 the number of moves to transform $$$s$$$ to $$$t$$$. Note that $$$k$$$ must be an integer number between $$$0$$$ and $$$10^4$$$ inclusive.\n\nIn the second line print $$$k$$$ integers $$$c_j$$$ ($$$1 \\le c_j < n$$$), where $$$c_j$$$ means that on the $$$j$$$-th move you swap characters $$$s_{c_j}$$$ and $$$s_{c_j + 1}$$$.\n\nIf you do not need to apply any moves, print a single integer $$$0$$$ in the first line and either leave the second line empty or do not print it at all.\n\nIn the first example the string $$$s$$$ changes as follows: \"abcdef\" $$$\\rightarrow$$$ \"abdcef\" $$$\\rightarrow$$$ \"abdcfe\" $$$\\rightarrow$$$ \"abdfce\" $$$\\rightarrow$$$ \"abdfec\".\n\nIn the second example there is no way to transform the string $$$s$$$ into the string $$$t$$$ through any allowed moves."}, {"role": "assistant", "content": "implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Ivan has $$$n$$$ songs on his phone. The size of the $$$i$$$-th song is $$$a_i$$$ bytes. Ivan also has a flash drive which can hold at most $$$m$$$ bytes in total. Initially, his flash drive is empty.\n\nIvan wants to copy all $$$n$$$ songs to the flash drive. He can compress the songs. If he compresses the $$$i$$$-th song, the size of the $$$i$$$-th song reduces from $$$a_i$$$ to $$$b_i$$$ bytes ($$$b_i < a_i$$$).\n\nIvan can compress any subset of the songs (possibly empty) and copy all the songs to his flash drive if the sum of their sizes is at most $$$m$$$. He can compress any subset of the songs (not necessarily contiguous).\n\nIvan wants to find the minimum number of songs he needs to compress in such a way that all his songs fit on the drive (i.e. the sum of their sizes is less than or equal to $$$m$$$).\n\nIf it is impossible to copy all the songs (even if Ivan compresses all the songs), print \"-1\". Otherwise print the minimum number of songs Ivan needs to compress.\n\nThe first line of the input contains two integers $$$n$$$ and $$$m$$$ ($$$1 \\le n \\le 10^5, 1 \\le m \\le 10^9$$$) \u2014 the number of the songs on Ivan's phone and the capacity of Ivan's flash drive.\n\nThe next $$$n$$$ lines contain two integers each: the $$$i$$$-th line contains two integers $$$a_i$$$ and $$$b_i$$$ ($$$1 \\le a_i, b_i \\le 10^9$$$, $$$a_i > b_i$$$) \u2014 the initial size of the $$$i$$$-th song and the size of the $$$i$$$-th song after compression.\n\nIf it is impossible to compress a subset of the songs in such a way that all songs fit on the flash drive, print \"-1\". Otherwise print the minimum number of the songs to compress.\n\nIn the first example Ivan can compress the first and the third songs so after these moves the sum of sizes will be equal to $$$8 + 7 + 1 + 5 = 21 \\le 21$$$. Also Ivan can compress the first and the second songs, then the sum of sizes will be equal $$$8 + 4 + 3 + 5 = 20 \\le 21$$$. Note that compressing any single song is not sufficient to copy all the songs on the flash drive (for example, after compressing the second song the sum of sizes will be equal to $$$10 + 4 + 3 + 5 = 22 > 21$$$).\n\nIn the second example even if Ivan compresses all the songs the sum of sizes will be equal $$$8 + 4 + 1 + 4 = 17 > 16$$$."}, {"role": "assistant", "content": "sortings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "There are $$$n$$$ houses in a row. They are numbered from $$$1$$$ to $$$n$$$ in order from left to right. Initially you are in the house $$$1$$$.\n\nYou have to perform $$$k$$$ moves to other house. In one move you go from your current house to some other house. You can't stay where you are (i.e., in each move the new house differs from the current house). If you go from the house $$$x$$$ to the house $$$y$$$, the total distance you walked increases by $$$|x-y|$$$ units of distance, where $$$|a|$$$ is the absolute value of $$$a$$$. It is possible to visit the same house multiple times (but you can't visit the same house in sequence).\n\nYour goal is to walk exactly $$$s$$$ units of distance in total.\n\nIf it is impossible, print \"NO\". Otherwise print \"YES\" and any of the ways to do that. Remember that you should do exactly $$$k$$$ moves.\n\nThe first line of the input contains three integers $$$n$$$, $$$k$$$, $$$s$$$ ($$$2 \\le n \\le 10^9$$$, $$$1 \\le k \\le 2 \\cdot 10^5$$$, $$$1 \\le s \\le 10^{18}$$$) \u2014 the number of houses, the number of moves and the total distance you want to walk.\n\nIf you cannot perform $$$k$$$ moves with total walking distance equal to $$$s$$$, print \"NO\".\n\nOtherwise print \"YES\" on the first line and then print exactly $$$k$$$ integers $$$h_i$$$ ($$$1 \\le h_i \\le n$$$) on the second line, where $$$h_i$$$ is the house you visit on the $$$i$$$-th move.\n\nFor each $$$j$$$ from $$$1$$$ to $$$k-1$$$ the following condition should be satisfied: $$$h_j \\ne h_{j + 1}$$$. Also $$$h_1 \\ne 1$$$ should be satisfied."}, {"role": "assistant", "content": "constructivealgorithms, greedy"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "A star is a figure of the following type: an asterisk character '*' in the center of the figure and four rays (to the left, right, top, bottom) of the same positive length. The size of a star is the length of its rays. The size of a star must be a positive number (i.e. rays of length $$$0$$$ are not allowed).\n\nLet's consider empty cells are denoted by '.', then the following figures are stars:\n\nYou are given a rectangular grid of size $$$n \\times m$$$ consisting only of asterisks '*' and periods (dots) '.'. Rows are numbered from $$$1$$$ to $$$n$$$, columns are numbered from $$$1$$$ to $$$m$$$. Your task is to draw this grid using any number of stars or find out that it is impossible. Stars can intersect, overlap or even coincide with each other. The number of stars in the output can't exceed $$$n \\cdot m$$$. Each star should be completely inside the grid. You can use stars of same and arbitrary sizes.\n\nIn this problem, you do not need to minimize the number of stars. Just find any way to draw the given grid with at most $$$n \\cdot m$$$ stars.\n\nThe first line of the input contains two integers $$$n$$$ and $$$m$$$ ($$$3 \\le n, m \\le 100$$$) \u2014 the sizes of the given grid.\n\nThe next $$$n$$$ lines contains $$$m$$$ characters each, the $$$i$$$-th line describes the $$$i$$$-th row of the grid. It is guaranteed that grid consists of characters '*' and '.' only.\n\nIf it is impossible to draw the given grid using stars only, print \"-1\".\n\nOtherwise in the first line print one integer $$$k$$$ ($$$0 \\le k \\le n \\cdot m$$$) \u2014 the number of stars needed to draw the given grid. The next $$$k$$$ lines should contain three integers each \u2014 $$$x_j$$$, $$$y_j$$$ and $$$s_j$$$, where $$$x_j$$$ is the row index of the central star character, $$$y_j$$$ is the column index of the central star character and $$$s_j$$$ is the size of the star. Each star should be completely inside the grid.\n\nIn the first example the output \n\nis also correct."}, {"role": "assistant", "content": "bruteforce, dp, greedy"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "A star is a figure of the following type: an asterisk character '*' in the center of the figure and four rays (to the left, right, top, bottom) of the same positive length. The size of a star is the length of its rays. The size of a star must be a positive number (i.e. rays of length $$$0$$$ are not allowed).\n\nLet's consider empty cells are denoted by '.', then the following figures are stars:\n\nYou are given a rectangular grid of size $$$n \\times m$$$ consisting only of asterisks '*' and periods (dots) '.'. Rows are numbered from $$$1$$$ to $$$n$$$, columns are numbered from $$$1$$$ to $$$m$$$. Your task is to draw this grid using any number of stars or find out that it is impossible. Stars can intersect, overlap or even coincide with each other. The number of stars in the output can't exceed $$$n \\cdot m$$$. Each star should be completely inside the grid. You can use stars of same and arbitrary sizes.\n\nIn this problem, you do not need to minimize the number of stars. Just find any way to draw the given grid with at most $$$n \\cdot m$$$ stars.\n\nThe first line of the input contains two integers $$$n$$$ and $$$m$$$ ($$$3 \\le n, m \\le 1000$$$) \u2014 the sizes of the given grid.\n\nThe next $$$n$$$ lines contains $$$m$$$ characters each, the $$$i$$$-th line describes the $$$i$$$-th row of the grid. It is guaranteed that grid consists of characters '*' and '.' only.\n\nIf it is impossible to draw the given grid using stars only, print \"-1\".\n\nOtherwise in the first line print one integer $$$k$$$ ($$$0 \\le k \\le n \\cdot m$$$) \u2014 the number of stars needed to draw the given grid. The next $$$k$$$ lines should contain three integers each \u2014 $$$x_j$$$, $$$y_j$$$ and $$$s_j$$$, where $$$x_j$$$ is the row index of the central star character, $$$y_j$$$ is the column index of the central star character and $$$s_j$$$ is the size of the star. Each star should be completely inside the grid.\n\nIn the first example the output \n\nis also correct."}, {"role": "assistant", "content": "binarysearch, dp, greedy"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given a bracket sequence $$$s$$$ (not necessarily a regular one). A bracket sequence is a string containing only characters '(' and ')'.\n\nA regular bracket sequence is a bracket sequence that can be transformed into a correct arithmetic expression by inserting characters '1' and '+' between the original characters of the sequence. For example, bracket sequences \"()()\" and \"(())\" are regular (the resulting expressions are: \"(1)+(1)\" and \"((1+1)+1)\"), and \")(\", \"(\" and \")\" are not.\n\nYour problem is to calculate the number of regular bracket sequences of length $$$2n$$$ containing the given bracket sequence $$$s$$$ as a substring (consecutive sequence of characters) modulo $$$10^9+7$$$ ($$$1000000007$$$).\n\nThe first line of the input contains one integer $$$n$$$ ($$$1 \\le n \\le 100$$$) \u2014 the half-length of the resulting regular bracket sequences (the resulting sequences must have length equal to $$$2n$$$).\n\nThe second line of the input contains one string $$$s$$$ ($$$1 \\le |s| \\le 200$$$) \u2014 the string $$$s$$$ that should be a substring in each of the resulting regular bracket sequences ($$$|s|$$$ is the length of $$$s$$$).\n\nPrint only one integer \u2014 the number of regular bracket sequences containing the given bracket sequence $$$s$$$ as a substring. Since this number can be huge, print it modulo $$$10^9+7$$$ ($$$1000000007$$$).\n\nAll regular bracket sequences satisfying the conditions above for the first example: \n\nAll regular bracket sequences satisfying the conditions above for the second example: \n\nAnd there is no regular bracket sequences of length $$$4$$$ containing \"(((\" as a substring in the third example."}, {"role": "assistant", "content": "dp, strings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You received a notebook which is called Death Note. This notebook has infinite number of pages. A rule is written on the last page (huh) of this notebook. It says: \"You have to write names in this notebook during $$$n$$$ consecutive days. During the $$$i$$$-th day you have to write exactly $$$a_i$$$ names.\". You got scared (of course you got scared, who wouldn't get scared if he just receive a notebook which is named Death Note with a some strange rule written in it?).\n\nOf course, you decided to follow this rule. When you calmed down, you came up with a strategy how you will write names in the notebook. You have calculated that each page of the notebook can contain exactly $$$m$$$ names. You will start writing names from the first page. You will write names on the current page as long as the limit on the number of names on this page is not exceeded. When the current page is over, you turn the page. Note that you always turn the page when it ends, it doesn't matter if it is the last day or not. If after some day the current page still can hold at least one name, during the next day you will continue writing the names from the current page.\n\nNow you are interested in the following question: how many times will you turn the page during each day? You are interested in the number of pages you will turn each day from $$$1$$$ to $$$n$$$.\n\nThe first line of the input contains two integers $$$n$$$, $$$m$$$ ($$$1 \\le n \\le 2 \\cdot 10^5$$$, $$$1 \\le m \\le 10^9$$$) \u2014 the number of days you will write names in the notebook and the number of names which can be written on each page of the notebook.\n\nThe second line contains $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$ ($$$1 \\le a_i \\le 10^9$$$), where $$$a_i$$$ means the number of names you will write in the notebook during the $$$i$$$-th day.\n\nPrint exactly $$$n$$$ integers $$$t_1, t_2, \\dots, t_n$$$, where $$$t_i$$$ is the number of times you will turn the page during the $$$i$$$-th day.\n\nIn the first example pages of the Death Note will look like this $$$[1, 1, 1, 2, 2], [2, 2, 2, 2, 2], [3, 3, 3, 3, 3], [3, 3, 3, 3]$$$. Each number of the array describes during which day name on the corresponding position will be written. It is easy to see that you should turn the first and the second page during the second day and the third page during the third day."}, {"role": "assistant", "content": "greedy, implementation, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given two strings $$$s$$$ and $$$t$$$, both consisting only of lowercase Latin letters.\n\nThe substring $$$s[l..r]$$$ is the string which is obtained by taking characters $$$s_l, s_{l + 1}, \\dots, s_r$$$ without changing the order.\n\nEach of the occurrences of string $$$a$$$ in a string $$$b$$$ is a position $$$i$$$ ($$$1 \\le i \\le |b| - |a| + 1$$$) such that $$$b[i..i + |a| - 1] = a$$$ ($$$|a|$$$ is the length of string $$$a$$$).\n\nYou are asked $$$q$$$ queries: for the $$$i$$$-th query you are required to calculate the number of occurrences of string $$$t$$$ in a substring $$$s[l_i..r_i]$$$.\n\nThe first line contains three integer numbers $$$n$$$, $$$m$$$ and $$$q$$$ ($$$1 \\le n, m \\le 10^3$$$, $$$1 \\le q \\le 10^5$$$) \u2014 the length of string $$$s$$$, the length of string $$$t$$$ and the number of queries, respectively.\n\nThe second line is a string $$$s$$$ ($$$|s| = n$$$), consisting only of lowercase Latin letters.\n\nThe third line is a string $$$t$$$ ($$$|t| = m$$$), consisting only of lowercase Latin letters.\n\nEach of the next $$$q$$$ lines contains two integer numbers $$$l_i$$$ and $$$r_i$$$ ($$$1 \\le l_i \\le r_i \\le n$$$) \u2014 the arguments for the $$$i$$$-th query.\n\nPrint $$$q$$$ lines \u2014 the $$$i$$$-th line should contain the answer to the $$$i$$$-th query, that is the number of occurrences of string $$$t$$$ in a substring $$$s[l_i..r_i]$$$.\n\nIn the first example the queries are substrings: \"cod\", \"deforces\", \"fo\" and \"for\", respectively."}, {"role": "assistant", "content": "bruteforce, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Vasya's house is situated in a forest, and there is a mushroom glade near it. The glade consists of two rows, each of which can be divided into n consecutive cells. For each cell Vasya knows how fast the mushrooms grow in this cell (more formally, how many grams of mushrooms grow in this cell each minute). Vasya spends exactly one minute to move to some adjacent cell. Vasya cannot leave the glade. Two cells are considered adjacent if they share a common side. When Vasya enters some cell, he instantly collects all the mushrooms growing there.\n\nVasya begins his journey in the left upper cell. Every minute Vasya must move to some adjacent cell, he cannot wait for the mushrooms to grow. He wants to visit all the cells exactly once and maximize the total weight of the collected mushrooms. Initially, all mushrooms have a weight of 0. Note that Vasya doesn't need to return to the starting cell.\n\nHelp Vasya! Calculate the maximum total weight of mushrooms he can collect.\n\nThe first line contains the number n\u00a0(1\u2009\u2264\u2009n\u2009\u2264\u20093\u00b7105) \u2014 the length of the glade.\n\nThe second line contains n numbers a1,\u2009a2,\u2009...,\u2009an\u00a0(1\u2009\u2264\u2009ai\u2009\u2264\u2009106) \u2014 the growth rate of mushrooms in the first row of the glade.\n\nThe third line contains n numbers b1,\u2009b2,\u2009...,\u2009bn\u00a0(1\u2009\u2264\u2009bi\u2009\u2264\u2009106) is the growth rate of mushrooms in the second row of the glade.\n\nOutput one number \u2014 the maximum total weight of mushrooms that Vasya can collect by choosing the optimal route. Pay attention that Vasya must visit every cell of the glade exactly once.\n\nIn the first test case, the optimal route is as follows: \n\nIn the second test case, the optimal route is as follows: "}, {"role": "assistant", "content": "dp, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Now Vasya is taking an exam in mathematics. In order to get a good mark, Vasya needs to guess the matrix that the teacher has constructed!\n\nVasya knows that the matrix consists of n rows and m columns. For each row, he knows the xor (bitwise excluding or) of the elements in this row. The sequence a1,\u2009a2,\u2009...,\u2009an denotes the xor of elements in rows with indices 1, 2, ..., n, respectively. Similarly, for each column, he knows the xor of the elements in this column. The sequence b1,\u2009b2,\u2009...,\u2009bm denotes the xor of elements in columns with indices 1, 2, ..., m, respectively.\n\nHelp Vasya! Find a matrix satisfying the given constraints or tell him that there is no suitable matrix.\n\nThe first line contains two numbers n and m\u00a0(2\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009100) \u2014 the dimensions of the matrix.\n\nThe second line contains n numbers a1,\u2009a2,\u2009...,\u2009an\u00a0(0\u2009\u2264\u2009ai\u2009\u2264\u2009109), where ai is the xor of all elements in row i.\n\nThe third line contains m numbers b1,\u2009b2,\u2009...,\u2009bm\u00a0(0\u2009\u2264\u2009bi\u2009\u2264\u2009109), where bi is the xor of all elements in column i.\n\nIf there is no matrix satisfying the given constraints in the first line, output \"NO\".\n\nOtherwise, on the first line output \"YES\", and then n rows of m numbers in each ci1,\u2009ci2,\u2009... ,\u2009cim\u00a0(0\u2009\u2264\u2009cij\u2009\u2264\u20092\u00b7109) \u2014 the description of the matrix.\n\nIf there are several suitable matrices, it is allowed to print any of them."}, {"role": "assistant", "content": "constructivealgorithms, flows, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "There is a light source on the plane. This source is so small that it can be represented as point. The light source is moving from point $$$(a, s_y)$$$ to the $$$(b, s_y)$$$ $$$(s_y < 0)$$$ with speed equal to $$$1$$$ unit per second. The trajectory of this light source is a straight segment connecting these two points. \n\nThere is also a fence on $$$OX$$$ axis represented as $$$n$$$ segments $$$(l_i, r_i)$$$ (so the actual coordinates of endpoints of each segment are $$$(l_i, 0)$$$ and $$$(r_i, 0)$$$). The point $$$(x, y)$$$ is in the shade if segment connecting $$$(x,y)$$$ and the current position of the light source intersects or touches with any segment of the fence.\n\nYou are given $$$q$$$ points. For each point calculate total time of this point being in the shade, while the light source is moving from $$$(a, s_y)$$$ to the $$$(b, s_y)$$$.\n\nFirst line contains three space separated integers $$$s_y$$$, $$$a$$$ and $$$b$$$ ($$$-10^9 \\le s_y < 0$$$, $$$1 \\le a < b \\le 10^9$$$) \u2014 corresponding coordinates of the light source.\n\nSecond line contains single integer $$$n$$$ ($$$1 \\le n \\le 2 \\cdot 10^5$$$) \u2014 number of segments in the fence.\n\nNext $$$n$$$ lines contain two integers per line: $$$l_i$$$ and $$$r_i$$$ ($$$1 \\le l_i < r_i \\le 10^9$$$, $$$r_{i - 1} < l_i$$$) \u2014 segments in the fence in increasing order. Segments don't intersect or touch each other.\n\nNext line contains single integer $$$q$$$ ($$$1 \\le q \\le 2 \\cdot 10^5$$$) \u2014 number of points to check.\n\nNext $$$q$$$ lines contain two integers per line: $$$x_i$$$ and $$$y_i$$$ ($$$1 \\le x_i, y_i \\le 10^9$$$) \u2014 points to process.\n\nPrint $$$q$$$ lines. The $$$i$$$-th line should contain one real number \u2014 total time of the $$$i$$$-th point being in the shade, while the light source is moving from $$$(a, s_y)$$$ to the $$$(b, s_y)$$$. The answer is considered as correct if its absolute of relative error doesn't exceed $$$10^{-6}$$$."}, {"role": "assistant", "content": "binarysearch, geometry"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "There are $$$n$$$ cities in the country of Berland. Some of them are connected by bidirectional roads in such a way that there exists exactly one path, which visits each road no more than once, between every pair of cities. Each road has its own length. Cities are numbered from $$$1$$$ to $$$n$$$.\n\nThe travelling time between some cities $$$v$$$ and $$$u$$$ is the total length of the roads on the shortest path from $$$v$$$ to $$$u$$$. \n\nThe two most important cities in Berland are cities $$$1$$$ and $$$n$$$.\n\nThe Berland Ministry of Transport decided to build a single new road to decrease the traffic between the most important cities. However, lots of people are used to the current travelling time between the most important cities, so the new road shouldn't change it too much. \n\nThe new road can only be built between such cities $$$v$$$ and $$$u$$$ that $$$v \\neq u$$$ and $$$v$$$ and $$$u$$$ aren't already connected by some road.\n\nThey came up with $$$m$$$ possible projects. Each project is just the length $$$x$$$ of the new road.\n\nPolycarp works as a head analyst at the Berland Ministry of Transport and it's his job to deal with all those $$$m$$$ projects. For the $$$i$$$-th project he is required to choose some cities $$$v$$$ and $$$u$$$ to build the new road of length $$$x_i$$$ between such that the travelling time between the most important cities is maximal possible. \n\nUnfortunately, Polycarp is not a programmer and no analyst in the world is capable to process all projects using only pen and paper. \n\nThus, he asks you to help him to calculate the maximal possible travelling time between the most important cities for each project. Note that the choice of $$$v$$$ and $$$u$$$ can differ for different projects.\n\nThe first line contains two integers $$$n$$$ and $$$m$$$ ($$$3 \\le n \\le 3 \\cdot 10^5$$$, $$$1 \\le m \\le 3 \\cdot 10^5$$$) \u2014 the number of cities and the number of projects, respectively.\n\nEach of the next $$$n - 1$$$ lines contains three integers $$$v_i$$$, $$$u_i$$$ and $$$w_i$$$ ($$$1 \\le v_i, u_i \\le n$$$, $$$1 \\le w_i \\le 10^9$$$) \u2014 the description of the $$$i$$$-th road. It is guaranteed that there exists exactly one path, which visits each road no more than once, between every pair of cities.\n\nEach of the next $$$m$$$ lines contains a single integer $$$x_j$$$ ($$$1 \\le x_j \\le 10^9$$$) \u2014 the length of the road for the $$$j$$$-th project.\n\nPrint $$$m$$$ lines, the $$$j$$$-th line should contain a single integer \u2014 the maximal possible travelling time between the most important cities for the $$$j$$$-th project.\n\nThe road network from the first example:\n\n\n\nYou can build the road with length $$$1$$$ between cities $$$5$$$ and $$$6$$$ to get $$$83$$$ as the travelling time between $$$1$$$ and $$$7$$$ ($$$1 \\rightarrow 2 \\rightarrow 6 \\rightarrow 5 \\rightarrow 3 \\rightarrow 4 \\rightarrow 7$$$ $$$=$$$ $$$18 + 4 + 1 + 12 + 24 + 24 = 83$$$). Other possible pairs of cities will give answers less or equal to $$$83$$$."}, {"role": "assistant", "content": "dfsandsimilar, dp, trees"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Since next season are coming, you'd like to form a team from two or three participants. There are $$$n$$$ candidates, the $$$i$$$-th candidate has rank $$$a_i$$$. But you have weird requirements for your teammates: if you have rank $$$v$$$ and have chosen the $$$i$$$-th and $$$j$$$-th candidate, then $$$GCD(v, a_i) = X$$$ and $$$LCM(v, a_j) = Y$$$ must be met.\n\nYou are very experienced, so you can change your rank to any non-negative integer but $$$X$$$ and $$$Y$$$ are tied with your birthdate, so they are fixed.\n\nNow you want to know, how many are there pairs $$$(i, j)$$$ such that there exists an integer $$$v$$$ meeting the following constraints: $$$GCD(v, a_i) = X$$$ and $$$LCM(v, a_j) = Y$$$. It's possible that $$$i = j$$$ and you form a team of two.\n\n$$$GCD$$$ is the greatest common divisor of two number, $$$LCM$$$ \u2014 the least common multiple.\n\nFirst line contains three integers $$$n$$$, $$$X$$$ and $$$Y$$$ ($$$1 \\le n \\le 2 \\cdot 10^5$$$, $$$1 \\le X \\le Y \\le 10^{18}$$$) \u2014 the number of candidates and corresponding constants.\n\nSecond line contains $$$n$$$ space separated integers $$$a_1, a_2, \\dots, a_n$$$ ($$$1 \\le a_i \\le 10^{18}$$$) \u2014 ranks of candidates.\n\nPrint the only integer \u2014 the number of pairs $$$(i, j)$$$ such that there exists an integer $$$v$$$ meeting the following constraints: $$$GCD(v, a_i) = X$$$ and $$$LCM(v, a_j) = Y$$$. It's possible that $$$i = j$$$.\n\nIn the first example next pairs are valid: $$$a_j = 1$$$ and $$$a_i = [2, 4, 6, 8, 10, 12]$$$ or $$$a_j = 2$$$ and $$$a_i = [2, 4, 6, 8, 10, 12]$$$. The $$$v$$$ in both cases can be equal to $$$2$$$.\n\nIn the second example next pairs are valid: "}, {"role": "assistant", "content": "bitmasks, math, numbertheory"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The input contains two integers a1,\u2009a2 (0\u2009\u2264\u2009ai\u2009\u2264\u2009109), separated by a single space.\n\nOutput a single integer."}, {"role": "assistant", "content": "*specialproblem, constructivealgorithms"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The input contains a single integer a (1\u2009\u2264\u2009a\u2009\u2264\u200918257).\n\nPrint a single integer output (1\u2009\u2264\u2009output\u2009\u2264\u20092\u00b7109)."}, {"role": "assistant", "content": "*specialproblem, combinatorics"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "How to make a cake you'll never eat.\n\nIngredients. \n\nMethod. \n\nServes 1.\n\nThe only line of input contains a sequence of integers a0,\u2009a1,\u2009... (1\u2009\u2264\u2009a0\u2009\u2264\u2009100, 0\u2009\u2264\u2009ai\u2009\u2264\u20091000 for i\u2009\u2265\u20091).\n\nOutput a single integer."}, {"role": "assistant", "content": "*specialproblem, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "\"This problem is rubbish! There is not statement, and there are only 5 test cases. The problemsetter took liberties with this problem!\" \u2014 people complained in the comments to one round on Codeforces. And even more... No, wait, the checker for the problem was alright, that's a mercy.\n\nThe only line of the input contains an integer between 1 and 5, inclusive. All tests for this problem are different. The contents of the test case doesn't need to be equal to its index.\n\nThe only line of the output contains an integer between 1 and 3, inclusive.\n\nThis problem has no samples, since there so few test cases."}, {"role": "assistant", "content": "*specialproblem, bruteforce"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given a mysterious language (codenamed \"Secret\") available in \"Custom Test\" tab. Find out what this language is and write a program which outputs its name. Note that the program must be written in this language.\n\nThis program has only one test, and it's empty (it doesn't give your program anything to read).\n\nOutput the name of the mysterious language."}, {"role": "assistant", "content": "*specialproblem"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "qd ucyhf yi q fhycu dkcruh mxeiu huluhiu yi q tyvvuhudj fhycu dkcruh. oekh jqia yi je vydt jxu djx ucyhf.\n\njxu ydfkj sediyiji ev q iydwbu ydjuwuh d (1\u2009\u2264\u2009d\u2009\u2264\u200911184) \u2014 jxu edu-rqiut ydtun ev jxu ucyhf je vydt.\n\nekjfkj q iydwbu dkcruh."}, {"role": "assistant", "content": "*specialproblem, bruteforce, implementation, numbertheory"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The only line of input contains three integers a1,\u2009a2,\u2009a3 (1\u2009\u2264\u2009a1,\u2009a2,\u2009a3\u2009\u2264\u200920), separated by spaces.\n\nOutput a single integer."}, {"role": "assistant", "content": "*specialproblem"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The input contains two integers a,\u2009b (1\u2009\u2264\u2009a\u2009\u2264\u200910,\u20090\u2009\u2264\u2009b\u2009\u2264\u200922\u00b7a\u2009-\u20091) separated by a single space.\n\nOutput two integers separated by a single space."}, {"role": "assistant", "content": "*specialproblem, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Polycarpus has n friends in Tarasov city. Polycarpus knows phone numbers of all his friends: they are strings s1,\u2009s2,\u2009...,\u2009sn. All these strings consist only of digits and have the same length. \n\nOnce Polycarpus needed to figure out Tarasov city phone code. He assumed that the phone code of the city is the longest common prefix of all phone numbers of his friends. In other words, it is the longest string c which is a prefix (the beginning) of each si for all i (1\u2009\u2264\u2009i\u2009\u2264\u2009n). Help Polycarpus determine the length of the city phone code. \n\nThe first line of the input contains an integer n (2\u2009\u2264\u2009n\u2009\u2264\u20093\u00b7104) \u2014 the number of Polycarpus's friends. The following n lines contain strings s1,\u2009s2,\u2009...,\u2009sn \u2014 the phone numbers of Polycarpus's friends. It is guaranteed that all strings consist only of digits and have the same length from 1 to 20, inclusive. It is also guaranteed that all strings are different.\n\nPrint the number of digits in the city phone code.\n\nA prefix of string t is a string that is obtained by deleting zero or more digits from the end of string t. For example, string \"00209\" has 6 prefixes: \"\" (an empty prefix), \"0\", \"00\", \"002\", \"0020\", \"00209\".\n\nIn the first sample the city phone code is string \"00\".\n\nIn the second sample the city phone code is an empty string.\n\nIn the third sample the city phone code is string \"770123456789\"."}, {"role": "assistant", "content": "*specialproblem, bruteforce, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Polycarpus has recently got interested in sequences of pseudorandom numbers. He learned that many programming languages generate such sequences in a similar way:  (for i\u2009\u2265\u20091). Here a, b, m are constants, fixed for the given realization of the pseudorandom numbers generator, r0 is the so-called randseed (this value can be set from the program using functions like RandSeed(r) or srand(n)), and  denotes the operation of taking the remainder of division.\n\nFor example, if a\u2009=\u20092,\u2009b\u2009=\u20096,\u2009m\u2009=\u200912,\u2009r0\u2009=\u200911, the generated sequence will be: 4,\u20092,\u200910,\u20092,\u200910,\u20092,\u200910,\u20092,\u200910,\u20092,\u200910,\u2009....\n\nPolycarpus realized that any such sequence will sooner or later form a cycle, but the cycle may occur not in the beginning, so there exist a preperiod and a period. The example above shows a preperiod equal to 1 and a period equal to 2.\n\nYour task is to find the period of a sequence defined by the given values of a,\u2009b,\u2009m and r0. Formally, you have to find such minimum positive integer t, for which exists such positive integer k, that for any i\u2009\u2265\u2009k: ri\u2009=\u2009ri\u2009+\u2009t.\n\nThe single line of the input contains four integers a, b, m and r0 (1\u2009\u2264\u2009m\u2009\u2264\u2009105,\u20090\u2009\u2264\u2009a,\u2009b\u2009\u2264\u20091000,\u20090\u2009\u2264\u2009r0\u2009<\u2009m), separated by single spaces.\n\nPrint a single integer \u2014 the period of the sequence.\n\nThe first sample is described above. \n\nIn the second sample the sequence is (starting from the first element): 0,\u20093,\u20094,\u20091,\u20090,\u20093,\u20094,\u20091,\u20090,\u2009...\n\nIn the third sample the sequence is (starting from the first element): 33,\u200924,\u200978,\u200978,\u200978,\u200978,\u2009..."}, {"role": "assistant", "content": "*specialproblem, implementation, numbertheory"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "There is a bus stop near the university. The lessons are over, and n students come to the stop. The i-th student will appear at the bus stop at time ti (all ti's are distinct).\n\nWe shall assume that the stop is located on the coordinate axis Ox, at point x\u2009=\u20090, and the bus goes along the ray Ox, that is, towards the positive direction of the coordinate axis, and back. The i-th student needs to get to the point with coordinate xi (xi\u2009>\u20090).\n\nThe bus moves by the following algorithm. Initially it is at point 0. The students consistently come to the stop and get on it. The bus has a seating capacity which is equal to m passengers. At the moment when m students get on the bus, it starts moving in the positive direction of the coordinate axis. Also it starts moving when the last (n-th) student gets on the bus. The bus is moving at a speed of 1 unit of distance per 1 unit of time, i.e. it covers distance y in time y.\n\nEvery time the bus passes the point at which at least one student needs to get off, it stops and these students get off the bus. The students need 1\u2009+\u2009[k\u2009/\u20092] units of time to get off the bus, where k is the number of students who leave at this point. Expression [k\u2009/\u20092] denotes rounded down k\u2009/\u20092. As soon as the last student leaves the bus, the bus turns around and goes back to the point x\u2009=\u20090. It doesn't make any stops until it reaches the point. At the given point the bus fills with students once more, and everything is repeated.\n\nIf students come to the stop when there's no bus, they form a line (queue) and get on the bus in the order in which they came. Any number of students get on the bus in negligible time, you should assume that it doesn't take any time. Any other actions also take no time. The bus has no other passengers apart from the students.\n\nWrite a program that will determine for each student the time when he got off the bus. The moment a student got off the bus is the moment the bus stopped at the student's destination stop (despite the fact that the group of students need some time to get off).\n\nThe first line contains two space-separated integers n,\u2009m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009105) \u2014 the number of students and the number of passengers the bus can transport, correspondingly. Next n lines contain descriptions of the students, one per line. Each line contains a pair of integers ti,\u2009xi (1\u2009\u2264\u2009ti\u2009\u2264\u2009105,\u20091\u2009\u2264\u2009xi\u2009\u2264\u2009104). The lines are given in the order of strict increasing of ti. Values of xi can coincide.\n\nPrint n numbers w1,\u2009w2,\u2009...,\u2009wn, wi \u2014 the moment of time when the i-th student got off the bus. Print the numbers on one line and separate them with single spaces.\n\nIn the first sample the bus waits for the first student for 3 units of time and drives him to his destination in additional 5 units of time. So the student leaves the bus at the moment of time 3\u2009+\u20095\u2009=\u20098.\n\nIn the second sample the capacity of the bus equals 1, that's why it will drive the first student alone. This student is the same as the student from the first sample. So the bus arrives to his destination at the moment of time 8, spends 1\u2009+\u2009[1\u2009/\u20092]\u2009=\u20091 units of time on getting him off, and returns back to 0 in additional 5 units of time. That is, the bus returns to the bus stop at the moment of time 14. By this moment the second student has already came to the bus stop. So he immediately gets in the bus, and is driven to his destination in additional 5 units of time. He gets there at the moment 14\u2009+\u20095\u2009=\u200919. \n\nIn the third sample the bus waits for the fourth student for 6 units of time, then drives for 5 units of time, then gets the passengers off for 1\u2009+\u2009[4\u2009/\u20092]\u2009=\u20093 units of time, then returns for 5 units of time, and then drives the fifth student for 1 unit of time."}, {"role": "assistant", "content": "*specialproblem, implementation, sortings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Reforms have started in Berland again! At this time, the Parliament is discussing the reform of the calendar. To make the lives of citizens of Berland more varied, it was decided to change the calendar. As more and more people are complaining that \"the years fly by...\", it was decided that starting from the next year the number of days per year will begin to grow. So the coming year will have exactly a days, the next after coming year will have a\u2009+\u20091 days, the next one will have a\u2009+\u20092 days and so on. This schedule is planned for the coming n years (in the n-th year the length of the year will be equal a\u2009+\u2009n\u2009-\u20091 day).\n\nNo one has yet decided what will become of months. An MP Palevny made the following proposal. \n\nThese rules provide an unambiguous method for choosing the number of days in each month for any given year length. For example, according to Palevny's proposition, a year that consists of 108 days will have three months, 36 days each. The year that consists of 99 days will have 11 months, 9 days each, and a year of 365 days will have 365 months, one day each.\n\nThe proposal provoked heated discussion in the community, the famous mathematician Perelmanov quickly calculated that if the proposal is supported, then in a period of n years, beginning with the year that has a days, the country will spend p sheets of paper to print a set of calendars for these years. Perelmanov's calculations take into account the fact that the set will contain one calendar for each year and each month will be printed on a separate sheet.\n\nRepeat Perelmanov's achievement and print the required number p. You are given positive integers a and n. Perelmanov warns you that your program should not work longer than four seconds at the maximum test.\n\nThe only input line contains a pair of integers a, n (1\u2009\u2264\u2009a,\u2009n\u2009\u2264\u2009107; a\u2009+\u2009n\u2009-\u20091\u2009\u2264\u2009107).\n\nPrint the required number p. \n\nPlease, do not use the %lld specifier to read or write 64-bit integers in C++. It is preferred to use cin, cout streams or the %I64d specifier.\n\nA note to the first sample test. A year of 25 days will consist of one month containing 25 days. A year of 26 days will consist of 26 months, one day each. A year of 27 days will have three months, 9 days each."}, {"role": "assistant", "content": "*specialproblem, numbertheory"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "This problem is about imaginary languages BHTML and BCSS, which slightly resemble HTML and CSS. Read the problem statement carefully as the resemblance is rather slight and the problem uses very simplified analogs.\n\nYou are given a BHTML document that resembles HTML but is much simpler. It is recorded as a sequence of opening and closing tags. A tag that looks like \"<tagname>\" is called an opening tag and a tag that looks like \"</tagname>\" is called a closing tag. Besides, there are self-closing tags that are written as \"<tagname/>\" and in this problem they are fully equivalent to \"<tagname></tagname>\". All tagnames in this problem are strings consisting of lowercase Latin letters with length from 1 to 10 characters. Tagnames of different tags may coincide.\n\nThe document tags form a correct bracket sequence, that is, we can obtain an empty sequence from the given one using the following operations: \n\nFor example, you may be given such document: \"<header><p><a/><b></b></p></header><footer></footer>\" but you may not be given documents \"<a>\", \"<a></b>\", \"</a><a>\" or \"<a><b></a></b>\".\n\nObviously, for any opening tag there is the only matching closing one \u2014 each such pair is called an element. A self-closing tag also is an element. Let's consider that one element is nested inside another one, if tags of the first element are between tags of the second one. An element is not nested to itself. For instance, in the example above element \"b\" is nested in \"header\" and in \"p\", but it isn't nested in \"a\" and \"footer\", also it isn't nested to itself (\"b\"). Element \"header\" has three elements nested in it, and \"footer\" has zero.\n\nWe need the BCSS rules to apply styles when displaying elements of the BHTML documents. Each rule is recorded as a subsequence of words \"x1 x2 ... xn\". This rule has effect over all such elements t, which satisfy both conditions from the list:\n\nFor example, element \"b\" meets the conditions of the rule \"a b\" if for element \"b\" exists element \"a\" in which it is nested. Element \"c\" meets the conditions of the rule \"a b b c\", if three elements exist: \"a\", \"b\", \"b\", and in the chain \"a\"-\"b\"-\"b\"-\"c\" each following element is nested in the previous one.\n\nGiven a BHTML document and a set of BCSS rules, write a program that determines the number of elements that meet the conditions of each rule.\n\nThe first line of the input contains a BHTML-document. The document has length from 4 to 106 characters. The document has a correct structure, doesn't contain spaces or any other unnecessary characters. Tagnames consist of lowercase Latin letters, their lengths are from 1 to 10 characters.\n\nThe second line contains an integer m (1\u2009\u2264\u2009m\u2009\u2264\u2009200) \u2014 the number of queries. Then m lines contain the queries, one per line. Each query is a sequence x1,\u2009x2,\u2009...,\u2009xn, where xi is the i-th element of the query, and n (1\u2009\u2264\u2009n\u2009\u2264\u2009200) is the number of elements in the query. The elements are separated by single spaces. Each query doesn't begin with and doesn't end with a space. Each query element is a sequence of lowercase Latin letters with length from 1 to 10.\n\nPrint m lines, the j-th line should contain the number of elements of the document that correspond to the j-th BCSS-rule. If there are no such elements at all, print on the line 0."}, {"role": "assistant", "content": "*specialproblem, dfsandsimilar, expressionparsing"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Nikephoros and Polycarpus play rock-paper-scissors. The loser gets pinched (not too severely!).\n\nLet us remind you the rules of this game. Rock-paper-scissors is played by two players. In each round the players choose one of three items independently from each other. They show the items with their hands: a rock, scissors or paper. The winner is determined by the following rules: the rock beats the scissors, the scissors beat the paper and the paper beats the rock. If the players choose the same item, the round finishes with a draw.\n\nNikephoros and Polycarpus have played n rounds. In each round the winner gave the loser a friendly pinch and the loser ended up with a fresh and new red spot on his body. If the round finished in a draw, the players did nothing and just played on.\n\nNikephoros turned out to have worked out the following strategy: before the game began, he chose some sequence of items A\u2009=\u2009(a1,\u2009a2,\u2009...,\u2009am), and then he cyclically showed the items from this sequence, starting from the first one. Cyclically means that Nikephoros shows signs in the following order: a1, a2, ..., am, a1, a2, ..., am, a1, ... and so on. Polycarpus had a similar strategy, only he had his own sequence of items B\u2009=\u2009(b1,\u2009b2,\u2009...,\u2009bk).\n\nDetermine the number of red spots on both players after they've played n rounds of the game. You can consider that when the game began, the boys had no red spots on them.\n\nThe first line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u20092\u00b7109) \u2014 the number of the game's rounds.\n\nThe second line contains sequence A as a string of m characters and the third line contains sequence B as a string of k characters (1\u2009\u2264\u2009m,\u2009k\u2009\u2264\u20091000). The given lines only contain characters \"R\", \"S\" and \"P\". Character \"R\" stands for the rock, character \"S\" represents the scissors and \"P\" represents the paper.\n\nPrint two space-separated integers: the numbers of red spots Nikephoros and Polycarpus have.\n\nIn the first sample the game went like this:\n\nThus, in total Nikephoros has 3 losses (and 3 red spots), and Polycarpus only has 2."}, {"role": "assistant", "content": "implementation, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "\"The Chamber of Secrets has been opened again\" \u2014 this news has spread all around Hogwarts and some of the students have been petrified due to seeing the basilisk. Dumbledore got fired and now Harry is trying to enter the Chamber of Secrets. These aren't good news for Lord Voldemort. The problem is, he doesn't want anybody to be able to enter the chamber. The Dark Lord is going to be busy sucking life out of Ginny.\n\nThe Chamber of Secrets is an n\u2009\u00d7\u2009m rectangular grid in which some of the cells are columns. A light ray (and a basilisk's gaze) passes through the columns without changing its direction. But with some spell we can make a column magic to reflect the light ray (or the gaze) in all four directions when it receives the ray. This is shown in the figure below.\n\nThe basilisk is located at the right side of the lower right cell of the grid and is looking to the left (in the direction of the lower left cell). According to the legend, anyone who meets a basilisk's gaze directly dies immediately. But if someone meets a basilisk's gaze through a column, this person will get petrified. We know that the door to the Chamber is located on the left side of the upper left corner of the grid and anyone who wants to enter will look in the direction of its movement (in the direction of the upper right cell) from that position.\n\nGiven the dimensions of the chamber and the location of regular columns, Lord Voldemort has asked you to find the minimum number of columns that we need to make magic so that anyone who wants to enter the chamber would be petrified or just declare that it's impossible to secure the chamber.\n\nThe first line of the input contains two integer numbers n and m (2\u2009\u2264\u2009n,\u2009m\u2009\u2264\u20091000). Each of the next n lines contains m characters. Each character is either \".\" or \"#\" and represents one cell of the Chamber grid. It's \".\" if the corresponding cell is empty and \"#\" if it's a regular column.\n\nPrint the minimum number of columns to make magic or -1 if it's impossible to do.\n\nThe figure above shows the first sample test. In the first sample we should make both columns magic. The dragon figure represents the basilisk and the binoculars represent the person who will enter the Chamber of secrets. The black star shows the place where the person will be petrified. Yellow lines represent basilisk gaze moving through columns."}, {"role": "assistant", "content": "dfsandsimilar, shortestpaths"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Let's consider a k\u2009\u00d7\u2009k square, divided into unit squares. Please note that k\u2009\u2265\u20093 and is odd. We'll paint squares starting from the upper left square in the following order: first we move to the right, then down, then to the left, then up, then to the right again and so on. We finish moving in some direction in one of two cases: either we've reached the square's border or the square following after the next square is already painted. We finish painting at the moment when we cannot move in any direction and paint a square. The figure that consists of the painted squares is a spiral.\n\nYou have an n\u2009\u00d7\u2009m table, each of its cells contains a number. Let's consider all possible spirals, formed by the table cells. It means that we consider all spirals of any size that don't go beyond the borders of the table. Let's find the sum of the numbers of the cells that form the spiral. You have to find the maximum of those values among all spirals.\n\nThe first line contains two integers n and m (3\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009500) \u2014 the sizes of the table.\n\nEach of the next n lines contains m space-separated integers: the j-th number in the i-th line aij (\u2009-\u20091000\u2009\u2264\u2009aij\u2009\u2264\u20091000) is the number recorded in the j-th cell of the i-th row of the table.\n\nPrint a single number \u2014 the maximum sum of numbers among all spirals.\n\nIn the first sample the spiral with maximum sum will cover all 1's of the table.\n\nIn the second sample the spiral may cover only six 1's."}, {"role": "assistant", "content": "bruteforce, dp"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The Trinitarian kingdom has exactly n\u2009=\u20093k cities. All of them are located on the shores of river Trissisipi, which flows through the whole kingdom. Some of the cities are located on one side of the river, and all the rest are on the other side.\n\nSome cities are connected by bridges built between them. Each bridge connects two cities that are located on the opposite sides of the river. Between any two cities exists no more than one bridge.\n\nThe recently inaugurated King Tristan the Third is busy distributing his deputies among cities. In total there are k deputies and the king wants to commission each of them to control exactly three cities. However, no deputy can be entrusted to manage the cities, which are connected by a bridge \u2014 the deputy can set a too high fee for travelling over the bridge to benefit his pocket, which is bad for the reputation of the king.\n\nHelp King Tristan the Third distribute the deputies between the cities, if it is possible.\n\nThe first line contains two integers n and m \u2014 the number of cities and bridges (3\u2009\u2264\u2009n\u2009<\u2009105, n\u2009=\u20093k, 0\u2009\u2264\u2009m\u2009\u2264\u2009105). Next m lines describe the bridges. The i-th line contains two integers ai and bi \u2014 the numbers of cities that are connected by the i-th bridge (1\u2009\u2264\u2009ai,\u2009bi\u2009\u2264\u2009n, ai\u2009\u2260\u2009bi, 1\u2009\u2264\u2009i\u2009\u2264\u2009m).\n\nIt is guaranteed that no bridge connects a city with itself and that any two cities are connected with no more than one bridge.\n\nIf distributing the deputies in the required manner is impossible, print in a single line \"NO\" (without the quotes).\n\nOtherwise, in the first line print \"YES\" (without the quotes), and in the second line print which deputy should be put in charge of each city. The i-th number should represent the number of the deputy (from 1 to k), who should be in charge of city numbered i-th in the input \u2014 overall there should be n numbers.\n\nIf there are multiple solutions, print any of them."}, {"role": "assistant", "content": "constructivealgorithms, graphs, greedy, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "A club wants to take its members camping. In order to organize the event better the club directors decided to partition the members into several groups. \n\nClub member i has a responsibility value ri and an age value ai. A group is a non-empty subset of club members with one member known as group leader. A group leader should be one of the most responsible members of the group (his responsibility value is not less than responsibility of any other group member) and his age absolute difference with any other group member should not exceed k. \n\nSome club members are friends and want to be in the same group. They also like their group to be as large as possible. Now you should write a program that answers a series of questions like \"What's the largest size of a group containing club member x and club member y?\". It's possible for x or y to be the group leader.\n\nThe first line contains two integers n and k (2\u2009\u2264\u2009n\u2009\u2264\u2009105,\u20090\u2009\u2264\u2009k\u2009\u2264\u2009109) \u2014 the number of club members and the age restriction for one group. \n\nThe next line contains integer numbers r1,\u2009r2,\u2009...,\u2009rn (1\u2009\u2264\u2009ri\u2009\u2264\u2009109) separated by space: ri denotes the i-th club member's responsibility. In the same way there are integers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009109) in the third line: ai denotes the i-th club member's age.\n\nThe next line contains an integer q denoting the number of questions that you should answer (1\u2009\u2264\u2009q\u2009\u2264\u2009105). The next q lines describe the questions. Each line contains two space-separated integers xi and yi (1\u2009\u2264\u2009xi,\u2009yi\u2009\u2264\u2009n,\u2009xi\u2009\u2260\u2009yi) \u2014 the indices of the club members that should end up in the same group. \n\nFor each question print the maximum size of the group in a line. If making such a group is impossible print -1 instead.\n\nIn the first query the largest group with members 3 and 5 is {1,\u20093,\u20094,\u20095} where member 3 is the leader.\n\nIn the second query member 2 should be the leader so the group will be {1,\u20092,\u20093}.\n\nIn the third query the leader of the group should have age 3 so the only leader can be member 3, who is less responsible than member 2. So making a group is impossible.\n\nThe group for the fourth query is the same as first query."}, {"role": "assistant", "content": "datastructures, sortings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "A group of n merry programmers celebrate Robert Floyd's birthday. Polucarpus has got an honourable task of pouring Ber-Cola to everybody. Pouring the same amount of Ber-Cola to everybody is really important. In other words, the drink's volume in each of the n mugs must be the same.\n\nPolycarpus has already began the process and he partially emptied the Ber-Cola bottle. Now the first mug has a1 milliliters of the drink, the second one has a2 milliliters and so on. The bottle has b milliliters left and Polycarpus plans to pour them into the mugs so that the main equation was fulfilled.\n\nWrite a program that would determine what volume of the drink Polycarpus needs to add into each mug to ensure that the following two conditions were fulfilled simultaneously: \n\nThe first line contains a pair of integers n, b (2\u2009\u2264\u2009n\u2009\u2264\u2009100,\u20091\u2009\u2264\u2009b\u2009\u2264\u2009100), where n is the total number of friends in the group and b is the current volume of drink in the bottle. The second line contains a sequence of integers a1,\u2009a2,\u2009...,\u2009an (0\u2009\u2264\u2009ai\u2009\u2264\u2009100), where ai is the current volume of drink in the i-th mug.\n\nPrint a single number \"-1\" (without the quotes), if there is no solution. Otherwise, print n float numbers c1,\u2009c2,\u2009...,\u2009cn, where ci is the volume of the drink to add in the i-th mug. Print the numbers with no less than 6 digits after the decimal point, print each ci on a single line. Polycarpus proved that if a solution exists then it is unique.\n\nRussian locale is installed by default on the testing computer. Make sure that your solution use the point to separate the integer part of a real number from the decimal, not a comma."}, {"role": "assistant", "content": "math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Eudokimus, a system administrator is in trouble again. As a result of an error in some script, a list of names of very important files has been damaged. Since they were files in the BerFS file system, it is known that each file name has a form \"name.ext\", where: \n\nFor example, \"read.me\", \"example.txt\" and \"b.cpp\" are valid file names and \"version.info\", \"ntldr\" and \"contestdata.zip\" are not.\n\nDamage to the list meant that all the file names were recorded one after another, without any separators. So now Eudokimus has a single string.\n\nEudokimus needs to set everything right as soon as possible. He should divide the resulting string into parts so that each part would be a valid file name in BerFS. Since Eudokimus has already proved that he is not good at programming, help him. The resulting file list can contain the same file names.\n\nThe input data consists of a single string s, its length is from 1 to 4\u00b7105 characters. The string can contain only lowercase Latin letters ('a' - 'z') and periods ('.').\n\nIn the first line print \"YES\" (without the quotes), if it is possible to divide s into parts as required. In this case, the following lines should contain the parts of the required partition, one per line in the order in which they appear in s. The required partition can contain the same file names. If there are multiple solutions, print any of them.\n\nIf the solution does not exist, then print in a single line \"NO\" (without the quotes)."}, {"role": "assistant", "content": "dp, greedy, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Polycarpus is an amateur programmer. Now he is analyzing a friend's program. He has already found there the function rangeIncrement(l, r), that adds 1 to each element of some array a for all indexes in the segment [l,\u2009r]. In other words, this function does the following: \n\nPolycarpus knows the state of the array a after a series of function calls. He wants to determine the minimum number of function calls that lead to such state. In addition, he wants to find what function calls are needed in this case. It is guaranteed that the required number of calls does not exceed 105.\n\nBefore calls of function rangeIncrement(l, r) all array elements equal zero.\n\nThe first input line contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105) \u2014 the length of the array a[1... n]. \n\nThe second line contains its integer space-separated elements, a[1],\u2009a[2],\u2009...,\u2009a[n] (0\u2009\u2264\u2009a[i]\u2009\u2264\u2009105) after some series of function calls rangeIncrement(l, r). \n\nIt is guaranteed that at least one element of the array is positive. It is guaranteed that the answer contains no more than 105 calls of function rangeIncrement(l, r).\n\nPrint on the first line t \u2014 the minimum number of calls of function rangeIncrement(l, r), that lead to the array from the input data. It is guaranteed that this number will turn out not more than 105.\n\nThen print t lines \u2014 the descriptions of function calls, one per line. Each line should contain two integers li,\u2009ri (1\u2009\u2264\u2009li\u2009\u2264\u2009ri\u2009\u2264\u2009n) \u2014 the arguments of the i-th call rangeIncrement(l, r). Calls can be applied in any order.\n\nIf there are multiple solutions, you are allowed to print any of them.\n\nThe first sample requires a call for the entire array, and four additional calls:"}, {"role": "assistant", "content": "datastructures, greedy"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Life is not easy for the perfectly common variable named Vasya. Wherever it goes, it is either assigned a value, or simply ignored, or is being used!\n\nVasya's life goes in states of a program. In each state, Vasya can either be used (for example, to calculate the value of another variable), or be assigned a value, or ignored. Between some states are directed (oriented) transitions.\n\nA path is a sequence of states v1,\u2009v2,\u2009...,\u2009vx, where for any 1\u2009\u2264\u2009i\u2009<\u2009x exists a transition from vi to vi\u2009+\u20091.\n\nVasya's value in state v is interesting to the world, if exists path p1,\u2009p2,\u2009...,\u2009pk such, that pi\u2009=\u2009v for some i (1\u2009\u2264\u2009i\u2009\u2264\u2009k), in state p1 Vasya gets assigned a value, in state pk Vasya is used and there is no state pi (except for p1) where Vasya gets assigned a value.\n\nHelp Vasya, find the states in which Vasya's value is interesting to the world.\n\nThe first line contains two space-separated integers n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009105) \u2014 the numbers of states and transitions, correspondingly.\n\nThe second line contains space-separated n integers f1,\u2009f2,\u2009...,\u2009fn (0\u2009\u2264\u2009fi\u2009\u2264\u20092), fi described actions performed upon Vasya in state i: 0 represents ignoring, 1 \u2014 assigning a value, 2 \u2014 using.\n\nNext m lines contain space-separated pairs of integers ai,\u2009bi (1\u2009\u2264\u2009ai,\u2009bi\u2009\u2264\u2009n, ai\u2009\u2260\u2009bi), each pair represents the transition from the state number ai to the state number bi. Between two states can be any number of transitions.\n\nPrint n integers r1,\u2009r2,\u2009...,\u2009rn, separated by spaces or new lines. Number ri should equal 1, if Vasya's value in state i is interesting to the world and otherwise, it should equal 0. The states are numbered from 1 to n in the order, in which they are described in the input.\n\nIn the first sample the program states can be used to make the only path in which the value of Vasya interests the world, 1  2  3  4; it includes all the states, so in all of them Vasya's value is interesting to the world.\n\nThe second sample the only path in which Vasya's value is interesting to the world is , \u2014 1  3; state 2 is not included there.\n\nIn the third sample we cannot make from the states any path in which the value of Vasya would be interesting to the world, so the value of Vasya is never interesting to the world."}, {"role": "assistant", "content": "graphs"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Polycarpus enjoys studying Berland hieroglyphs. Once Polycarp got hold of two ancient Berland pictures, on each of which was drawn a circle of hieroglyphs. We know that no hieroglyph occurs twice in either the first or the second circle (but in can occur once in each of them).\n\nPolycarpus wants to save these pictures on his laptop, but the problem is, laptops do not allow to write hieroglyphs circles. So Polycarp had to break each circle and write down all of its hieroglyphs in a clockwise order in one line. A line obtained from the first circle will be called a, and the line obtained from the second one will be called b.\n\nThere are quite many ways to break hieroglyphic circles, so Polycarpus chooses the method, that makes the length of the largest substring of string a, which occurs as a subsequence in string b, maximum.\n\nHelp Polycarpus \u2014 find the maximum possible length of the desired substring (subsequence) if the first and the second circles are broken optimally.\n\nThe length of string s is the number of characters in it. If we denote the length of string s as |s|, we can write the string as s\u2009=\u2009s1s2... s|s|.\n\nA substring of s is a non-empty string x\u2009=\u2009s[a... b]\u2009=\u2009sasa\u2009+\u20091... sb (1\u2009\u2264\u2009a\u2009\u2264\u2009b\u2009\u2264\u2009|s|). For example, \"code\" and \"force\" are substrings of \"codeforces\", while \"coders\" is not. \n\nA subsequence of s is a non-empty string y\u2009=\u2009s[p1p2... p|y|]\u2009=\u2009sp1sp2... sp|y| (1\u2009\u2264\u2009p1\u2009<\u2009p2\u2009<\u2009...\u2009<\u2009p|y|\u2009\u2264\u2009|s|). For example, \"coders\" is a subsequence of \"codeforces\".\n\nThe first line contains two integers la and lb (1\u2009\u2264\u2009la,\u2009lb\u2009\u2264\u20091000000) \u2014 the number of hieroglyphs in the first and second circles, respectively.\n\nBelow, due to difficulties with encoding of Berland hieroglyphs, they are given as integers from 1 to 106.\n\nThe second line contains la integers \u2014 the hieroglyphs in the first picture, in the clockwise order, starting with one of them.\n\nThe third line contains lb integers \u2014 the hieroglyphs in the second picture, in the clockwise order, starting with one of them.\n\nIt is guaranteed that the first circle doesn't contain a hieroglyph, which occurs twice. The second circle also has this property.\n\nPrint a single number \u2014 the maximum length of the common substring and subsequence. If at any way of breaking the circles it does not exist, print 0.\n\nIn the first test Polycarpus picks a string that consists of hieroglyphs 5 and 1, and in the second sample \u2014 from hieroglyphs 1, 3 and 5."}, {"role": "assistant", "content": "*2000"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Vasya plays Robot Bicorn Attack.\n\nThe game consists of three rounds. For each one a non-negative integer amount of points is given. The result of the game is the sum of obtained points. Vasya has already played three rounds and wrote obtained points one by one (without leading zeros) into the string s. Vasya decided to brag about his achievement to the friends. However, he has forgotten how many points he got for each round. The only thing he remembers is the string s.\n\nHelp Vasya to find out what is the maximum amount of points he could get. Take into account that Vasya played Robot Bicorn Attack for the first time, so he could not get more than 1000000 (106) points for one round.\n\nThe only line of input contains non-empty string s obtained by Vasya. The string consists of digits only. The string length does not exceed 30 characters.\n\nPrint the only number \u2014 the maximum amount of points Vasya could get. If Vasya is wrong and the string could not be obtained according to the rules then output number -1.\n\nIn the first example the string must be split into numbers 1, 2 and 34.\n\nIn the second example the string must be split into numbers 90, 0 and 0. \n\nIn the third example the string is incorrect, because after splitting the string into 3 numbers number 00 or 09 will be obtained, but numbers cannot have leading zeroes."}, {"role": "assistant", "content": "bruteforce, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Vasya has been playing Plane of Tanks with his friends the whole year. Now it is time to divide the participants into several categories depending on their results. \n\nA player is given a non-negative integer number of points in each round of the Plane of Tanks. Vasya wrote results for each round of the last year. He has n records in total.\n\nIn order to determine a player's category consider the best result obtained by the player and the best results of other players. The player belongs to category: \n\nWhen the percentage is calculated the player himself is taken into account. That means that if two players played the game and the first one gained 100 points and the second one 1000 points, then the first player's result is not worse than the result that 50% of players have, and the second one is not worse than the result that 100% of players have.\n\nVasya gave you the last year Plane of Tanks results. Help Vasya determine each player's category.\n\nThe first line contains the only integer number n (1\u2009\u2264\u2009n\u2009\u2264\u20091000) \u2014 a number of records with the players' results.\n\nEach of the next n lines contains a player's name and the amount of points, obtained by the player for the round, separated with a space. The name contains not less than 1 and no more than 10 characters. The name consists of lowercase Latin letters only. It is guaranteed that any two different players have different names. The amount of points, obtained by the player for the round, is a non-negative integer number and does not exceed 1000.\n\nPrint on the first line the number m \u2014 the number of players, who participated in one round at least.\n\nEach one of the next m lines should contain a player name and a category he belongs to, separated with space. Category can be one of the following: \"noob\", \"random\", \"average\", \"hardcore\" or \"pro\" (without quotes). The name of each player should be printed only once. Player names with respective categories can be printed in an arbitrary order.\n\nIn the first example the best result, obtained by artem is not worse than the result that 25% of players have (his own result), so he belongs to category \"noob\". vasya and kolya have best results not worse than the results that 75% players have (both of them and artem), so they belong to category \"random\". igor has best result not worse than the result that 100% of players have (all other players and himself), so he belongs to category \"pro\".\n\nIn the second example both players have the same amount of points, so they have results not worse than 100% players have, so they belong to category \"pro\"."}, {"role": "assistant", "content": "implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Vasya plays the Geometry Horse.\n\nThe game goal is to destroy geometric figures of the game world. A certain number of points is given for destroying each figure depending on the figure type and the current factor value. \n\nThere are n types of geometric figures. The number of figures of type ki and figure cost ci is known for each figure type. A player gets ci\u00b7f  points for destroying one figure of type i, where f is the current factor. The factor value can be an integer number from 1 to t\u2009+\u20091, inclusive. At the beginning of the game the factor value is equal to 1. The factor is set to i\u2009+\u20091 after destruction of pi (1\u2009\u2264\u2009i\u2009\u2264\u2009t) figures, so the (pi\u2009+\u20091)-th figure to be destroyed is considered with factor equal to i\u2009+\u20091.\n\nYour task is to determine the maximum number of points Vasya can get after he destroys all figures. Take into account that Vasya is so tough that he can destroy figures in any order chosen by him.\n\nThe first line contains the only integer number n (1\u2009\u2264\u2009n\u2009\u2264\u2009100) \u2014 the number of figure types.\n\nEach of the following n lines contains two integer numbers ki and ci (1\u2009\u2264\u2009ki\u2009\u2264\u2009109,\u20090\u2009\u2264\u2009ci\u2009\u2264\u20091000), separated with space \u2014 the number of figures of the i-th type and the cost of one i-type figure, correspondingly.\n\nThe next line contains the only integer number t (1\u2009\u2264\u2009t\u2009\u2264\u2009100) \u2014 the number that describe the factor's changes. \n\nThe next line contains t integer numbers pi (1\u2009\u2264\u2009p1\u2009<\u2009p2\u2009<\u2009...\u2009<\u2009pt\u2009\u2264\u20091012), separated with spaces.\n\nPlease, do not use the %lld specificator to read or write 64-bit integers in \u0421++. It is preferred to use cin, cout streams or the %I64d specificator.\n\nPrint the only number \u2014 the maximum number of points Vasya can get.\n\nIn the first example Vasya destroys three figures first and gets 3\u00b71\u00b710\u2009=\u200930 points. Then the factor will become equal to 2 and after destroying the last two figures Vasya will get 2\u00b72\u00b710\u2009=\u200940 points. As a result Vasya will get 70 points.\n\nIn the second example all 8 figures will be destroyed with factor 1, so Vasya will get (3\u00b78\u2009+\u20095\u00b710)\u00b71\u2009=\u200974 points."}, {"role": "assistant", "content": "greedy, implementation, sortings, twopointers"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Vasya plays the Plane of Tanks.\n\nTanks are described with the following attributes: \n\nThe gun damage is described with a segment [l,\u2009r], where l and r are integer numbers. The potential gun damage x is chosen with equal probability among all integer numbers of the segment [l,\u2009r]. If the shot pierces the armor of an enemy's tank then the enemy loses x hit points. If the number of hit points becomes non-positive then the enemy tank is considered destroyed. \n\nIt is possible that the shot does not pierce the armor of a tank. In this case the number of hit points doesn't change. The probability that the armor will not be pierced is considered as the shooting tank attribute and does not depend on players' behavior.\n\nThe victory is near and there is only one enemy tank left. Vasya is ready for the battle \u2014 one more battle between the Good and the Evil is inevitable! Two enemies saw each other and each of them fired a shot at the same moment... The last battle has begun! Help Vasya to determine what is the probability that he will win the battle by destroying the enemy tank? \n\nIf both tanks are destroyed (after simultaneous shots), then Vasya is considered a winner. You can assume that each player fires a shot just after the gun recharge and each tank has infinite number of ammo.\n\nThe first line contains five integer numbers separated with spaces describing Vasya's tank: the number of hit points hp (10\u2009\u2264\u2009hp\u2009\u2264\u2009200), the interval between two shots dt (1\u2009\u2264\u2009dt\u2009\u2264\u200930), gun damage segment l and r (10\u2009\u2264\u2009l\u2009\u2264\u2009r\u2009\u2264\u2009100), the probability that the enemy's tank armor will not be pierced p (0\u2009\u2264\u2009p\u2009\u2264\u2009100) (percents).\n\nThe second line describes the tank of Vasya's enemy in the same format.\n\nPrint the only number with absolute or relative error no more than 10\u2009-\u20094 \u2014 probability of Vasya's victory.\n\nIn the first example both tanks are destroyed at once after the second shot. The probability of destroying the enemy tank is 1.\n\nIn the second example Vasya's enemy tank fires the second shot before Vasya's tank, but has no time for the third shot. In order to destroy Vasya's tank it is necessary to fire two shots with damage 50. The probability of that event is  = . Otherwise, Vasya wins.\n\nIn the third example Vasya's enemy tank fires three shots with probability of armor piercing 0.5. In order to destroy Vasya's tank it is necessary that at least 2 of 3 shots pierce the armor of Vasya's tank. The probability of this event is 0.5."}, {"role": "assistant", "content": "bruteforce, dp, math, probabilities"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Vasya plays the Power Defence. \n\nHe must pass the last level of the game. In order to do this he must kill the Main Villain, who moves in a straight line at speed 1 meter per second from the point (\u2009-\u2009\u221e,\u20090) to the point (\u2009+\u2009\u221e,\u20090) of the game world. In the points (x,\u20091) and (x,\u2009\u2009-\u20091), where x is an integer number, Vasya can build towers of three types: fire-tower, electric-tower or freezing-tower. However, it is not allowed to build two towers at the same point. Towers of each type have a certain action radius and the value of damage per second (except freezing-tower). If at some point the Main Villain is in the range of action of k freezing towers then his speed is decreased by k\u2009+\u20091 times.\n\nThe allowed number of towers of each type is known. It is necessary to determine the maximum possible damage we can inflict on the Main Villain.\n\nAll distances in the problem are given in meters. The size of the Main Villain and the towers are so small, that they can be considered as points on the plane. The Main Villain is in the action radius of a tower if the distance between him and tower is less than or equal to the action radius of the tower.\n\nThe first line contains three integer numbers nf,\u2009ne and ns \u2014 the maximum number of fire-towers, electric-towers and freezing-towers that can be built (0\u2009\u2264\u2009nf,\u2009ne,\u2009ns\u2009\u2264\u200920,\u20091\u2009\u2264\u2009nf\u2009+\u2009ne\u2009+\u2009ns\u2009\u2264\u200920). The numbers are separated with single spaces.\n\nThe second line contains three integer numbers rf,\u2009re and rs (1\u2009\u2264\u2009rf,\u2009re,\u2009rs\u2009\u2264\u20091000) \u2014 the action radii of fire-towers, electric-towers and freezing-towers. The numbers are separated with single spaces.\n\nThe third line contains two integer numbers df and de (1\u2009\u2264\u2009df,\u2009de\u2009\u2264\u20091000) \u2014 the damage a fire-tower and an electronic-tower can inflict on the Main Villain per second (in the case when the Main Villain is in the action radius of the tower). The numbers are separated with single space.\n\nPrint the only real number \u2014 the maximum possible damage to the Main Villain with absolute or relative error not more than 10\u2009-\u20096.\n\nIn the first sample we've got one fire-tower that always inflicts the same damage, independently of its position. \n\nIn the second sample we've got another freezing-tower of the same action radius. If we build the two towers opposite each other, then the Main Villain's speed will be two times lower, whenever he enters the fire-tower's action radius. That means that the enemy will be inflicted with twice more damage."}, {"role": "assistant", "content": "bruteforce, dp, geometry, greedy"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Vasya plays a popular game the Gnomes of Might and Magic.\n\nIn this game Vasya manages the kingdom of gnomes, consisting of several castles, connected by bidirectional roads. The kingdom road network has a special form. The kingdom has m main castles a1,\u2009a2,\u2009...,\u2009am, which form the Good Path. This path consists of roads between the castles ai,\u2009ai\u2009+\u20091 (1\u2009\u2264\u2009i\u2009<\u2009m) as well as the road between am and a1. There are no other roads between the castles of the Good Path.\n\nIn addition, for each pair of neighboring Good Path castles u and v there is exactly one Evil Shortcut \u2014 a path that goes along the roads leading from the first castle (u) to the second one (v) and not having any common vertexes with the Good Path except for the vertexes u and v. It is known that there are no other roads and castles in the kingdom there, that is, every road and every castle lies either on the Good Path or the Evil Shortcut (castles can lie in both of them). In addition, no two Evil Shortcuts have any common castles, different than the castles of the Good Path.\n\nAt the beginning of each week in the kingdom appears one very bad gnome who stands on one of the roads of the kingdom, and begins to rob the corovans going through this road. One road may accumulate multiple very bad gnomes. Vasya cares about his corovans, so sometimes he sends the Mission of Death from one castle to another.\n\nLet's suggest that the Mission of Death should get from castle s to castle t. Then it will move from castle s to castle t, destroying all very bad gnomes, which are on the roads of the Mission's path. Vasya is so tough that his Mission of Death can destroy any number of gnomes on its way. However, Vasya is very kind, so he always chooses such path between castles s and t, following which he will destroy the smallest number of gnomes. If there are multiple such paths, then Vasya chooses the path that contains the smallest number of roads among them. If there are multiple such paths still, Vasya chooses the lexicographically minimal one among them.\n\nHelp Vasya to simulate the life of the kingdom in the Gnomes of Might and Magic game.\n\nA path is a sequence of castles, such that each pair of the neighboring castles on the path is connected by a road. Also, path x1,\u2009x2,\u2009... ,\u2009xp is lexicographically less than path y1,\u2009y2,\u2009... ,\u2009yq, if either p\u2009<\u2009q and x1\u2009=\u2009y1,\u2009x2\u2009=\u2009y2,\u2009... ,\u2009xp\u2009=\u2009yp, or exists such number r (r\u2009<\u2009p,\u2009r\u2009<\u2009q), that x1\u2009=\u2009y1,\u2009x2\u2009=\u2009y2,\u2009... ,\u2009xr\u2009=\u2009yr and xr\u2009+\u20091\u2009<\u2009yr\u2009+\u20091.\n\nThe first line contains two integers n and m (3\u2009\u2264\u2009m\u2009\u2264\u2009n\u2009\u2264\u2009100000) \u2014 the number of castles in the kingdom, and the number of castles on the Good Path, respectively.\n\nThe second line contains m integers, which are numbers of Good Path castles (the castles are numbered from 1 to n) in the order of occurrence on the Path, starting with some castle. All Good Path castles are different.\n\nEach of the following m lines describes an Evil Shortcut. First a line contains an integer ki (3\u2009\u2264\u2009ki\u2009\u2264\u2009100000) \u2014 the number of castles on the corresponding Evil Shortcut (with the two castles which are on the Good Path), followed by a ki integers \u2014 number of castles in the order of occurrence in the given Shortcut. All castles in one Evil Shortcut are different. It is guaranteed that the first and the last castles from the Shortcut are on the Good Path and the first castles in the Evil Shortcuts form the Good Path and are presented in the same order in which the Path was represented on the second line.\n\nThe next line contains an integer q (1\u2009\u2264\u2009q\u2009\u2264\u2009100000) \u2014 the number of events in the life of the kingdom. Each of the following q lines describes a single event. An event is described by the symbol cj and two numbers or castles sj and tj (the character and numbers of castles are separated by a single space). If the character of cj is equal to \"+\" (a plus), it means that a very bad gnome (probably not the first one) has appeared on the road between castles sj and tj. If cj equals \"?\" (a question), then Vasya sent a Mission of Death from castle sj to castle tj. It is guaranteed that for each request \"+\", the road between castles sj and tj exists. The events are given in chronological order, starting with the earliest one. Initially there are no very bad gnomes on the roads.\n\nAll numbers in all lines are separated by single spaces. It is guaranteed that all the given Evil Shortcuts and Good Path fit in the limitations given in the problem statement.\n\nFor each query \"?\" print a single number on a single line \u2014 the number of very bad gnomes destroyed by the corresponding Mission of Death. Print the answers to queries in the chronological order.\n\nIn the example after the first four requests there is only one path from castle 1 to castle 2, which does not contain roads with very bad gnomes: 1  6  3  5  2.\n\nAfter a gnome stood on the road (2, 5), the next Mission of Death moves along path 1  2, and destroys the gnome, who was on the road (1, 2). The next Mission of Death follows the same path which is already free of gnomes.\n\nAfter yet another gnome stood on the road (1, 2), the next Mission of Death goes on the path 1  2, and kills the gnome."}, {"role": "assistant", "content": "datastructures, graphs, implementation, shortestpaths"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "To get money for a new aeonic blaster, ranger Qwerty decided to engage in trade for a while. He wants to buy some number of items (or probably not to buy anything at all) on one of the planets, and then sell the bought items on another planet. Note that this operation is not repeated, that is, the buying and the selling are made only once. To carry out his plan, Qwerty is going to take a bank loan that covers all expenses and to return the loaned money at the end of the operation (the money is returned without the interest). At the same time, Querty wants to get as much profit as possible.\n\nThe system has n planets in total. On each of them Qwerty can buy or sell items of m types (such as food, medicine, weapons, alcohol, and so on). For each planet i and each type of items j Qwerty knows the following:\n\nIt is not allowed to buy more than cij items of type j on planet i, but it is allowed to sell any number of items of any kind.\n\nKnowing that the hold of Qwerty's ship has room for no more than k items, determine the maximum profit which Qwerty can get.\n\nThe first line contains three space-separated integers n, m and k (2\u2009\u2264\u2009n\u2009\u2264\u200910, 1\u2009\u2264\u2009m,\u2009k\u2009\u2264\u2009100) \u2014 the number of planets, the number of question types and the capacity of Qwerty's ship hold, correspondingly.\n\nThen follow n blocks describing each planet.\n\nThe first line of the i-th block has the planet's name as a string with length from 1 to 10 Latin letters. The first letter of the name is uppercase, the rest are lowercase. Then in the i-th block follow m lines, the j-th of them contains three integers aij, bij and cij (1\u2009\u2264\u2009bij\u2009<\u2009aij\u2009\u2264\u20091000, 0\u2009\u2264\u2009cij\u2009\u2264\u2009100) \u2014 the numbers that describe money operations with the j-th item on the i-th planet. The numbers in the lines are separated by spaces.\n\nIt is guaranteed that the names of all planets are different.\n\nPrint a single number \u2014 the maximum profit Qwerty can get.\n\nIn the first test case you should fly to planet Venus, take a loan on 74 units of money and buy three items of the first type and 7 items of the third type (3\u00b76\u2009+\u20097\u00b78\u2009=\u200974). Then the ranger should fly to planet Earth and sell there all the items he has bought. He gets 3\u00b79\u2009+\u20097\u00b79\u2009=\u200990 units of money for the items, he should give 74 of them for the loan. The resulting profit equals 16 units of money. We cannot get more profit in this case."}, {"role": "assistant", "content": "greedy, sortings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Let's consider one interesting word game. In this game you should transform one word into another through special operations. \n\nLet's say we have word w, let's split this word into two non-empty parts x and y so, that w\u2009=\u2009xy. A split operation is transforming word w\u2009=\u2009xy into word u\u2009=\u2009yx. For example, a split operation can transform word \"wordcut\" into word \"cutword\".\n\nYou are given two words start and end. Count in how many ways we can transform word start into word end, if we apply exactly k split operations consecutively to word start. \n\nTwo ways are considered different if the sequences of applied operations differ. Two operation sequences are different if exists such number i (1\u2009\u2264\u2009i\u2009\u2264\u2009k), that in the i-th operation of the first sequence the word splits into parts x and y, in the i-th operation of the second sequence the word splits into parts a and b, and additionally x\u2009\u2260\u2009a holds.\n\nThe first line contains a non-empty word start, the second line contains a non-empty word end. The words consist of lowercase Latin letters. The number of letters in word start equals the number of letters in word end and is at least 2 and doesn't exceed 1000 letters.\n\nThe third line contains integer k (0\u2009\u2264\u2009k\u2009\u2264\u2009105) \u2014 the required number of operations.\n\nPrint a single number \u2014 the answer to the problem. As this number can be rather large, print it modulo 1000000007 (109\u2009+\u20097).\n\nThe sought way in the first sample is:\n\nab \u2009\u2192\u2009 a|b \u2009\u2192\u2009 ba \u2009\u2192\u2009 b|a \u2009\u2192\u2009 ab\n\nIn the second sample the two sought ways are:"}, {"role": "assistant", "content": "dp"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Two players play a game. The game is played on a rectangular board with n\u2009\u00d7\u2009m squares. At the beginning of the game two different squares of the board have two chips. The first player's goal is to shift the chips to the same square. The second player aims to stop the first one with a tube of superglue.\n\nWe'll describe the rules of the game in more detail.\n\nThe players move in turns. The first player begins.\n\nWith every move the first player chooses one of his unglued chips, and shifts it one square to the left, to the right, up or down. It is not allowed to move a chip beyond the board edge. At the beginning of a turn some squares of the board may be covered with a glue. The first player can move the chip to such square, in this case the chip gets tightly glued and cannot move any longer.\n\nAt each move the second player selects one of the free squares (which do not contain a chip or a glue) and covers it with superglue. The glue dries long and squares covered with it remain sticky up to the end of the game.\n\nIf, after some move of the first player both chips are in the same square, then the first player wins. If the first player cannot make a move (both of his chips are glued), then the second player wins. Note that the situation where the second player cannot make a move is impossible \u2014 he can always spread the glue on the square from which the first player has just moved the chip.\n\nWe will further clarify the case where both chips are glued and are in the same square. In this case the first player wins as the game ends as soon as both chips are in the same square, and the condition of the loss (the inability to move) does not arise.\n\nYou know the board sizes and the positions of the two chips on it. At the beginning of the game all board squares are glue-free. Find out who wins if the players play optimally.\n\nThe first line contains six integers n, m, x1, y1, x2, y2 \u2014 the board sizes and the coordinates of the first and second chips, correspondingly (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009100; 2\u2009\u2264\u2009n\u2009\u00d7\u2009m; 1\u2009\u2264\u2009x1,\u2009x2\u2009\u2264\u2009n; 1\u2009\u2264\u2009y1,\u2009y2\u2009\u2264\u2009m). The numbers in the line are separated by single spaces.\n\nIt is guaranteed that the chips are located in different squares.\n\nIf the first player wins, print \"First\" without the quotes. Otherwise, print \"Second\" without the quotes."}, {"role": "assistant", "content": "combinatorics, constructivealgorithms"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Paul Erd\u0151s's prediction came true. Finally an alien force landed on the Earth. In contrary to our expectation they didn't asked the humans to compute the value of a Ramsey number (maybe they had solved it themselves). They asked another question which seemed as hard as calculating Ramsey numbers. Aliens threatened that if humans don't solve this problem in less than 2 hours they will destroy the Earth. \n\nBefore telling the problem they introduced the concept of Hyper Strings. A Hyper String is made by concatenation of some base strings. Suppose you are given a list of base strings b1,\u2009b2,\u2009...,\u2009bn. Now the Hyper String made from indices list i1,\u2009i2,\u2009...,\u2009im is concatenation of base strings bi1,\u2009bi2,\u2009...,\u2009bim. A Hyper String can be very large and doing operations on it is very costly for computers. \n\nThe aliens asked humans to compute the length of the longest common sub-sequence of a Hyper String t with a string s.\n\nThe first line of input contains the single integer n (1\u2009\u2264\u2009n\u2009\u2264\u20092000) \u2014 the number of base strings. \n\nThe next n lines contains values of base strings. Each base string is made of lowercase Latin letters. A base string cannot be empty string and the sum of lengths of all n base strings doesn't exceed 106. \n\nThe next line contains the single integer m (1\u2009\u2264\u2009m\u2009\u2264\u20092000) \u2014 the number of base strings in the given Hyper String t. \n\nThe next line contains m space-separated integer numbers i1,\u2009i2,\u2009...,\u2009im (1\u2009\u2264\u2009ij\u2009\u2264\u2009n) \u2014 the indices of base strings in the Hyper String t.\n\nThe last line contains a non-empty string s. String s is made of lowercase Latin letters and its length is no more than 2000 characters.\n\nPrint the length of longest common sub-sequence of Hyper String t and string s. If there is no common sub-sequence print 0.\n\nThe length of string s is the number of characters in it. If the length of string s is marked as |s|, then string s can be represented as s\u2009=\u2009s1s2... s|s|.\n\nA non-empty string y\u2009=\u2009s[p1p2... p|y|]\u2009=\u2009sp1sp2... sp|y| (1\u2009\u2264\u2009p1\u2009<\u2009p2\u2009<\u2009...\u2009<\u2009p|y|\u2009\u2264\u2009|s|) is a subsequence of string s. For example, \"coders\" is a subsequence of \"codeforces\"."}, {"role": "assistant", "content": "dp"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "This time you should help a team of researchers on an island in the Pacific Ocean. They research the culture of the ancient tribes that used to inhabit the island many years ago.\n\nOverall they've dug out n villages. Some pairs of villages were connected by roads. People could go on the roads in both directions. Overall there were exactly n\u2009-\u20091 roads, and from any village one could get to any other one.\n\nThe tribes were not peaceful and they had many wars. As a result of the wars, some villages were destroyed completely. During more peaceful years some of the villages were restored.\n\nAt each moment of time people used only those roads that belonged to some shortest way between two villages that existed at the given moment. In other words, people used the minimum subset of roads in such a way, that it was possible to get from any existing village to any other existing one. Note that throughout the island's whole history, there existed exactly n\u2009-\u20091 roads that have been found by the researchers. There never were any other roads.\n\nThe researchers think that observing the total sum of used roads\u2019 lengths at different moments of time can help to better understand the tribes' culture and answer several historical questions.\n\nYou will be given the full history of the tribes' existence. Your task is to determine the total length of used roads at some moments of time.\n\nThe first line contains an integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105) \u2014 the number of villages. The next n\u2009-\u20091 lines describe the roads. The i-th of these lines contains three integers ai, bi and ci (1\u2009\u2264\u2009ai,\u2009bi\u2009\u2264\u2009n, ai\u2009\u2260\u2009bi, 1\u2009\u2264\u2009ci\u2009\u2264\u2009109, 1\u2009\u2264\u2009i\u2009<\u2009n) \u2014 the numbers of villages that are connected by the i-th road and the road's length. The numbers in the lines are separated by a space.\n\nThe next line contains an integer q (1\u2009\u2264\u2009q\u2009\u2264\u2009105) \u2014 the number of queries. Then follow q queries, one per line, ordered by time. Each query belongs to one of three types:\n\nIt is guaranteed that the queries do not contradict each other, that is, there won't be queries to destroy non-existing villages or restore the already existing ones. It is guaranteed that we have at least one query of type \"?\". It is also guaranteed that one can get from any village to any other one by the given roads.\n\nAt the initial moment of time no village is considered to exist.\n\nFor each query of type \"?\" print the total length of used roads on a single line. You should print the answers to the queries in the order, in which they are given in the input.\n\nPlease do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use cin, cout streams or the %I64d specifier."}, {"role": "assistant", "content": "datastructures, dfsandsimilar, trees"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The Smart Beaver from ABBYY got hooked on square matrices. Now he is busy studying an n\u2009\u00d7\u2009n size matrix, where n is odd. The Smart Beaver considers the following matrix elements good:  \n\nHelp the Smart Beaver count the sum of good elements of the given matrix.\n\nThe first line of input data contains a single odd integer n. Each of the next n lines contains n integers aij (0\u2009\u2264\u2009aij\u2009\u2264\u2009100) separated by single spaces \u2014 the elements of the given matrix.\n\nThe input limitations for getting 30 points are: \n\nThe input limitations for getting 100 points are:\n\nPrint a single integer \u2014 the sum of good matrix elements.\n\nIn the first sample all matrix elements will be good. Good elements in the second sample are shown on the figure."}, {"role": "assistant", "content": "implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The Smart Beaver from ABBYY got hooked on square matrices. Now he is busy studying an n\u2009\u00d7\u2009n size matrix, where n is odd. The Smart Beaver considers the following matrix elements good:  \n\nHelp the Smart Beaver count the sum of good elements of the given matrix.\n\nThe first line of input data contains a single odd integer n. Each of the next n lines contains n integers aij (0\u2009\u2264\u2009aij\u2009\u2264\u2009100) separated by single spaces \u2014 the elements of the given matrix.\n\nThe input limitations for getting 30 points are: \n\nThe input limitations for getting 100 points are:\n\nPrint a single integer \u2014 the sum of good matrix elements.\n\nIn the first sample all matrix elements will be good. Good elements in the second sample are shown on the figure."}, {"role": "assistant", "content": "implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The Smart Beaver from ABBYY decided to have a day off. But doing nothing the whole day turned out to be too boring, and he decided to play a game with pebbles. Initially, the Beaver has n pebbles. He arranges them in a equal rows, each row has b pebbles (a\u2009>\u20091). Note that the Beaver must use all the pebbles he has, i. e. n\u2009=\u2009a\u00b7b.\n\nOnce the Smart Beaver has arranged the pebbles, he takes back any of the resulting rows (that is, b pebbles) and discards all other pebbles. Then he arranges all his pebbles again (possibly choosing other values of a and b) and takes back one row, and so on. The game continues until at some point the Beaver ends up with exactly one pebble. \n\nThe game process can be represented as a finite sequence of integers c1,\u2009...,\u2009ck, where: \n\nThe result of the game is the sum of numbers ci. You are given n. Find the maximum possible result of the game.\n\nThe single line of the input contains a single integer n \u2014 the initial number of pebbles the Smart Beaver has.\n\nThe input limitations for getting 30 points are: \n\nThe input limitations for getting 100 points are: \n\nPrint a single number \u2014 the maximum possible result of the game.\n\nConsider the first example (c1\u2009=\u200910). The possible options for the game development are:"}, {"role": "assistant", "content": "numbertheory"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The Smart Beaver from ABBYY decided to have a day off. But doing nothing the whole day turned out to be too boring, and he decided to play a game with pebbles. Initially, the Beaver has n pebbles. He arranges them in a equal rows, each row has b pebbles (a\u2009>\u20091). Note that the Beaver must use all the pebbles he has, i. e. n\u2009=\u2009a\u00b7b.\n\nOnce the Smart Beaver has arranged the pebbles, he takes back any of the resulting rows (that is, b pebbles) and discards all other pebbles. Then he arranges all his pebbles again (possibly choosing other values of a and b) and takes back one row, and so on. The game continues until at some point the Beaver ends up with exactly one pebble. \n\nThe game process can be represented as a finite sequence of integers c1,\u2009...,\u2009ck, where: \n\nThe result of the game is the sum of numbers ci. You are given n. Find the maximum possible result of the game.\n\nThe single line of the input contains a single integer n \u2014 the initial number of pebbles the Smart Beaver has.\n\nThe input limitations for getting 30 points are: \n\nThe input limitations for getting 100 points are: \n\nPrint a single number \u2014 the maximum possible result of the game.\n\nConsider the first example (c1\u2009=\u200910). The possible options for the game development are:"}, {"role": "assistant", "content": "numbertheory"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "To celebrate the second ABBYY Cup tournament, the Smart Beaver decided to throw a party. The Beaver has a lot of acquaintances, some of them are friends with each other, and some of them dislike each other. To make party successful, the Smart Beaver wants to invite only those of his friends who are connected by friendship relations, and not to invite those who dislike each other. Both friendship and dislike are mutual feelings.\n\nMore formally, for each invited person the following conditions should be fulfilled: \n\nHelp the Beaver find the maximum number of acquaintances he can invite.\n\nThe first line of input contains an integer n \u2014 the number of the Beaver's acquaintances. \n\nThe second line contains an integer k  \u2014 the number of pairs of friends. Next k lines contain space-separated pairs of integers ui,\u2009vi  \u2014 indices of people who form the i-th pair of friends.\n\nThe next line contains an integer m  \u2014 the number of pairs of people who dislike each other. Next m lines describe pairs of people who dislike each other in the same format as the pairs of friends were described.\n\nEach pair of people is mentioned in the input at most once . In particular, two persons cannot be friends and dislike each other at the same time.\n\nThe input limitations for getting 30 points are: \n\nThe input limitations for getting 100 points are: \n\nOutput a single number \u2014 the maximum number of people that can be invited to the party. If a group of people that meets all the requirements is impossible to select, output 0.\n\nLet's have a look at the example. \n\nTwo groups of people can be invited: {1,\u20092,\u20093} and {4,\u20095}, thus the answer will be the size of the largest of these groups. Group {6,\u20097,\u20098,\u20099} doesn't fit, since it includes people 7 and 9 who dislike each other. Group {1,\u20092,\u20093,\u20094,\u20095} also doesn't fit, because not all of its members are connected by a chain of common friends (for example, people 2 and 5 aren't connected)."}, {"role": "assistant", "content": "dfsandsimilar, dsu, graphs"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "To celebrate the second ABBYY Cup tournament, the Smart Beaver decided to throw a party. The Beaver has a lot of acquaintances, some of them are friends with each other, and some of them dislike each other. To make party successful, the Smart Beaver wants to invite only those of his friends who are connected by friendship relations, and not to invite those who dislike each other. Both friendship and dislike are mutual feelings.\n\nMore formally, for each invited person the following conditions should be fulfilled: \n\nHelp the Beaver find the maximum number of acquaintances he can invite.\n\nThe first line of input contains an integer n \u2014 the number of the Beaver's acquaintances. \n\nThe second line contains an integer k  \u2014 the number of pairs of friends. Next k lines contain space-separated pairs of integers ui,\u2009vi  \u2014 indices of people who form the i-th pair of friends.\n\nThe next line contains an integer m  \u2014 the number of pairs of people who dislike each other. Next m lines describe pairs of people who dislike each other in the same format as the pairs of friends were described.\n\nEach pair of people is mentioned in the input at most once . In particular, two persons cannot be friends and dislike each other at the same time.\n\nThe input limitations for getting 30 points are: \n\nThe input limitations for getting 100 points are: \n\nOutput a single number \u2014 the maximum number of people that can be invited to the party. If a group of people that meets all the requirements is impossible to select, output 0.\n\nLet's have a look at the example. \n\nTwo groups of people can be invited: {1,\u20092,\u20093} and {4,\u20095}, thus the answer will be the size of the largest of these groups. Group {6,\u20097,\u20098,\u20099} doesn't fit, since it includes people 7 and 9 who dislike each other. Group {1,\u20092,\u20093,\u20094,\u20095} also doesn't fit, because not all of its members are connected by a chain of common friends (for example, people 2 and 5 aren't connected)."}, {"role": "assistant", "content": "bruteforce, dfsandsimilar, dsu, graphs"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The Smart Beaver from ABBYY invented a new message encryption method and now wants to check its performance. Checking it manually is long and tiresome, so he decided to ask the ABBYY Cup contestants for help.\n\nA message is a sequence of n integers a1,\u2009a2,\u2009...,\u2009an. Encryption uses a key which is a sequence of m integers b1,\u2009b2,\u2009...,\u2009bm (m\u2009\u2264\u2009n). All numbers from the message and from the key belong to the interval from 0 to c\u2009-\u20091, inclusive, and all the calculations are performed modulo c.\n\nEncryption is performed in n\u2009-\u2009m\u2009+\u20091 steps. On the first step we add to each number a1,\u2009a2,\u2009...,\u2009am a corresponding number b1,\u2009b2,\u2009...,\u2009bm. On the second step we add to each number a2,\u2009a3,\u2009...,\u2009am\u2009+\u20091 (changed on the previous step) a corresponding number b1,\u2009b2,\u2009...,\u2009bm. And so on: on step number i we add to each number ai,\u2009ai\u2009+\u20091,\u2009...,\u2009ai\u2009+\u2009m\u2009-\u20091 a corresponding number b1,\u2009b2,\u2009...,\u2009bm. The result of the encryption is the sequence a1,\u2009a2,\u2009...,\u2009an after n\u2009-\u2009m\u2009+\u20091 steps.\n\nHelp the Beaver to write a program that will encrypt messages in the described manner.\n\nThe first input line contains three integers n, m and c, separated by single spaces. \n\nThe second input line contains n integers ai (0\u2009\u2264\u2009ai\u2009<\u2009c), separated by single spaces \u2014 the original message. \n\nThe third input line contains m integers bi (0\u2009\u2264\u2009bi\u2009<\u2009c), separated by single spaces \u2014 the encryption key.\n\nThe input limitations for getting 30 points are: \n\nThe input limitations for getting 100 points are: \n\nPrint n space-separated integers \u2014 the result of encrypting the original message.\n\nIn the first sample the encryption is performed in two steps: after the first step a\u2009=\u2009(0,\u20090,\u20090,\u20091) (remember that the calculations are performed modulo 2), after the second step a\u2009=\u2009(0,\u20091,\u20091,\u20090), and that is the answer. "}, {"role": "assistant", "content": "bruteforce"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The Smart Beaver from ABBYY invented a new message encryption method and now wants to check its performance. Checking it manually is long and tiresome, so he decided to ask the ABBYY Cup contestants for help.\n\nA message is a sequence of n integers a1,\u2009a2,\u2009...,\u2009an. Encryption uses a key which is a sequence of m integers b1,\u2009b2,\u2009...,\u2009bm (m\u2009\u2264\u2009n). All numbers from the message and from the key belong to the interval from 0 to c\u2009-\u20091, inclusive, and all the calculations are performed modulo c.\n\nEncryption is performed in n\u2009-\u2009m\u2009+\u20091 steps. On the first step we add to each number a1,\u2009a2,\u2009...,\u2009am a corresponding number b1,\u2009b2,\u2009...,\u2009bm. On the second step we add to each number a2,\u2009a3,\u2009...,\u2009am\u2009+\u20091 (changed on the previous step) a corresponding number b1,\u2009b2,\u2009...,\u2009bm. And so on: on step number i we add to each number ai,\u2009ai\u2009+\u20091,\u2009...,\u2009ai\u2009+\u2009m\u2009-\u20091 a corresponding number b1,\u2009b2,\u2009...,\u2009bm. The result of the encryption is the sequence a1,\u2009a2,\u2009...,\u2009an after n\u2009-\u2009m\u2009+\u20091 steps.\n\nHelp the Beaver to write a program that will encrypt messages in the described manner.\n\nThe first input line contains three integers n, m and c, separated by single spaces. \n\nThe second input line contains n integers ai (0\u2009\u2264\u2009ai\u2009<\u2009c), separated by single spaces \u2014 the original message. \n\nThe third input line contains m integers bi (0\u2009\u2264\u2009bi\u2009<\u2009c), separated by single spaces \u2014 the encryption key.\n\nThe input limitations for getting 30 points are: \n\nThe input limitations for getting 100 points are: \n\nPrint n space-separated integers \u2014 the result of encrypting the original message.\n\nIn the first sample the encryption is performed in two steps: after the first step a\u2009=\u2009(0,\u20090,\u20090,\u20091) (remember that the calculations are performed modulo 2), after the second step a\u2009=\u2009(0,\u20091,\u20091,\u20090), and that is the answer. "}, {"role": "assistant", "content": "datastructures"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The Smart Beaver from ABBYY plans a space travel on an ultramodern spaceship. During the voyage he plans to visit n planets. For planet i ai is the maximum number of suitcases that an alien tourist is allowed to bring to the planet, and bi is the number of citizens on the planet.\n\nThe Smart Beaver is going to bring some presents from ABBYY to the planets he will be visiting. The presents are packed in suitcases, x presents in each. The Beaver will take to the ship exactly a1\u2009+\u2009...\u2009+\u2009an suitcases.\n\nAs the Beaver lands on the i-th planet, he takes ai suitcases and goes out. On the first day on the planet the Beaver takes a walk and gets to know the citizens. On the second and all subsequent days the Beaver gives presents to the citizens \u2014 each of the bi citizens gets one present per day. The Beaver leaves the planet in the evening of the day when the number of presents left is strictly less than the number of citizens (i.e. as soon as he won't be able to give away the proper number of presents the next day). He leaves the remaining presents at the hotel.\n\nThe Beaver is going to spend exactly c days traveling. The time spent on flights between the planets is considered to be zero. In how many ways can one choose the positive integer x so that the planned voyage will take exactly c days?\n\nThe first input line contains space-separated integers n and c \u2014 the number of planets that the Beaver is going to visit and the number of days he is going to spend traveling, correspondingly.\n\nThe next n lines contain pairs of space-separated integers ai,\u2009bi (1\u2009\u2264\u2009i\u2009\u2264\u2009n) \u2014 the number of suitcases he can bring to the i-th planet and the number of citizens of the i-th planet, correspondingly.\n\nThe input limitations for getting 30 points are: \n\nThe input limitations for getting 100 points are: \n\nDue to possible overflow, it is recommended to use the 64-bit arithmetic. In some solutions even the 64-bit arithmetic can overflow. So be careful in calculations!\n\nPrint a single number k \u2014 the number of ways to choose x so as to travel for exactly c days. If there are infinitely many possible values of x, print -1.\n\nPlease do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use cin, cout streams or the %I64d specifier.\n\nIn the first example there is only one suitable value x\u2009=\u20095. Then the Beaver takes 1 suitcase with 5 presents to the first planet. Here he spends 2 days: he hangs around on the first day, and he gives away five presents on the second day. He takes 2 suitcases with 10 presents to the second planet. Here he spends 3 days \u2014 he gives away 4 presents on the second and the third days and leaves the remaining 2 presents at the hotel. In total, the Beaver spends 5 days traveling.\n\nFor x\u2009=\u20094 or less the Beaver won't have enough presents for the second day on the first planet, so the voyage will end too soon. For x\u2009=\u20096 and more the Beaver will spend at least one more day on the second planet, and the voyage will take too long."}, {"role": "assistant", "content": "binarysearch"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The Smart Beaver from ABBYY plans a space travel on an ultramodern spaceship. During the voyage he plans to visit n planets. For planet i ai is the maximum number of suitcases that an alien tourist is allowed to bring to the planet, and bi is the number of citizens on the planet.\n\nThe Smart Beaver is going to bring some presents from ABBYY to the planets he will be visiting. The presents are packed in suitcases, x presents in each. The Beaver will take to the ship exactly a1\u2009+\u2009...\u2009+\u2009an suitcases.\n\nAs the Beaver lands on the i-th planet, he takes ai suitcases and goes out. On the first day on the planet the Beaver takes a walk and gets to know the citizens. On the second and all subsequent days the Beaver gives presents to the citizens \u2014 each of the bi citizens gets one present per day. The Beaver leaves the planet in the evening of the day when the number of presents left is strictly less than the number of citizens (i.e. as soon as he won't be able to give away the proper number of presents the next day). He leaves the remaining presents at the hotel.\n\nThe Beaver is going to spend exactly c days traveling. The time spent on flights between the planets is considered to be zero. In how many ways can one choose the positive integer x so that the planned voyage will take exactly c days?\n\nThe first input line contains space-separated integers n and c \u2014 the number of planets that the Beaver is going to visit and the number of days he is going to spend traveling, correspondingly.\n\nThe next n lines contain pairs of space-separated integers ai,\u2009bi (1\u2009\u2264\u2009i\u2009\u2264\u2009n) \u2014 the number of suitcases he can bring to the i-th planet and the number of citizens of the i-th planet, correspondingly.\n\nThe input limitations for getting 30 points are: \n\nThe input limitations for getting 100 points are: \n\nDue to possible overflow, it is recommended to use the 64-bit arithmetic. In some solutions even the 64-bit arithmetic can overflow. So be careful in calculations!\n\nPrint a single number k \u2014 the number of ways to choose x so as to travel for exactly c days. If there are infinitely many possible values of x, print -1.\n\nPlease do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use cin, cout streams or the %I64d specifier.\n\nIn the first example there is only one suitable value x\u2009=\u20095. Then the Beaver takes 1 suitcase with 5 presents to the first planet. Here he spends 2 days: he hangs around on the first day, and he gives away five presents on the second day. He takes 2 suitcases with 10 presents to the second planet. Here he spends 3 days \u2014 he gives away 4 presents on the second and the third days and leaves the remaining 2 presents at the hotel. In total, the Beaver spends 5 days traveling.\n\nFor x\u2009=\u20094 or less the Beaver won't have enough presents for the second day on the first planet, so the voyage will end too soon. For x\u2009=\u20096 and more the Beaver will spend at least one more day on the second planet, and the voyage will take too long."}, {"role": "assistant", "content": "binarysearch"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The Smart Beaver from ABBYY was offered a job of a screenwriter for the ongoing TV series. In particular, he needs to automate the hard decision: which main characters will get married by the end of the series.\n\nThere are n single men and n single women among the main characters. An opinion poll showed that viewers like several couples, and a marriage of any of them will make the audience happy. The Smart Beaver formalized this fact as k triples of numbers (h,\u2009w,\u2009r), where h is the index of the man, w is the index of the woman, and r is the measure of the audience's delight in case of the marriage of this couple. The same poll showed that the marriage of any other couple will leave the audience indifferent, so the screenwriters decided not to include any such marriages in the plot.\n\nThe script allows you to arrange several marriages between the heroes or not to arrange marriages at all. A subset of some of the k marriages is considered acceptable if each man and each woman is involved in at most one marriage of the subset (the series won't allow any divorces). The value of the acceptable set of marriages is the total delight the spectators will get from the marriages included in this set.\n\nObviously, there is a finite number of acceptable sets, and they all describe some variants of the script. The screenwriters do not want to choose a set with maximum value \u2014 it would make the plot too predictable. So the Smart Beaver offers the following option: sort all the acceptable sets in increasing order of value and choose the t-th set from the sorted list. Thus, t\u2009=\u20091 corresponds to a plot without marriages, t\u2009=\u20092 \u2014 to a single marriage resulting in minimal delight for the audience, and so on.\n\nHelp the Beaver to implement the algorithm for selecting the desired set.\n\nThe first input line contains integers n, k and t (1\u2009\u2264\u2009k\u2009\u2264\u2009min(100,\u2009n2), 1\u2009\u2264\u2009t\u2009\u2264\u20092\u00b7105), separated by single spaces. Next k lines contain triples of integers (h,\u2009w,\u2009r) (1\u2009\u2264\u2009h,\u2009w\u2009\u2264\u2009n;\u00a01\u2009\u2264\u2009r\u2009\u2264\u20091000), separated by single spaces, which describe the possible marriages. It is guaranteed that the input data is correct: t doesn't exceed the total number of acceptable sets, and each pair (h,\u2009w) is present in at most one triple.\n\nThe input limitations for getting 30 points are: \n\nThe input limitations for getting 100 points are: \n\nPrint a single number \u2014 the value of the t-th acceptable variant.\n\nThe figure shows 7 acceptable sets of marriages that exist in the first sample. "}, {"role": "assistant", "content": "*1800"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The Smart Beaver from ABBYY was offered a job of a screenwriter for the ongoing TV series. In particular, he needs to automate the hard decision: which main characters will get married by the end of the series.\n\nThere are n single men and n single women among the main characters. An opinion poll showed that viewers like several couples, and a marriage of any of them will make the audience happy. The Smart Beaver formalized this fact as k triples of numbers (h,\u2009w,\u2009r), where h is the index of the man, w is the index of the woman, and r is the measure of the audience's delight in case of the marriage of this couple. The same poll showed that the marriage of any other couple will leave the audience indifferent, so the screenwriters decided not to include any such marriages in the plot.\n\nThe script allows you to arrange several marriages between the heroes or not to arrange marriages at all. A subset of some of the k marriages is considered acceptable if each man and each woman is involved in at most one marriage of the subset (the series won't allow any divorces). The value of the acceptable set of marriages is the total delight the spectators will get from the marriages included in this set.\n\nObviously, there is a finite number of acceptable sets, and they all describe some variants of the script. The screenwriters do not want to choose a set with maximum value \u2014 it would make the plot too predictable. So the Smart Beaver offers the following option: sort all the acceptable sets in increasing order of value and choose the t-th set from the sorted list. Thus, t\u2009=\u20091 corresponds to a plot without marriages, t\u2009=\u20092 \u2014 to a single marriage resulting in minimal delight for the audience, and so on.\n\nHelp the Beaver to implement the algorithm for selecting the desired set.\n\nThe first input line contains integers n, k and t (1\u2009\u2264\u2009k\u2009\u2264\u2009min(100,\u2009n2), 1\u2009\u2264\u2009t\u2009\u2264\u20092\u00b7105), separated by single spaces. Next k lines contain triples of integers (h,\u2009w,\u2009r) (1\u2009\u2264\u2009h,\u2009w\u2009\u2264\u2009n;\u00a01\u2009\u2264\u2009r\u2009\u2264\u20091000), separated by single spaces, which describe the possible marriages. It is guaranteed that the input data is correct: t doesn't exceed the total number of acceptable sets, and each pair (h,\u2009w) is present in at most one triple.\n\nThe input limitations for getting 30 points are: \n\nThe input limitations for getting 100 points are: \n\nPrint a single number \u2014 the value of the t-th acceptable variant.\n\nThe figure shows 7 acceptable sets of marriages that exist in the first sample. "}, {"role": "assistant", "content": "*2300"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Fibonacci strings are defined as follows: \n\nThus, the first five Fibonacci strings are: \"a\", \"b\", \"ba\", \"bab\", \"babba\".\n\nYou are given a Fibonacci string and m strings si. For each string si, find the number of times it occurs in the given Fibonacci string as a substring.\n\nThe first line contains two space-separated integers k and m \u2014 the number of a Fibonacci string and the number of queries, correspondingly.\n\nNext m lines contain strings si that correspond to the queries. It is guaranteed that strings si aren't empty and consist only of characters \"a\" and \"b\".\n\nThe input limitations for getting 30 points are: \n\nThe input limitations for getting 100 points are: \n\nPlease do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use cin, cout streams or the %I64d specifier.\n\nFor each string si print the number of times it occurs in the given Fibonacci string as a substring. Since the numbers can be large enough, print them modulo 1000000007 (109\u2009+\u20097). Print the answers for the strings in the order in which they are given in the input."}, {"role": "assistant", "content": "strings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Fibonacci strings are defined as follows: \n\nThus, the first five Fibonacci strings are: \"a\", \"b\", \"ba\", \"bab\", \"babba\".\n\nYou are given a Fibonacci string and m strings si. For each string si, find the number of times it occurs in the given Fibonacci string as a substring.\n\nThe first line contains two space-separated integers k and m \u2014 the number of a Fibonacci string and the number of queries, correspondingly.\n\nNext m lines contain strings si that correspond to the queries. It is guaranteed that strings si aren't empty and consist only of characters \"a\" and \"b\".\n\nThe input limitations for getting 30 points are: \n\nThe input limitations for getting 100 points are: \n\nPlease do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use cin, cout streams or the %I64d specifier.\n\nFor each string si print the number of times it occurs in the given Fibonacci string as a substring. Since the numbers can be large enough, print them modulo 1000000007 (109\u2009+\u20097). Print the answers for the strings in the order in which they are given in the input."}, {"role": "assistant", "content": "matrices, strings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The Smart Beaver from ABBYY began to develop a new educational game for children. The rules of the game are fairly simple and are described below.\n\nThe playing field is a sequence of n non-negative integers ai numbered from 1 to n. The goal of the game is to make numbers a1,\u2009a2,\u2009...,\u2009ak (i.e. some prefix of the sequence) equal to zero for some fixed k (k\u2009<\u2009n), and this should be done in the smallest possible number of moves.\n\nOne move is choosing an integer i (1\u2009\u2264\u2009i\u2009\u2264\u2009n) such that ai\u2009>\u20090 and an integer t (t\u2009\u2265\u20090) such that i\u2009+\u20092t\u2009\u2264\u2009n. After the values of i and t have been selected, the value of ai is decreased by 1, and the value of ai\u2009+\u20092t is increased by 1. For example, let n\u2009=\u20094 and a\u2009=\u2009(1,\u20090,\u20091,\u20092), then it is possible to make move i\u2009=\u20093, t\u2009=\u20090 and get a\u2009=\u2009(1,\u20090,\u20090,\u20093) or to make move i\u2009=\u20091, t\u2009=\u20091 and get a\u2009=\u2009(0,\u20090,\u20092,\u20092) (the only possible other move is i\u2009=\u20091, t\u2009=\u20090).\n\nYou are given n and the initial sequence ai. The task is to calculate the minimum number of moves needed to make the first k elements of the original sequence equal to zero for each possible k (1\u2009\u2264\u2009k\u2009<\u2009n).\n\nThe first input line contains a single integer n. The second line contains n integers ai (0\u2009\u2264\u2009ai\u2009\u2264\u2009104), separated by single spaces.\n\nThe input limitations for getting 20 points are: \n\nThe input limitations for getting 50 points are: \n\nThe input limitations for getting 100 points are: \n\nPrint exactly n\u2009-\u20091 lines: the k-th output line must contain the minimum number of moves needed to make the first k elements of the original sequence ai equal to zero.\n\nPlease do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use the cin, cout streams, or the %I64d specifier."}, {"role": "assistant", "content": "*1000"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The Smart Beaver from ABBYY began to develop a new educational game for children. The rules of the game are fairly simple and are described below.\n\nThe playing field is a sequence of n non-negative integers ai numbered from 1 to n. The goal of the game is to make numbers a1,\u2009a2,\u2009...,\u2009ak (i.e. some prefix of the sequence) equal to zero for some fixed k (k\u2009<\u2009n), and this should be done in the smallest possible number of moves.\n\nOne move is choosing an integer i (1\u2009\u2264\u2009i\u2009\u2264\u2009n) such that ai\u2009>\u20090 and an integer t (t\u2009\u2265\u20090) such that i\u2009+\u20092t\u2009\u2264\u2009n. After the values of i and t have been selected, the value of ai is decreased by 1, and the value of ai\u2009+\u20092t is increased by 1. For example, let n\u2009=\u20094 and a\u2009=\u2009(1,\u20090,\u20091,\u20092), then it is possible to make move i\u2009=\u20093, t\u2009=\u20090 and get a\u2009=\u2009(1,\u20090,\u20090,\u20093) or to make move i\u2009=\u20091, t\u2009=\u20091 and get a\u2009=\u2009(0,\u20090,\u20092,\u20092) (the only possible other move is i\u2009=\u20091, t\u2009=\u20090).\n\nYou are given n and the initial sequence ai. The task is to calculate the minimum number of moves needed to make the first k elements of the original sequence equal to zero for each possible k (1\u2009\u2264\u2009k\u2009<\u2009n).\n\nThe first input line contains a single integer n. The second line contains n integers ai (0\u2009\u2264\u2009ai\u2009\u2264\u2009104), separated by single spaces.\n\nThe input limitations for getting 20 points are: \n\nThe input limitations for getting 50 points are: \n\nThe input limitations for getting 100 points are: \n\nPrint exactly n\u2009-\u20091 lines: the k-th output line must contain the minimum number of moves needed to make the first k elements of the original sequence ai equal to zero.\n\nPlease do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use the cin, cout streams, or the %I64d specifier."}, {"role": "assistant", "content": "greedy"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The Smart Beaver from ABBYY began to develop a new educational game for children. The rules of the game are fairly simple and are described below.\n\nThe playing field is a sequence of n non-negative integers ai numbered from 1 to n. The goal of the game is to make numbers a1,\u2009a2,\u2009...,\u2009ak (i.e. some prefix of the sequence) equal to zero for some fixed k (k\u2009<\u2009n), and this should be done in the smallest possible number of moves.\n\nOne move is choosing an integer i (1\u2009\u2264\u2009i\u2009\u2264\u2009n) such that ai\u2009>\u20090 and an integer t (t\u2009\u2265\u20090) such that i\u2009+\u20092t\u2009\u2264\u2009n. After the values of i and t have been selected, the value of ai is decreased by 1, and the value of ai\u2009+\u20092t is increased by 1. For example, let n\u2009=\u20094 and a\u2009=\u2009(1,\u20090,\u20091,\u20092), then it is possible to make move i\u2009=\u20093, t\u2009=\u20090 and get a\u2009=\u2009(1,\u20090,\u20090,\u20093) or to make move i\u2009=\u20091, t\u2009=\u20091 and get a\u2009=\u2009(0,\u20090,\u20092,\u20092) (the only possible other move is i\u2009=\u20091, t\u2009=\u20090).\n\nYou are given n and the initial sequence ai. The task is to calculate the minimum number of moves needed to make the first k elements of the original sequence equal to zero for each possible k (1\u2009\u2264\u2009k\u2009<\u2009n).\n\nThe first input line contains a single integer n. The second line contains n integers ai (0\u2009\u2264\u2009ai\u2009\u2264\u2009104), separated by single spaces.\n\nThe input limitations for getting 20 points are: \n\nThe input limitations for getting 50 points are: \n\nThe input limitations for getting 100 points are: \n\nPrint exactly n\u2009-\u20091 lines: the k-th output line must contain the minimum number of moves needed to make the first k elements of the original sequence ai equal to zero.\n\nPlease do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use the cin, cout streams, or the %I64d specifier."}, {"role": "assistant", "content": "greedy"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "In ABBYY a wonderful Smart Beaver lives. This time, he began to study history. When he read about the Roman Empire, he became interested in the life of merchants.\n\nThe Roman Empire consisted of n cities numbered from 1 to n. It also had m bidirectional roads numbered from 1 to m. Each road connected two different cities. Any two cities were connected by no more than one road.\n\nWe say that there is a path between cities c1 and c2 if there exists a finite sequence of cities t1,\u2009t2,\u2009...,\u2009tp (p\u2009\u2265\u20091) such that:\n\nWe know that there existed a path between any two cities in the Roman Empire.\n\nIn the Empire k merchants lived numbered from 1 to k. For each merchant we know a pair of numbers si and li, where si is the number of the city where this merchant's warehouse is, and li is the number of the city where his shop is. The shop and the warehouse could be located in different cities, so the merchants had to deliver goods from the warehouse to the shop.\n\nLet's call a road important for the merchant if its destruction threatens to ruin the merchant, that is, without this road there is no path from the merchant's warehouse to his shop. Merchants in the Roman Empire are very greedy, so each merchant pays a tax (1 dinar) only for those roads which are important for him. In other words, each merchant pays di dinars of tax, where di (di\u2009\u2265\u20090) is the number of roads important for the i-th merchant.\n\nThe tax collection day came in the Empire. The Smart Beaver from ABBYY is very curious by nature, so he decided to count how many dinars each merchant had paid that day. And now he needs your help.\n\nThe first input line contains two integers n and m, separated by a space, n is the number of cities, and m is the number of roads in the empire.\n\nThe following m lines contain pairs of integers ai, bi (1\u2009\u2264\u2009ai,\u2009bi\u2009\u2264\u2009n,\u2009ai\u2009\u2260\u2009bi), separated by a space \u2014 the numbers of cities connected by the i-th road. It is guaranteed that any two cities are connected by no more than one road and that there exists a path between any two cities in the Roman Empire.\n\nThe next line contains a single integer k \u2014 the number of merchants in the empire.\n\nThe following k lines contain pairs of integers si, li (1\u2009\u2264\u2009si,\u2009li\u2009\u2264\u2009n), separated by a space, \u2014 si is the number of the city in which the warehouse of the i-th merchant is located, and li is the number of the city in which the shop of the i-th merchant is located.\n\nThe input limitations for getting 20 points are: \n\nThe input limitations for getting 50 points are: \n\nThe input limitations for getting 100 points are: \n\nPrint exactly k lines, the i-th line should contain a single integer di \u2014 the number of dinars that the i-th merchant paid.\n\nThe given sample is illustrated in the figure below. \n\nLet's describe the result for the first merchant. The merchant's warehouse is located in city 1 and his shop is in city 5. Let us note that if either road, (1,\u20092) or (2,\u20093) is destroyed, there won't be any path between cities 1 and 5 anymore. If any other road is destroyed, the path will be preserved. That's why for the given merchant the answer is 2."}, {"role": "assistant", "content": "*1600"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "In ABBYY a wonderful Smart Beaver lives. This time, he began to study history. When he read about the Roman Empire, he became interested in the life of merchants.\n\nThe Roman Empire consisted of n cities numbered from 1 to n. It also had m bidirectional roads numbered from 1 to m. Each road connected two different cities. Any two cities were connected by no more than one road.\n\nWe say that there is a path between cities c1 and c2 if there exists a finite sequence of cities t1,\u2009t2,\u2009...,\u2009tp (p\u2009\u2265\u20091) such that:\n\nWe know that there existed a path between any two cities in the Roman Empire.\n\nIn the Empire k merchants lived numbered from 1 to k. For each merchant we know a pair of numbers si and li, where si is the number of the city where this merchant's warehouse is, and li is the number of the city where his shop is. The shop and the warehouse could be located in different cities, so the merchants had to deliver goods from the warehouse to the shop.\n\nLet's call a road important for the merchant if its destruction threatens to ruin the merchant, that is, without this road there is no path from the merchant's warehouse to his shop. Merchants in the Roman Empire are very greedy, so each merchant pays a tax (1 dinar) only for those roads which are important for him. In other words, each merchant pays di dinars of tax, where di (di\u2009\u2265\u20090) is the number of roads important for the i-th merchant.\n\nThe tax collection day came in the Empire. The Smart Beaver from ABBYY is very curious by nature, so he decided to count how many dinars each merchant had paid that day. And now he needs your help.\n\nThe first input line contains two integers n and m, separated by a space, n is the number of cities, and m is the number of roads in the empire.\n\nThe following m lines contain pairs of integers ai, bi (1\u2009\u2264\u2009ai,\u2009bi\u2009\u2264\u2009n,\u2009ai\u2009\u2260\u2009bi), separated by a space \u2014 the numbers of cities connected by the i-th road. It is guaranteed that any two cities are connected by no more than one road and that there exists a path between any two cities in the Roman Empire.\n\nThe next line contains a single integer k \u2014 the number of merchants in the empire.\n\nThe following k lines contain pairs of integers si, li (1\u2009\u2264\u2009si,\u2009li\u2009\u2264\u2009n), separated by a space, \u2014 si is the number of the city in which the warehouse of the i-th merchant is located, and li is the number of the city in which the shop of the i-th merchant is located.\n\nThe input limitations for getting 20 points are: \n\nThe input limitations for getting 50 points are: \n\nThe input limitations for getting 100 points are: \n\nPrint exactly k lines, the i-th line should contain a single integer di \u2014 the number of dinars that the i-th merchant paid.\n\nThe given sample is illustrated in the figure below. \n\nLet's describe the result for the first merchant. The merchant's warehouse is located in city 1 and his shop is in city 5. Let us note that if either road, (1,\u20092) or (2,\u20093) is destroyed, there won't be any path between cities 1 and 5 anymore. If any other road is destroyed, the path will be preserved. That's why for the given merchant the answer is 2."}, {"role": "assistant", "content": "*1600"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "In ABBYY a wonderful Smart Beaver lives. This time, he began to study history. When he read about the Roman Empire, he became interested in the life of merchants.\n\nThe Roman Empire consisted of n cities numbered from 1 to n. It also had m bidirectional roads numbered from 1 to m. Each road connected two different cities. Any two cities were connected by no more than one road.\n\nWe say that there is a path between cities c1 and c2 if there exists a finite sequence of cities t1,\u2009t2,\u2009...,\u2009tp (p\u2009\u2265\u20091) such that:\n\nWe know that there existed a path between any two cities in the Roman Empire.\n\nIn the Empire k merchants lived numbered from 1 to k. For each merchant we know a pair of numbers si and li, where si is the number of the city where this merchant's warehouse is, and li is the number of the city where his shop is. The shop and the warehouse could be located in different cities, so the merchants had to deliver goods from the warehouse to the shop.\n\nLet's call a road important for the merchant if its destruction threatens to ruin the merchant, that is, without this road there is no path from the merchant's warehouse to his shop. Merchants in the Roman Empire are very greedy, so each merchant pays a tax (1 dinar) only for those roads which are important for him. In other words, each merchant pays di dinars of tax, where di (di\u2009\u2265\u20090) is the number of roads important for the i-th merchant.\n\nThe tax collection day came in the Empire. The Smart Beaver from ABBYY is very curious by nature, so he decided to count how many dinars each merchant had paid that day. And now he needs your help.\n\nThe first input line contains two integers n and m, separated by a space, n is the number of cities, and m is the number of roads in the empire.\n\nThe following m lines contain pairs of integers ai, bi (1\u2009\u2264\u2009ai,\u2009bi\u2009\u2264\u2009n,\u2009ai\u2009\u2260\u2009bi), separated by a space \u2014 the numbers of cities connected by the i-th road. It is guaranteed that any two cities are connected by no more than one road and that there exists a path between any two cities in the Roman Empire.\n\nThe next line contains a single integer k \u2014 the number of merchants in the empire.\n\nThe following k lines contain pairs of integers si, li (1\u2009\u2264\u2009si,\u2009li\u2009\u2264\u2009n), separated by a space, \u2014 si is the number of the city in which the warehouse of the i-th merchant is located, and li is the number of the city in which the shop of the i-th merchant is located.\n\nThe input limitations for getting 20 points are: \n\nThe input limitations for getting 50 points are: \n\nThe input limitations for getting 100 points are: \n\nPrint exactly k lines, the i-th line should contain a single integer di \u2014 the number of dinars that the i-th merchant paid.\n\nThe given sample is illustrated in the figure below. \n\nLet's describe the result for the first merchant. The merchant's warehouse is located in city 1 and his shop is in city 5. Let us note that if either road, (1,\u20092) or (2,\u20093) is destroyed, there won't be any path between cities 1 and 5 anymore. If any other road is destroyed, the path will be preserved. That's why for the given merchant the answer is 2."}, {"role": "assistant", "content": "*1800"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The Smart Beaver from ABBYY has a lot of hobbies. One of them is constructing efficient hash tables. One of the most serious problems in hash tables is resolving collisions. The Beaver is interested in this problem very much and he decided to explore it in detail.\n\nWe assume that the hash table consists of h cells numbered from 0 to h\u2009-\u20091. Objects are added to and removed from it. Every object has its own unique identifier. In addition, every object has a corresponding hash value \u2014 an integer between 0 and h\u2009-\u20091, inclusive. When an object is added to the table, if the cell corresponding to the hash value of the object is free, then this object goes there. If the cell is already occupied by another object, there is a collision. When an object is deleted from the table, the cell which it occupied becomes empty.\n\nThe Smart Beaver has recently learned about the method of linear probing to resolve collisions. It is as follows. Let's say that the hash value for the added object equals t and cell t of the table is already occupied. Then we try to add this object to cell (t\u2009+\u2009m)\u00a0mod\u00a0h. If it is also occupied, then we try cell (t\u2009+\u20092\u00b7m)\u00a0mod\u00a0h, then cell (t\u2009+\u20093\u00b7m)\u00a0mod\u00a0h, and so on. Note that in some cases it's possible that the new object can not be added to the table. It is guaranteed that the input for this problem doesn't contain such situations.\n\nThe operation a\u00a0mod\u00a0b means that we take the remainder of the division of number a by number b.\n\nThis technique immediately seemed very inoptimal to the Beaver, and he decided to assess its inefficiency. So, you are given a sequence of operations, each of which is either an addition of an object to the table or a deletion of an object from the table. When adding a new object, a sequence of calls to the table is performed. Calls to occupied cells are called dummy. In other words, if the result of the algorithm described above is the object being added to cell (t\u2009+\u2009i\u00b7m)\u00a0mod\u00a0h (i\u2009\u2265\u20090), then exactly i dummy calls have been performed.\n\nYour task is to calculate the total number of dummy calls to the table for the given sequence of additions and deletions. When an object is deleted from the table, assume that no dummy calls are performed. The table is empty before performing the operations, that is, initially it doesn't contain any objects.\n\nThe first line of input contains three integers h, m and n (1\u2009\u2264\u2009m\u2009<\u2009h), separated by spaces, where h is the size of the hash table, m is the number that is used to resolve collisions, n is the number of operations.\n\nThe following n lines contains the descriptions of the operations. Their execution order corresponds to the order in which they appear in the input file. Each operation is described by a single line. The operations are described as follows:\n\nThis is the format of the operation that adds an object to the table. The first character is \"+\" (ASCII 43), followed by a single space, then the object identifier id (0\u2009\u2264\u2009id\u2009\u2264\u2009109), then another space, and the hash value of the given object hash (0\u2009\u2264\u2009hash\u2009<\u2009h). The object identifier and the hash value of this object are integers.\n\nThis is the format of the operation that deletes an object from the table. The first character is \"-\" (ASCII 45), followed by a single space, then the object identifier id (0\u2009\u2264\u2009id\u2009\u2264\u2009109). The object identifier is an integer.\n\nIt is guaranteed that for all addition operations the value of id is unique. It is also guaranteed that the initial data is correct, that is, it's always possible to add an object to the hash table and there won't be any deletions of nonexisting objects.\n\nThe input limitations for getting 20 points are: \n\nThe input limitations for getting 50 points are: \n\nThe input limitations for getting 100 points are: \n\nPrint a single number \u2014 the total number of dummy calls to the hash table.\n\nPlease, do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use cin, cout streams and the %I64d specifier."}, {"role": "assistant", "content": "*1600"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The Smart Beaver from ABBYY has a lot of hobbies. One of them is constructing efficient hash tables. One of the most serious problems in hash tables is resolving collisions. The Beaver is interested in this problem very much and he decided to explore it in detail.\n\nWe assume that the hash table consists of h cells numbered from 0 to h\u2009-\u20091. Objects are added to and removed from it. Every object has its own unique identifier. In addition, every object has a corresponding hash value \u2014 an integer between 0 and h\u2009-\u20091, inclusive. When an object is added to the table, if the cell corresponding to the hash value of the object is free, then this object goes there. If the cell is already occupied by another object, there is a collision. When an object is deleted from the table, the cell which it occupied becomes empty.\n\nThe Smart Beaver has recently learned about the method of linear probing to resolve collisions. It is as follows. Let's say that the hash value for the added object equals t and cell t of the table is already occupied. Then we try to add this object to cell (t\u2009+\u2009m)\u00a0mod\u00a0h. If it is also occupied, then we try cell (t\u2009+\u20092\u00b7m)\u00a0mod\u00a0h, then cell (t\u2009+\u20093\u00b7m)\u00a0mod\u00a0h, and so on. Note that in some cases it's possible that the new object can not be added to the table. It is guaranteed that the input for this problem doesn't contain such situations.\n\nThe operation a\u00a0mod\u00a0b means that we take the remainder of the division of number a by number b.\n\nThis technique immediately seemed very inoptimal to the Beaver, and he decided to assess its inefficiency. So, you are given a sequence of operations, each of which is either an addition of an object to the table or a deletion of an object from the table. When adding a new object, a sequence of calls to the table is performed. Calls to occupied cells are called dummy. In other words, if the result of the algorithm described above is the object being added to cell (t\u2009+\u2009i\u00b7m)\u00a0mod\u00a0h (i\u2009\u2265\u20090), then exactly i dummy calls have been performed.\n\nYour task is to calculate the total number of dummy calls to the table for the given sequence of additions and deletions. When an object is deleted from the table, assume that no dummy calls are performed. The table is empty before performing the operations, that is, initially it doesn't contain any objects.\n\nThe first line of input contains three integers h, m and n (1\u2009\u2264\u2009m\u2009<\u2009h), separated by spaces, where h is the size of the hash table, m is the number that is used to resolve collisions, n is the number of operations.\n\nThe following n lines contains the descriptions of the operations. Their execution order corresponds to the order in which they appear in the input file. Each operation is described by a single line. The operations are described as follows:\n\nThis is the format of the operation that adds an object to the table. The first character is \"+\" (ASCII 43), followed by a single space, then the object identifier id (0\u2009\u2264\u2009id\u2009\u2264\u2009109), then another space, and the hash value of the given object hash (0\u2009\u2264\u2009hash\u2009<\u2009h). The object identifier and the hash value of this object are integers.\n\nThis is the format of the operation that deletes an object from the table. The first character is \"-\" (ASCII 45), followed by a single space, then the object identifier id (0\u2009\u2264\u2009id\u2009\u2264\u2009109). The object identifier is an integer.\n\nIt is guaranteed that for all addition operations the value of id is unique. It is also guaranteed that the initial data is correct, that is, it's always possible to add an object to the hash table and there won't be any deletions of nonexisting objects.\n\nThe input limitations for getting 20 points are: \n\nThe input limitations for getting 50 points are: \n\nThe input limitations for getting 100 points are: \n\nPrint a single number \u2014 the total number of dummy calls to the hash table.\n\nPlease, do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use cin, cout streams and the %I64d specifier."}, {"role": "assistant", "content": "*1900"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The Smart Beaver from ABBYY has a lot of hobbies. One of them is constructing efficient hash tables. One of the most serious problems in hash tables is resolving collisions. The Beaver is interested in this problem very much and he decided to explore it in detail.\n\nWe assume that the hash table consists of h cells numbered from 0 to h\u2009-\u20091. Objects are added to and removed from it. Every object has its own unique identifier. In addition, every object has a corresponding hash value \u2014 an integer between 0 and h\u2009-\u20091, inclusive. When an object is added to the table, if the cell corresponding to the hash value of the object is free, then this object goes there. If the cell is already occupied by another object, there is a collision. When an object is deleted from the table, the cell which it occupied becomes empty.\n\nThe Smart Beaver has recently learned about the method of linear probing to resolve collisions. It is as follows. Let's say that the hash value for the added object equals t and cell t of the table is already occupied. Then we try to add this object to cell (t\u2009+\u2009m)\u00a0mod\u00a0h. If it is also occupied, then we try cell (t\u2009+\u20092\u00b7m)\u00a0mod\u00a0h, then cell (t\u2009+\u20093\u00b7m)\u00a0mod\u00a0h, and so on. Note that in some cases it's possible that the new object can not be added to the table. It is guaranteed that the input for this problem doesn't contain such situations.\n\nThe operation a\u00a0mod\u00a0b means that we take the remainder of the division of number a by number b.\n\nThis technique immediately seemed very inoptimal to the Beaver, and he decided to assess its inefficiency. So, you are given a sequence of operations, each of which is either an addition of an object to the table or a deletion of an object from the table. When adding a new object, a sequence of calls to the table is performed. Calls to occupied cells are called dummy. In other words, if the result of the algorithm described above is the object being added to cell (t\u2009+\u2009i\u00b7m)\u00a0mod\u00a0h (i\u2009\u2265\u20090), then exactly i dummy calls have been performed.\n\nYour task is to calculate the total number of dummy calls to the table for the given sequence of additions and deletions. When an object is deleted from the table, assume that no dummy calls are performed. The table is empty before performing the operations, that is, initially it doesn't contain any objects.\n\nThe first line of input contains three integers h, m and n (1\u2009\u2264\u2009m\u2009<\u2009h), separated by spaces, where h is the size of the hash table, m is the number that is used to resolve collisions, n is the number of operations.\n\nThe following n lines contains the descriptions of the operations. Their execution order corresponds to the order in which they appear in the input file. Each operation is described by a single line. The operations are described as follows:\n\nThis is the format of the operation that adds an object to the table. The first character is \"+\" (ASCII 43), followed by a single space, then the object identifier id (0\u2009\u2264\u2009id\u2009\u2264\u2009109), then another space, and the hash value of the given object hash (0\u2009\u2264\u2009hash\u2009<\u2009h). The object identifier and the hash value of this object are integers.\n\nThis is the format of the operation that deletes an object from the table. The first character is \"-\" (ASCII 45), followed by a single space, then the object identifier id (0\u2009\u2264\u2009id\u2009\u2264\u2009109). The object identifier is an integer.\n\nIt is guaranteed that for all addition operations the value of id is unique. It is also guaranteed that the initial data is correct, that is, it's always possible to add an object to the hash table and there won't be any deletions of nonexisting objects.\n\nThe input limitations for getting 20 points are: \n\nThe input limitations for getting 50 points are: \n\nThe input limitations for getting 100 points are: \n\nPrint a single number \u2014 the total number of dummy calls to the hash table.\n\nPlease, do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use cin, cout streams and the %I64d specifier."}, {"role": "assistant", "content": "*2000"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The Smart Beaver from ABBYY loves puzzles. One of his favorite puzzles is the magic square. He has recently had an idea to automate the solution of this puzzle. The Beaver decided to offer this challenge to the ABBYY Cup contestants.\n\nThe magic square is a matrix of size n\u2009\u00d7\u2009n. The elements of this matrix are integers. The sum of numbers in each row of the matrix is equal to some number s. The sum of numbers in each column of the matrix is also equal to s. In addition, the sum of the elements on the main diagonal is equal to s and the sum of elements on the secondary diagonal is equal to s. Examples of magic squares are given in the following figure:\n\nYou are given a set of n2 integers ai. It is required to place these numbers into a square matrix of size n\u2009\u00d7\u2009n so that they form a magic square. Note that each number must occur in the matrix exactly the same number of times as it occurs in the original set.\n\nIt is guaranteed that a solution exists!\n\nThe first input line contains a single integer n. The next line contains n2 integers ai (\u2009-\u2009108\u2009\u2264\u2009ai\u2009\u2264\u2009108), separated by single spaces.\n\nThe input limitations for getting 20 points are: \n\nThe input limitations for getting 50 points are: \n\nThe input limitations for getting 100 points are: \n\nThe first line of the output should contain a single integer s. In each of the following n lines print n integers, separated by spaces and describing the resulting magic square. In the resulting magic square the sums in the rows, columns and diagonals must be equal to s. If there are multiple solutions, you are allowed to print any of them."}, {"role": "assistant", "content": "*1500"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The Smart Beaver from ABBYY loves puzzles. One of his favorite puzzles is the magic square. He has recently had an idea to automate the solution of this puzzle. The Beaver decided to offer this challenge to the ABBYY Cup contestants.\n\nThe magic square is a matrix of size n\u2009\u00d7\u2009n. The elements of this matrix are integers. The sum of numbers in each row of the matrix is equal to some number s. The sum of numbers in each column of the matrix is also equal to s. In addition, the sum of the elements on the main diagonal is equal to s and the sum of elements on the secondary diagonal is equal to s. Examples of magic squares are given in the following figure:\n\nYou are given a set of n2 integers ai. It is required to place these numbers into a square matrix of size n\u2009\u00d7\u2009n so that they form a magic square. Note that each number must occur in the matrix exactly the same number of times as it occurs in the original set.\n\nIt is guaranteed that a solution exists!\n\nThe first input line contains a single integer n. The next line contains n2 integers ai (\u2009-\u2009108\u2009\u2264\u2009ai\u2009\u2264\u2009108), separated by single spaces.\n\nThe input limitations for getting 20 points are: \n\nThe input limitations for getting 50 points are: \n\nThe input limitations for getting 100 points are: \n\nThe first line of the output should contain a single integer s. In each of the following n lines print n integers, separated by spaces and describing the resulting magic square. In the resulting magic square the sums in the rows, columns and diagonals must be equal to s. If there are multiple solutions, you are allowed to print any of them."}, {"role": "assistant", "content": "*1900"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The Smart Beaver from ABBYY loves puzzles. One of his favorite puzzles is the magic square. He has recently had an idea to automate the solution of this puzzle. The Beaver decided to offer this challenge to the ABBYY Cup contestants.\n\nThe magic square is a matrix of size n\u2009\u00d7\u2009n. The elements of this matrix are integers. The sum of numbers in each row of the matrix is equal to some number s. The sum of numbers in each column of the matrix is also equal to s. In addition, the sum of the elements on the main diagonal is equal to s and the sum of elements on the secondary diagonal is equal to s. Examples of magic squares are given in the following figure:\n\nYou are given a set of n2 integers ai. It is required to place these numbers into a square matrix of size n\u2009\u00d7\u2009n so that they form a magic square. Note that each number must occur in the matrix exactly the same number of times as it occurs in the original set.\n\nIt is guaranteed that a solution exists!\n\nThe first input line contains a single integer n. The next line contains n2 integers ai (\u2009-\u2009108\u2009\u2264\u2009ai\u2009\u2264\u2009108), separated by single spaces.\n\nThe input limitations for getting 20 points are: \n\nThe input limitations for getting 50 points are: \n\nThe input limitations for getting 100 points are: \n\nThe first line of the output should contain a single integer s. In each of the following n lines print n integers, separated by spaces and describing the resulting magic square. In the resulting magic square the sums in the rows, columns and diagonals must be equal to s. If there are multiple solutions, you are allowed to print any of them."}, {"role": "assistant", "content": "*2100"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Offering the ABBYY Cup participants a problem written by the Smart Beaver is becoming a tradition. He proposed the following problem.\n\nYou are given a monochrome image, that is, an image that is composed of two colors (black and white). The image is given in raster form, that is, as a matrix of pixels' colors, and the matrix's size coincides with the size of the image.\n\nThe white color on the given image corresponds to the background. Also, the image contains several black geometric shapes. It is known that the image can contain only two types of shapes: squares and circles. Your task is to count the number of circles and the number of squares which the given image contains.\n\nThe squares on the image can be rotated arbitrarily. In addition, the image can possibly contain some noise arranged as follows: each pixel of the original image can change its color to the opposite with the probability of 20%.\n\nThe first input line contains a single integer n (1000\u2009\u2264\u2009n\u2009\u2264\u20092000), which is the length and the width of the original image. \n\nNext n lines describe the matrix of colors of the image pixels. The i-th line contains exactly n integers aij (0\u2009\u2264\u2009aij\u2009\u2264\u20091), separated by spaces. Value of aij\u2009=\u20090 corresponds to a white pixel and aij\u2009=\u20091 corresponds to a black one. \n\nIt is guaranteed that the lengths of the sides of the squares and the diameters of the circles in the image are at least 15 pixels, and the distance between any two figures is at least 10 pixels. It is also guaranteed that a human can easily calculate the number of circles and squares in the original image. The total number of figures in the image doesn't exceed 50.\n\nThe input limitations for getting 20 points are: \n\nThe input limitations for getting 50 points are: \n\nThe input limitations for getting 100 points are: \n\nPrint exactly two integers, separated by a single space \u2014 the number of circles and the number of squares in the given image, correspondingly.\n\nYou are given a sample of original data for each difficulty level. The samples are available at http://codeforces.ru/static/materials/contests/178/e-samples.zip ."}, {"role": "assistant", "content": "*1900"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Offering the ABBYY Cup participants a problem written by the Smart Beaver is becoming a tradition. He proposed the following problem.\n\nYou are given a monochrome image, that is, an image that is composed of two colors (black and white). The image is given in raster form, that is, as a matrix of pixels' colors, and the matrix's size coincides with the size of the image.\n\nThe white color on the given image corresponds to the background. Also, the image contains several black geometric shapes. It is known that the image can contain only two types of shapes: squares and circles. Your task is to count the number of circles and the number of squares which the given image contains.\n\nThe squares on the image can be rotated arbitrarily. In addition, the image can possibly contain some noise arranged as follows: each pixel of the original image can change its color to the opposite with the probability of 20%.\n\nThe first input line contains a single integer n (1000\u2009\u2264\u2009n\u2009\u2264\u20092000), which is the length and the width of the original image. \n\nNext n lines describe the matrix of colors of the image pixels. The i-th line contains exactly n integers aij (0\u2009\u2264\u2009aij\u2009\u2264\u20091), separated by spaces. Value of aij\u2009=\u20090 corresponds to a white pixel and aij\u2009=\u20091 corresponds to a black one. \n\nIt is guaranteed that the lengths of the sides of the squares and the diameters of the circles in the image are at least 15 pixels, and the distance between any two figures is at least 10 pixels. It is also guaranteed that a human can easily calculate the number of circles and squares in the original image. The total number of figures in the image doesn't exceed 50.\n\nThe input limitations for getting 20 points are: \n\nThe input limitations for getting 50 points are: \n\nThe input limitations for getting 100 points are: \n\nPrint exactly two integers, separated by a single space \u2014 the number of circles and the number of squares in the given image, correspondingly.\n\nYou are given a sample of original data for each difficulty level. The samples are available at http://codeforces.ru/static/materials/contests/178/e-samples.zip ."}, {"role": "assistant", "content": "*2000"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Offering the ABBYY Cup participants a problem written by the Smart Beaver is becoming a tradition. He proposed the following problem.\n\nYou are given a monochrome image, that is, an image that is composed of two colors (black and white). The image is given in raster form, that is, as a matrix of pixels' colors, and the matrix's size coincides with the size of the image.\n\nThe white color on the given image corresponds to the background. Also, the image contains several black geometric shapes. It is known that the image can contain only two types of shapes: squares and circles. Your task is to count the number of circles and the number of squares which the given image contains.\n\nThe squares on the image can be rotated arbitrarily. In addition, the image can possibly contain some noise arranged as follows: each pixel of the original image can change its color to the opposite with the probability of 20%.\n\nThe first input line contains a single integer n (1000\u2009\u2264\u2009n\u2009\u2264\u20092000), which is the length and the width of the original image. \n\nNext n lines describe the matrix of colors of the image pixels. The i-th line contains exactly n integers aij (0\u2009\u2264\u2009aij\u2009\u2264\u20091), separated by spaces. Value of aij\u2009=\u20090 corresponds to a white pixel and aij\u2009=\u20091 corresponds to a black one. \n\nIt is guaranteed that the lengths of the sides of the squares and the diameters of the circles in the image are at least 15 pixels, and the distance between any two figures is at least 10 pixels. It is also guaranteed that a human can easily calculate the number of circles and squares in the original image. The total number of figures in the image doesn't exceed 50.\n\nThe input limitations for getting 20 points are: \n\nThe input limitations for getting 50 points are: \n\nThe input limitations for getting 100 points are: \n\nPrint exactly two integers, separated by a single space \u2014 the number of circles and the number of squares in the given image, correspondingly.\n\nYou are given a sample of original data for each difficulty level. The samples are available at http://codeforces.ru/static/materials/contests/178/e-samples.zip ."}, {"role": "assistant", "content": "*2300"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The Smart Beaver from ABBYY has a long history of cooperating with the \"Institute of Cytology and Genetics\". Recently, the Institute staff challenged the Beaver with a new problem. The problem is as follows.\n\nThere is a collection of n proteins (not necessarily distinct). Each protein is a string consisting of lowercase Latin letters. The problem that the scientists offered to the Beaver is to select a subcollection of size k from the initial collection of proteins so that the representativity of the selected subset of proteins is maximum possible.\n\nThe Smart Beaver from ABBYY did some research and came to the conclusion that the representativity of a collection of proteins can be evaluated by a single number, which is simply calculated. Let's suppose we have a collection {a1,\u2009...,\u2009ak} consisting of k strings describing proteins. The representativity of this collection is the following value:\n\nwhere f(x,\u2009y) is the length of the longest common prefix of strings x and y; for example, f(\"abc\", \"abd\")\u2009=\u20092, and f(\"ab\", \"bcd\")\u2009=\u20090.\n\nThus, the representativity of collection of proteins {\"abc\", \"abd\", \"abe\"} equals 6, and the representativity of collection {\"aaa\", \"ba\", \"ba\"} equals 2.\n\nHaving discovered that, the Smart Beaver from ABBYY asked the Cup contestants to write a program that selects, from the given collection of proteins, a subcollection of size k which has the largest possible value of representativity. Help him to solve this problem!\n\nThe first input line contains two integers n and k (1\u2009\u2264\u2009k\u2009\u2264\u2009n), separated by a single space. The following n lines contain the descriptions of proteins, one per line. Each protein is a non-empty string of no more than 500 characters consisting of only lowercase Latin letters (a...z). Some of the strings may be equal.\n\nThe input limitations for getting 20 points are: \n\nThe input limitations for getting 50 points are: \n\nThe input limitations for getting 100 points are: \n\nPrint a single number denoting the largest possible value of representativity that a subcollection of size k of the given collection of proteins can have."}, {"role": "assistant", "content": "*1800"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The Smart Beaver from ABBYY has a long history of cooperating with the \"Institute of Cytology and Genetics\". Recently, the Institute staff challenged the Beaver with a new problem. The problem is as follows.\n\nThere is a collection of n proteins (not necessarily distinct). Each protein is a string consisting of lowercase Latin letters. The problem that the scientists offered to the Beaver is to select a subcollection of size k from the initial collection of proteins so that the representativity of the selected subset of proteins is maximum possible.\n\nThe Smart Beaver from ABBYY did some research and came to the conclusion that the representativity of a collection of proteins can be evaluated by a single number, which is simply calculated. Let's suppose we have a collection {a1,\u2009...,\u2009ak} consisting of k strings describing proteins. The representativity of this collection is the following value:\n\nwhere f(x,\u2009y) is the length of the longest common prefix of strings x and y; for example, f(\"abc\", \"abd\")\u2009=\u20092, and f(\"ab\", \"bcd\")\u2009=\u20090.\n\nThus, the representativity of collection of proteins {\"abc\", \"abd\", \"abe\"} equals 6, and the representativity of collection {\"aaa\", \"ba\", \"ba\"} equals 2.\n\nHaving discovered that, the Smart Beaver from ABBYY asked the Cup contestants to write a program that selects, from the given collection of proteins, a subcollection of size k which has the largest possible value of representativity. Help him to solve this problem!\n\nThe first input line contains two integers n and k (1\u2009\u2264\u2009k\u2009\u2264\u2009n), separated by a single space. The following n lines contain the descriptions of proteins, one per line. Each protein is a non-empty string of no more than 500 characters consisting of only lowercase Latin letters (a...z). Some of the strings may be equal.\n\nThe input limitations for getting 20 points are: \n\nThe input limitations for getting 50 points are: \n\nThe input limitations for getting 100 points are: \n\nPrint a single number denoting the largest possible value of representativity that a subcollection of size k of the given collection of proteins can have."}, {"role": "assistant", "content": "dp, sortings, strings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The Smart Beaver from ABBYY has a long history of cooperating with the \"Institute of Cytology and Genetics\". Recently, the Institute staff challenged the Beaver with a new problem. The problem is as follows.\n\nThere is a collection of n proteins (not necessarily distinct). Each protein is a string consisting of lowercase Latin letters. The problem that the scientists offered to the Beaver is to select a subcollection of size k from the initial collection of proteins so that the representativity of the selected subset of proteins is maximum possible.\n\nThe Smart Beaver from ABBYY did some research and came to the conclusion that the representativity of a collection of proteins can be evaluated by a single number, which is simply calculated. Let's suppose we have a collection {a1,\u2009...,\u2009ak} consisting of k strings describing proteins. The representativity of this collection is the following value:\n\nwhere f(x,\u2009y) is the length of the longest common prefix of strings x and y; for example, f(\"abc\", \"abd\")\u2009=\u20092, and f(\"ab\", \"bcd\")\u2009=\u20090.\n\nThus, the representativity of collection of proteins {\"abc\", \"abd\", \"abe\"} equals 6, and the representativity of collection {\"aaa\", \"ba\", \"ba\"} equals 2.\n\nHaving discovered that, the Smart Beaver from ABBYY asked the Cup contestants to write a program that selects, from the given collection of proteins, a subcollection of size k which has the largest possible value of representativity. Help him to solve this problem!\n\nThe first input line contains two integers n and k (1\u2009\u2264\u2009k\u2009\u2264\u2009n), separated by a single space. The following n lines contain the descriptions of proteins, one per line. Each protein is a non-empty string of no more than 500 characters consisting of only lowercase Latin letters (a...z). Some of the strings may be equal.\n\nThe input limitations for getting 20 points are: \n\nThe input limitations for getting 50 points are: \n\nThe input limitations for getting 100 points are: \n\nPrint a single number denoting the largest possible value of representativity that a subcollection of size k of the given collection of proteins can have."}, {"role": "assistant", "content": "*2500"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "At a geometry lesson Bob learnt that a triangle is called right-angled if it is nondegenerate and one of its angles is right. Bob decided to draw such a triangle immediately: on a sheet of paper he drew three points with integer coordinates, and joined them with segments of straight lines, then he showed the triangle to Peter. Peter said that Bob's triangle is not right-angled, but is almost right-angled: the triangle itself is not right-angled, but it is possible to move one of the points exactly by distance 1 so, that all the coordinates remain integer, and the triangle become right-angled. Bob asks you to help him and find out if Peter tricks him. By the given coordinates of the triangle you should find out if it is right-angled, almost right-angled, or neither of these.\n\nThe first input line contains 6 space-separated integers x1,\u2009y1,\u2009x2,\u2009y2,\u2009x3,\u2009y3 \u2014 coordinates of the triangle's vertices. All the coordinates are integer and don't exceed 100 in absolute value. It's guaranteed that the triangle is nondegenerate, i.e. its total area is not zero.\n\nIf the given triangle is right-angled, output RIGHT, if it is almost right-angled, output ALMOST, and if it is neither of these, output NEITHER."}, {"role": "assistant", "content": "bruteforce, geometry"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "In one one-dimensional world there are n platforms. Platform with index k (platforms are numbered from 1) is a segment with coordinates [(k\u2009-\u20091)m,\u2009(k\u2009-\u20091)m\u2009+\u2009l], and l\u2009<\u2009m. Grasshopper Bob starts to jump along the platforms from point 0, with each jump he moves exactly d units right. Find out the coordinate of the point, where Bob will fall down. The grasshopper falls down, if he finds himself not on the platform, but if he finds himself on the edge of the platform, he doesn't fall down.\n\nThe first input line contains 4 integer numbers n, d, m, l (1\u2009\u2264\u2009n,\u2009d,\u2009m,\u2009l\u2009\u2264\u2009106,\u2009l\u2009<\u2009m) \u2014 respectively: amount of platforms, length of the grasshopper Bob's jump, and numbers m and l needed to find coordinates of the k-th platform: [(k\u2009-\u20091)m,\u2009(k\u2009-\u20091)m\u2009+\u2009l].\n\nOutput the coordinates of the point, where the grosshopper will fall down. Don't forget that if Bob finds himself on the platform edge, he doesn't fall down."}, {"role": "assistant", "content": "bruteforce, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Once Bob took a paper stripe of n squares (the height of the stripe is 1 square). In each square he wrote an integer number, possibly negative. He became interested in how many ways exist to cut this stripe into two pieces so that the sum of numbers from one piece is equal to the sum of numbers from the other piece, and each piece contains positive integer amount of squares. Would you help Bob solve this problem?\n\nThe first input line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105) \u2014 amount of squares in the stripe. The second line contains n space-separated numbers \u2014 they are the numbers written in the squares of the stripe. These numbers are integer and do not exceed 10000 in absolute value.\n\nOutput the amount of ways to cut the stripe into two non-empty pieces so that the sum of numbers from one piece is equal to the sum of numbers from the other piece. Don't forget that it's allowed to cut the stripe along the squares' borders only."}, {"role": "assistant", "content": "datastructures, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Last year Bob earned by selling memory sticks. During each of n days of his work one of the two following events took place: \n\nBob never kept more than one memory stick, as he feared to mix up their capacities, and deceive a customer unintentionally. It is also known that for each memory stick capacity there was at most one customer, who wanted to buy that memory stick. Now, knowing all the customers' demands and all the prizes won at programming competitions during the last n days, Bob wants to know, how much money he could have earned, if he had acted optimally.\n\nThe first input line contains number n (1\u2009\u2264\u2009n\u2009\u2264\u20095000) \u2014 amount of Bob's working days. The following n lines contain the description of the days. Line sell x stands for a day when a customer came to Bob to buy a 2x MB memory stick (0\u2009\u2264\u2009x\u2009\u2264\u20092000). It's guaranteed that for each x there is not more than one line sell x. Line win x stands for a day when Bob won a 2x MB memory stick (0\u2009\u2264\u2009x\u2009\u2264\u20092000).\n\nOutput the maximum possible earnings for Bob in berllars, that he would have had if he had known all the events beforehand. Don't forget, please, that Bob can't keep more than one memory stick at a time."}, {"role": "assistant", "content": "bruteforce, dp, greedy"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "According to a new ISO standard, a flag of every country should have, strangely enough, a chequered field n\u2009\u00d7\u2009m, each square should be wholly painted one of 26 colours. The following restrictions are set: \n\nPay attention, please, that in one column more than two different colours can be used.\n\nBerland's government took a decision to introduce changes into their country's flag in accordance with the new standard, at the same time they want these changes to be minimal. By the given description of Berland's flag you should find out the minimum amount of squares that need to be painted different colour to make the flag meet the new ISO standard. You are as well to build one of the possible variants of the new Berland's flag.\n\nThe first input line contains 2 integers n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009500) \u2014 amount of rows and columns in Berland's flag respectively. Then there follows the flag's description: each of the following n lines contains m characters. Each character is a letter from a to z, and it stands for the colour of the corresponding square.\n\nIn the first line output the minimum amount of squares that need to be repainted to make the flag meet the new ISO standard. The following n lines should contain one of the possible variants of the new flag. Don't forget that the variant of the flag, proposed by you, should be derived from the old flag with the minimum amount of repainted squares. If the answer isn't unique, output any."}, {"role": "assistant", "content": "dp"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "In this problem you have to implement an algorithm to defragment your hard disk. The hard disk consists of a sequence of clusters, numbered by integers from 1 to n. The disk has m recorded files, the i-th file occupies clusters with numbers ai,\u20091, ai,\u20092, ..., ai,\u2009ni. These clusters are not necessarily located consecutively on the disk, but the order in which they are given corresponds to their sequence in the file (cluster ai,\u20091 contains the first fragment of the i-th file, cluster ai,\u20092 has the second fragment, etc.). Also the disc must have one or several clusters which are free from files.\n\nYou are permitted to perform operations of copying the contents of cluster number i to cluster number j (i and j must be different). Moreover, if the cluster number j used to keep some information, it is lost forever. Clusters are not cleaned, but after the defragmentation is complete, some of them are simply declared unusable (although they may possibly still contain some fragments of files).\n\nYour task is to use a sequence of copy operations to ensure that each file occupies a contiguous area of memory. Each file should occupy a consecutive cluster section, the files must follow one after another from the beginning of the hard disk. After defragmentation all free (unused) clusters should be at the end of the hard disk. After defragmenting files can be placed in an arbitrary order. Clusters of each file should go consecutively from first to last. See explanatory examples in the notes.\n\nPrint the sequence of operations leading to the disk defragmentation. Note that you do not have to minimize the number of operations, but it should not exceed 2n.\n\nThe first line contains two integers n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009200) \u2014 the number of clusters and the number of files, correspondingly. Next m lines contain descriptions of the files. The first number in the line is ni (ni\u2009\u2265\u20091), the number of clusters occupied by the i-th file. Then follow ni numbers ai,\u20091, ai,\u20092, ..., ai,\u2009ni (1\u2009\u2264\u2009ai,\u2009j\u2009\u2264\u2009n). It is guaranteed that each cluster number occurs not more than once and , that is, there exists at least one unused cluster. Numbers on each line are separated by spaces. \n\nIn the first line print a single integer k (0\u2009\u2264\u2009k\u2009\u2264\u20092n) \u2014 the number of operations needed to defragment the disk. Next k lines should contain the operations' descriptions as \"i j\" (copy the contents of the cluster number i to the cluster number j). \n\nLet's say that a disk consists of 8 clusters and contains two files. The first file occupies two clusters and the second file occupies three clusters. Let's look at examples of correct and incorrect positions of files after defragmentation. \n\nExample 2: each file must occupy a contiguous area of memory.\n\nExample 3: the order of files to each other is not important, at first the second file can be written, and then \u2014 the first one.\n\nExample 4: violating the order of file fragments to each other is not allowed.\n\nExample 5: unused clusters should be located at the end, and in this example the unused clusters are 3, 7, 8."}, {"role": "assistant", "content": "implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Vasya studies divisibility rules at school. Here are some of them:\n\nVasya got interested by the fact that some divisibility rules resemble each other. In fact, to check a number's divisibility by 2, 4, 5, 8 and 10 it is enough to check fulfiling some condition for one or several last digits. Vasya calls such rules the 2-type rules.\n\nIf checking divisibility means finding a sum of digits and checking whether the sum is divisible by the given number, then Vasya calls this rule the 3-type rule (because it works for numbers 3 and 9).\n\nIf we need to find the difference between the sum of digits on odd and even positions and check whether the difference is divisible by the given divisor, this rule is called the 11-type rule (it works for number 11).\n\nIn some cases we should divide the divisor into several factors and check whether rules of different types (2-type, 3-type or 11-type) work there. For example, for number 6 we check 2-type and 3-type rules, for number 66 we check all three types. Such mixed divisibility rules are called 6-type rules. \n\nAnd finally, there are some numbers for which no rule works: neither 2-type, nor 3-type, nor 11-type, nor 6-type. The least such number is number 7, so we'll say that in such cases the mysterious 7-type rule works, the one that Vasya hasn't discovered yet. \n\nVasya's dream is finding divisibility rules for all possible numbers. He isn't going to stop on the decimal numbers only. As there are quite many numbers, ha can't do it all by himself. Vasya asked you to write a program that determines the divisibility rule type in the b-based notation for the given divisor d.\n\nThe first input line contains two integers b and d (2\u2009\u2264\u2009b,\u2009d\u2009\u2264\u2009100) \u2014 the notation system base and the divisor. Both numbers are given in the decimal notation.\n\nOn the first output line print the type of the rule in the b-based notation system, where the divisor is d: \"2-type\", \"3-type\", \"11-type\", \"6-type\" or \"7-type\". If there are several such types, print the one that goes earlier in the given sequence. If a number belongs to the 2-type, print on the second line the least number of the last b-based digits that we will need to use to check the divisibility.\n\nThe divisibility rule for number 3 in binary notation looks as follows: \"A number is divisible by 3 if and only if the sum of its digits that occupy the even places differs from the sum of digits that occupy the odd places, in a number that is divisible by 3\". That's an 11-type rule. For example, 2110\u2009=\u2009101012. For it the sum of digits on odd positions equals 1\u2009+\u20091\u2009+\u20091\u2009=\u20093, an on even positions \u2014 0\u2009+\u20090\u2009=\u20090. The rule works and the number is divisible by 3. \n\nIn some notations a number can fit into the 3-type rule and the 11-type rule. In this case the correct answer is \"3-type\"."}, {"role": "assistant", "content": "math, numbertheory"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Patrick has just finished writing a message to his sweetheart Stacey when he noticed that the message didn't look fancy. Patrick was nervous while writing the message, so some of the letters there were lowercase and some of them were uppercase.\n\nPatrick believes that a message is fancy if any uppercase letter stands to the left of any lowercase one. In other words, this rule describes the strings where first go zero or more uppercase letters, and then \u2014 zero or more lowercase letters.\n\nTo make the message fancy, Patrick can erase some letter and add the same letter in the same place in the opposite case (that is, he can replace an uppercase letter with the lowercase one and vice versa). Patrick got interested in the following question: what minimum number of actions do we need to make a message fancy? Changing a letter's case in the message counts as one action. Patrick cannot perform any other actions.\n\nThe only line of the input contains a non-empty string consisting of uppercase and lowercase letters. The string's length does not exceed 105.\n\nPrint a single number \u2014 the least number of actions needed to make the message fancy."}, {"role": "assistant", "content": "dp"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Everything got unclear to us in a far away constellation Tau Ceti. Specifically, the Taucetians choose names to their children in a very peculiar manner.\n\nTwo young parents abac and bbad think what name to give to their first-born child. They decided that the name will be the permutation of letters of string s. To keep up with the neighbours, they decided to call the baby so that the name was lexicographically strictly larger than the neighbour's son's name t.\n\nOn the other hand, they suspect that a name tax will be introduced shortly. According to it, the Taucetians with lexicographically larger names will pay larger taxes. That's the reason abac and bbad want to call the newborn so that the name was lexicographically strictly larger than name t and lexicographically minimum at that.\n\nThe lexicographical order of strings is the order we are all used to, the \"dictionary\" order. Such comparison is used in all modern programming languages to compare strings. Formally, a string p of length n is lexicographically less than string q of length m, if one of the two statements is correct:\n\nWrite a program that, given string s and the heighbours' child's name t determines the string that is the result of permutation of letters in s. The string should be lexicographically strictly more than t and also, lexicographically minimum.\n\nThe first line contains a non-empty string s (1\u2009\u2264\u2009|s|\u2009\u2264\u20095000), where |s| is its length. The second line contains a non-empty string t (1\u2009\u2264\u2009|t|\u2009\u2264\u20095000), where |t| is its length. Both strings consist of lowercase Latin letters.\n\nPrint the sought name or -1 if it doesn't exist.\n\nIn the first sample the given string s is the sought one, consequently, we do not need to change the letter order there."}, {"role": "assistant", "content": "greedy, strings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Let's imagine that you're playing the following simple computer game. The screen displays n lined-up cubes. Each cube is painted one of m colors. You are allowed to delete not more than k cubes (that do not necessarily go one after another). After that, the remaining cubes join together (so that the gaps are closed) and the system counts the score. The number of points you score equals to the length of the maximum sequence of cubes of the same color that follow consecutively. Write a program that determines the maximum possible number of points you can score.\n\nRemember, you may delete no more than k any cubes. It is allowed not to delete cubes at all.\n\nThe first line contains three integers n, m and k (1\u2009\u2264\u2009n\u2009\u2264\u20092\u00b7105,\u20091\u2009\u2264\u2009m\u2009\u2264\u2009105,\u20090\u2009\u2264\u2009k\u2009<\u2009n). The second line contains n integers from 1 to m \u2014 the numbers of cube colors. The numbers of colors are separated by single spaces.\n\nPrint the maximum possible number of points you can score.\n\nIn the first sample you should delete the fifth and the sixth cubes.\n\nIn the second sample you should delete the fourth and the seventh cubes.\n\nIn the third sample you shouldn't delete any cubes."}, {"role": "assistant", "content": "binarysearch, dp, twopointers"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Students of group 199 have written their lectures dismally. Now an exam on Mathematical Analysis is approaching and something has to be done asap (that is, quickly). Let's number the students of the group from 1 to n. Each student i (1\u2009\u2264\u2009i\u2009\u2264\u2009n) has a best friend p[i] (1\u2009\u2264\u2009p[i]\u2009\u2264\u2009n). In fact, each student is a best friend of exactly one student. In other words, all p[i] are different. It is possible that the group also has some really \"special individuals\" for who i\u2009=\u2009p[i].\n\nEach student wrote exactly one notebook of lecture notes. We know that the students agreed to act by the following algorithm: \n\nThus, on the second day the student p[i] (1\u2009\u2264\u2009i\u2009\u2264\u2009n) studies the i-th student's notes, on the third day the notes go to student p[p[i]] and so on. Due to some characteristics of the boys' friendship (see paragraph 1), each day each student has exactly one notebook to study.\n\nYou are given two sequences that describe the situation on the third and fourth days of revising:\n\nYou do not know array p, that is you do not know who is the best friend to who. Write a program that finds p by the given sequences a and b.\n\nThe first line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105) \u2014 the number of students in the group. The second line contains sequence of different integers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009n). The third line contains the sequence of different integers b1,\u2009b2,\u2009...,\u2009bn (1\u2009\u2264\u2009bi\u2009\u2264\u2009n).\n\nPrint sequence n of different integers p[1],\u2009p[2],\u2009...,\u2009p[n] (1\u2009\u2264\u2009p[i]\u2009\u2264\u2009n). It is guaranteed that the solution exists and that it is unique."}, {"role": "assistant", "content": "constructivealgorithms, implementation, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The Berland capital is shaken with three bold crimes committed by the Pihsters, a notorious criminal gang.\n\nThe Berland capital's map is represented by an n\u2009\u00d7\u2009m rectangular table. Each cell of the table on the map represents some districts of the capital. \n\nThe capital's main detective Polycarpus took a map and marked there the districts where the first three robberies had been committed as asterisks. Deduction tells Polycarpus that the fourth robbery will be committed in such district, that all four robbed districts will form the vertices of some rectangle, parallel to the sides of the map. \n\nPolycarpus is good at deduction but he's hopeless at math. So he asked you to find the district where the fourth robbery will be committed.\n\nThe first line contains two space-separated integers n and m (2\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009100) \u2014 the number of rows and columns in the table, correspondingly.\n\nEach of the next n lines contains m characters \u2014 the description of the capital's map. Each character can either be a \".\" (dot), or an \"*\" (asterisk). A character equals \"*\" if the corresponding district has been robbed. Otherwise, it equals \".\".\n\nIt is guaranteed that the map has exactly three characters \"*\" and we can always find the fourth district that meets the problem requirements. \n\nPrint two integers \u2014 the number of the row and the number of the column of the city district that is the fourth one to be robbed. The rows are numbered starting from one from top to bottom and the columns are numbered starting from one from left to right."}, {"role": "assistant", "content": "bruteforce, geometry, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given n points on a plane. All points are different.\n\nFind the number of different groups of three points (A,\u2009B,\u2009C) such that point B is the middle of segment AC. \n\nThe groups of three points are considered unordered, that is, if point B is the middle of segment AC, then groups (A,\u2009B,\u2009C) and (C,\u2009B,\u2009A) are considered the same.\n\nThe first line contains a single integer n (3\u2009\u2264\u2009n\u2009\u2264\u20093000) \u2014 the number of points. \n\nNext n lines contain the points. The i-th line contains coordinates of the i-th point: two space-separated integers xi,\u2009yi (\u2009-\u20091000\u2009\u2264\u2009xi,\u2009yi\u2009\u2264\u20091000).\n\nIt is guaranteed that all given points are different.\n\nPrint the single number \u2014 the answer to the problem. "}, {"role": "assistant", "content": "binarysearch, bruteforce"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "To get money for a new aeonic blaster, ranger Qwerty decided to engage in trade for a while. He wants to buy some number of items (or probably not to buy anything at all) on one of the planets, and then sell the bought items on another planet. Note that this operation is not repeated, that is, the buying and the selling are made only once. To carry out his plan, Qwerty is going to take a bank loan that covers all expenses and to return the loaned money at the end of the operation (the money is returned without the interest). At the same time, Querty wants to get as much profit as possible.\n\nThe system has n planets in total. On each of them Qwerty can buy or sell items of m types (such as food, medicine, weapons, alcohol, and so on). For each planet i and each type of items j Qwerty knows the following:\n\nIt is not allowed to buy more than cij items of type j on planet i, but it is allowed to sell any number of items of any kind.\n\nKnowing that the hold of Qwerty's ship has room for no more than k items, determine the maximum profit which Qwerty can get.\n\nThe first line contains three space-separated integers n, m and k (2\u2009\u2264\u2009n\u2009\u2264\u200910, 1\u2009\u2264\u2009m,\u2009k\u2009\u2264\u2009100) \u2014 the number of planets, the number of question types and the capacity of Qwerty's ship hold, correspondingly.\n\nThen follow n blocks describing each planet.\n\nThe first line of the i-th block has the planet's name as a string with length from 1 to 10 Latin letters. The first letter of the name is uppercase, the rest are lowercase. Then in the i-th block follow m lines, the j-th of them contains three integers aij, bij and cij (1\u2009\u2264\u2009bij\u2009<\u2009aij\u2009\u2264\u20091000, 0\u2009\u2264\u2009cij\u2009\u2264\u2009100) \u2014 the numbers that describe money operations with the j-th item on the i-th planet. The numbers in the lines are separated by spaces.\n\nIt is guaranteed that the names of all planets are different.\n\nPrint a single number \u2014 the maximum profit Qwerty can get.\n\nIn the first test case you should fly to planet Venus, take a loan on 74 units of money and buy three items of the first type and 7 items of the third type (3\u00b76\u2009+\u20097\u00b78\u2009=\u200974). Then the ranger should fly to planet Earth and sell there all the items he has bought. He gets 3\u00b79\u2009+\u20097\u00b79\u2009=\u200990 units of money for the items, he should give 74 of them for the loan. The resulting profit equals 16 units of money. We cannot get more profit in this case."}, {"role": "assistant", "content": "games, graphmatchings, greedy"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Let's consider one interesting word game. In this game you should transform one word into another through special operations. \n\nLet's say we have word w, let's split this word into two non-empty parts x and y so, that w\u2009=\u2009xy. A split operation is transforming word w\u2009=\u2009xy into word u\u2009=\u2009yx. For example, a split operation can transform word \"wordcut\" into word \"cutword\".\n\nYou are given two words start and end. Count in how many ways we can transform word start into word end, if we apply exactly k split operations consecutively to word start. \n\nTwo ways are considered different if the sequences of applied operations differ. Two operation sequences are different if exists such number i (1\u2009\u2264\u2009i\u2009\u2264\u2009k), that in the i-th operation of the first sequence the word splits into parts x and y, in the i-th operation of the second sequence the word splits into parts a and b, and additionally x\u2009\u2260\u2009a holds.\n\nThe first line contains a non-empty word start, the second line contains a non-empty word end. The words consist of lowercase Latin letters. The number of letters in word start equals the number of letters in word end and is at least 2 and doesn't exceed 1000 letters.\n\nThe third line contains integer k (0\u2009\u2264\u2009k\u2009\u2264\u2009105) \u2014 the required number of operations.\n\nPrint a single number \u2014 the answer to the problem. As this number can be rather large, print it modulo 1000000007 (109\u2009+\u20097).\n\nThe sought way in the first sample is:\n\nab \u2009\u2192\u2009 a|b \u2009\u2192\u2009 ba \u2009\u2192\u2009 b|a \u2009\u2192\u2009 ab\n\nIn the second sample the two sought ways are:"}, {"role": "assistant", "content": "dp"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Two players play a game. The game is played on a rectangular board with n\u2009\u00d7\u2009m squares. At the beginning of the game two different squares of the board have two chips. The first player's goal is to shift the chips to the same square. The second player aims to stop the first one with a tube of superglue.\n\nWe'll describe the rules of the game in more detail.\n\nThe players move in turns. The first player begins.\n\nWith every move the first player chooses one of his unglued chips, and shifts it one square to the left, to the right, up or down. It is not allowed to move a chip beyond the board edge. At the beginning of a turn some squares of the board may be covered with a glue. The first player can move the chip to such square, in this case the chip gets tightly glued and cannot move any longer.\n\nAt each move the second player selects one of the free squares (which do not contain a chip or a glue) and covers it with superglue. The glue dries long and squares covered with it remain sticky up to the end of the game.\n\nIf, after some move of the first player both chips are in the same square, then the first player wins. If the first player cannot make a move (both of his chips are glued), then the second player wins. Note that the situation where the second player cannot make a move is impossible \u2014 he can always spread the glue on the square from which the first player has just moved the chip.\n\nWe will further clarify the case where both chips are glued and are in the same square. In this case the first player wins as the game ends as soon as both chips are in the same square, and the condition of the loss (the inability to move) does not arise.\n\nYou know the board sizes and the positions of the two chips on it. At the beginning of the game all board squares are glue-free. Find out who wins if the players play optimally.\n\nThe first line contains six integers n, m, x1, y1, x2, y2 \u2014 the board sizes and the coordinates of the first and second chips, correspondingly (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009100; 2\u2009\u2264\u2009n\u2009\u00d7\u2009m; 1\u2009\u2264\u2009x1,\u2009x2\u2009\u2264\u2009n; 1\u2009\u2264\u2009y1,\u2009y2\u2009\u2264\u2009m). The numbers in the line are separated by single spaces.\n\nIt is guaranteed that the chips are located in different squares.\n\nIf the first player wins, print \"First\" without the quotes. Otherwise, print \"Second\" without the quotes."}, {"role": "assistant", "content": "games"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Vasya lagged behind at the University and got to the battlefield. Just joking! He's simply playing some computer game. The field is a flat platform with n trenches dug on it. The trenches are segments on a plane parallel to the coordinate axes. No two trenches intersect.\n\nThere is a huge enemy laser far away from Vasya. The laser charges for a seconds, and then shoots continuously for b seconds. Then, it charges for a seconds again. Then it shoots continuously for b seconds again and so on. Vasya knows numbers a and b. He also knows that while the laser is shooting, Vasya must be in the trench, but while the laser is charging, Vasya can safely move around the field. The main thing is to have time to hide in the trench before the shot. If Vasya reaches the trench exactly at the moment when the laser starts shooting, we believe that Vasya managed to hide. Coincidentally, the length of any trench in meters numerically does not exceed b.\n\nInitially, Vasya is at point A. He needs to get to point B. Vasya moves at speed 1 meter per second in either direction. You can get in or out of the trench at any its point. Getting in or out of the trench takes no time. It is also possible to move in the trench, without leaving it.\n\nWhat is the minimum time Vasya needs to get from point A to point B, if at the initial time the laser has just started charging? If Vasya cannot get from point A to point B, print -1. If Vasya reaches point B at the moment when the laser begins to shoot, it is believed that Vasya managed to reach point B.\n\nThe first line contains two space-separated integers: a and b (1\u2009\u2264\u2009a,\u2009b\u2009\u2264\u20091000), \u2014 the duration of charging and the duration of shooting, in seconds.\n\nThe second line contains four space-separated integers: Ax, Ay, Bx, By (\u2009-\u2009104\u2009\u2264\u2009Ax,\u2009Ay,\u2009Bx,\u2009By\u2009\u2264\u2009104) \u2014 the coordinates of points \u0410 and B. It is guaranteed that points A and B do not belong to any trench.\n\nThe third line contains a single integer: n (1\u2009\u2264\u2009n\u2009\u2264\u20091000), \u2014 the number of trenches. \n\nEach of the following n lines contains four space-separated integers: x1, y1, x2, y2 (\u2009-\u2009104\u2009\u2264\u2009xi,\u2009yi\u2009\u2264\u2009104) \u2014 the coordinates of ends of the corresponding trench.\n\nAll coordinates are given in meters. It is guaranteed that for any trench either x1\u2009=\u2009x2, or y1\u2009=\u2009y2. No two trenches intersect. The length of any trench in meters doesn't exceed b numerically.\n\nIf Vasya can get from point A to point B, print the minimum time he will need for it. Otherwise, print number -1.\n\nThe answer will be considered correct if the absolute or relative error does not exceed 10\u2009-\u20094"}, {"role": "assistant", "content": "geometry, graphs, implementation, shortestpaths"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Vasya lives in a strange world. The year has n months and the i-th month has ai days. Vasya got a New Year present \u2014 the clock that shows not only the time, but also the date.\n\nThe clock's face can display any number from 1 to d. It is guaranteed that ai\u2009\u2264\u2009d for all i from 1 to n. The clock does not keep information about the current month, so when a new day comes, it simply increases the current day number by one. The clock cannot display number d\u2009+\u20091, so after day number d it shows day 1 (the current day counter resets). The mechanism of the clock allows you to increase the day number by one manually. When you execute this operation, day d is also followed by day 1.\n\nVasya begins each day checking the day number on the clock. If the day number on the clock does not match the actual day number in the current month, then Vasya manually increases it by one. Vasya is persistent and repeats this operation until the day number on the clock matches the actual number of the current day in the current month.\n\nA year passed and Vasya wonders how many times he manually increased the day number by one, from the first day of the first month to the last day of the n-th month inclusive, considering that on the first day of the first month the clock display showed day 1.\n\nThe first line contains the single number d \u2014 the maximum number of the day that Vasya's clock can show (1\u2009\u2264\u2009d\u2009\u2264\u2009106).\n\nThe second line contains a single integer n \u2014 the number of months in the year (1\u2009\u2264\u2009n\u2009\u2264\u20092000).\n\nThe third line contains n space-separated integers: ai (1\u2009\u2264\u2009ai\u2009\u2264\u2009d) \u2014 the number of days in each month in the order in which they follow, starting from the first one. \n\nPrint a single number \u2014 the number of times Vasya manually increased the day number by one throughout the last year.\n\nIn the first sample the situation is like this: "}, {"role": "assistant", "content": "implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "And here goes another problem on arrays. You are given positive integer len and array a which consists of n integers a1, a2, ..., an. Let's introduce two characteristics for the given array.\n\nYour task is to calculate the optimal sum of the given array a. However, before you do the calculations, you are allowed to produce no more than k consecutive operations of the following form with this array: one operation means taking an arbitrary number from array ai and multiply it by -1. In other words, no more than k times you are allowed to take an arbitrary number ai from the array and replace it with \u2009-\u2009ai. Each number of the array is allowed to choose an arbitrary number of times.\n\nYour task is to calculate the maximum possible optimal sum of the array after at most k operations described above are completed.\n\nThe first line contains two integers n, len (1\u2009\u2264\u2009len\u2009\u2264\u2009n\u2009\u2264\u2009105) \u2014 the number of elements in the array and the length of the chosen subinterval of the array, correspondingly. \n\nThe second line contains a sequence consisting of n integers a1, a2, ..., an (|ai|\u2009\u2264\u2009109) \u2014 the original array. \n\nThe third line contains a single integer k (0\u2009\u2264\u2009k\u2009\u2264\u2009n) \u2014 the maximum allowed number of operations. \n\nAll numbers in lines are separated by a single space.\n\nIn a single line print the maximum possible optimal sum after no more than k acceptable operations are fulfilled. \n\nPlease do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use cin, cout streams or the %I64d specifier."}, {"role": "assistant", "content": "datastructures, greedy"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Vasya has recently learned at school what a number's divisor is and decided to determine a string's divisor. Here is what he came up with.\n\nString a is the divisor of string b if and only if there exists a positive integer x such that if we write out string a consecutively x times, we get string b. For example, string \"abab\" has two divisors \u2014 \"ab\" and \"abab\".\n\nNow Vasya wants to write a program that calculates the number of common divisors of two strings. Please help him.\n\nThe first input line contains a non-empty string s1.\n\nThe second input line contains a non-empty string s2.\n\nLengths of strings s1 and s2 are positive and do not exceed 105. The strings only consist of lowercase Latin letters.\n\nPrint the number of common divisors of strings s1 and s2. \n\nIn first sample the common divisors are strings \"abcd\" and \"abcdabcd\".\n\nIn the second sample the common divisor is a single string \"a\". String \"aa\" isn't included in the answer as it isn't a divisor of string \"aaa\"."}, {"role": "assistant", "content": "bruteforce, hashing, implementation, math, strings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Vasya has recently bought some land and decided to surround it with a wooden fence.\n\nHe went to a company called \"Wooden board\" that produces wooden boards for fences. Vasya read in the catalog of products that the company has at its disposal n different types of wood. The company uses the i-th type of wood to produce a board of this type that is a rectangular ai by bi block.\n\nVasya decided to order boards in this company and build a fence from them. It turned out that the storehouse of the company is so large that Vasya can order arbitrary number of boards of every type. Note that Vasya is allowed to turn the boards as he builds the fence. However, Vasya cannot turn square boards.\n\nVasya is required to construct a fence of length l, however, an arbitrary fence won't do. Vasya wants his fence to look beautiful. We'll say that a fence is beautiful if and only if the following two conditions are fulfilled:\n\nIn other words, the fence is considered beautiful, if the type of the i-th board in the fence is different from the i\u2009-\u20091-th board's type; besides, the i-th board's length is equal to the i\u2009-\u20091-th board's width (for all i, starting from 2).\n\nNow Vasya wonders, how many variants of arranging a fence for his land exist. Your task is to count the number of different beautiful fences of length l.\n\nTwo fences will be considered the same if the corresponding sequences of fence boards types and rotations are the same, otherwise the fences are different. Since the sought number can be large enough, you need to calculate the answer modulo 1000000007 (109\u2009+\u20097).\n\nThe first line contains two integers n and l (1\u2009\u2264\u2009n\u2009\u2264\u2009100,\u20091\u2009\u2264\u2009l\u2009\u2264\u20093000) \u2014 the number of different board types and the fence length, correspondingly. Next n lines contain descriptions of board types: the i-th line contains two integers ai and bi (1\u2009\u2264\u2009ai,\u2009bi\u2009\u2264\u2009100) \u2014 the sizes of the board of the i-th type. All numbers on the lines are separated by spaces.\n\nPrint a single integer \u2014 the sought number of variants modulo 1000000007 (109\u2009+\u20097).\n\nIn the first sample there are exactly two variants of arranging a beautiful fence of length 3: "}, {"role": "assistant", "content": "dp"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Sensation, sensation in the two-dimensional kingdom! The police have caught a highly dangerous outlaw, member of the notorious \"Pihters\" gang. The law department states that the outlaw was driving from the gang's headquarters in his car when he crashed into an ice cream stall. The stall, the car, and the headquarters each occupies exactly one point on the two-dimensional kingdom.\n\nThe outlaw's car was equipped with a GPS transmitter. The transmitter showed that the car made exactly n movements on its way from the headquarters to the stall. A movement can move the car from point (x,\u2009y) to one of these four points: to point (x\u2009-\u20091,\u2009y) which we will mark by letter \"L\", to point (x\u2009+\u20091,\u2009y) \u2014 \"R\", to point (x,\u2009y\u2009-\u20091) \u2014 \"D\", to point (x,\u2009y\u2009+\u20091) \u2014 \"U\".\n\nThe GPS transmitter is very inaccurate and it doesn't preserve the exact sequence of the car's movements. Instead, it keeps records of the car's possible movements. Each record is a string of one of these types: \"UL\", \"UR\", \"DL\", \"DR\" or \"ULDR\". Each such string means that the car made a single movement corresponding to one of the characters of the string. For example, string \"UL\" means that the car moved either \"U\", or \"L\".\n\nYou've received the journal with the outlaw's possible movements from the headquarters to the stall. The journal records are given in a chronological order. Given that the ice-cream stall is located at point (0,\u20090), your task is to print the number of different points that can contain the gang headquarters (that is, the number of different possible locations of the car's origin).\n\nThe first line contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u20092\u00b7105) \u2014 the number of the car's movements from the headquarters to the stall.\n\nEach of the following n lines describes the car's possible movements. It is guaranteed that each possible movement is one of the following strings: \"UL\", \"UR\", \"DL\", \"DR\" or \"ULDR\". \n\nAll movements are given in chronological order. \n\nPlease do not use the %lld specifier to read or write 64-bit integers in C++. It is preferred to use the cin and cout stream or the %I64d specifier.\n\nPrint a single integer \u2014 the number of different possible locations of the gang's headquarters.\n\nThe figure below shows the nine possible positions of the gang headquarters from the first sample: \n\nFor example, the following movements can get the car from point (1,\u20090) to point (0,\u20090): "}, {"role": "assistant", "content": "constructivealgorithms, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The Zoo in the Grid Kingdom is represented by an infinite grid. The Zoo has n observation binoculars located at the OX axis. For each i between 1 and n, inclusive, there exists a single binocular located at the point with coordinates (i,\u20090). There are m flamingos in the Zoo, located at points with positive coordinates. The flamingos are currently sleeping and you can assume that they don't move.\n\nIn order to get a good view over the flamingos, each of the binoculars can be independently rotated to face any angle (not necessarily integer). Then, the binocular can be used to observe all flamingos that is located at the straight line passing through the binocular at the angle it is set. In other words, you can assign each binocular a direction corresponding to any straight line passing through the binocular, and the binocular will be able to see all flamingos located on that line.\n\nToday, some kids from the prestigious Codeforces kindergarten went on a Field Study to the Zoo. Their teacher would like to set each binocular an angle to maximize the number of flamingos that can be seen by the binocular. The teacher is very interested in the sum of these values over all binoculars. Please help him find this sum.\n\nThe first line contains two space-separated integers n and m (1\u2009\u2264\u2009n\u2009\u2264\u2009106,\u20091\u2009\u2264\u2009m\u2009\u2264\u2009250), denoting the number of binoculars and the number of flamingos, respectively.\n\nThen m lines follow, the i-th line will contain two space-separated integers xi and yi (1\u2009\u2264\u2009xi,\u2009yi\u2009\u2264\u2009109), which means that the i-th flamingo is located at point (xi,\u2009yi). \n\nAll flamingos will be located at distinct points.\n\nPrint a single integer denoting the maximum total number of flamingos that can be seen by all the binoculars.\n\nThis picture shows the answer to the example test case. "}, {"role": "assistant", "content": "bruteforce, geometry"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given a directed graph G with n vertices and m arcs (multiple arcs and self-loops are allowed). You have to paint each vertex of the graph into one of the k (k\u2009\u2264\u2009n) colors in such way that for all arcs of the graph leading from a vertex u to vertex v, vertex v is painted with the next color of the color used to paint vertex u.\n\nThe colors are numbered cyclically 1 through k. This means that for each color i (i\u2009<\u2009k) its next color is color i\u2009+\u20091. In addition, the next color of color k is color 1. Note, that if k\u2009=\u20091, then the next color for color 1 is again color 1.\n\nYour task is to find and print the largest possible value of k (k\u2009\u2264\u2009n) such that it's possible to color G as described above with k colors. Note that you don't necessarily use all the k colors (that is, for each color i there does not necessarily exist a vertex that is colored with color i).\n\nThe first line contains two space-separated integers n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009105), denoting the number of vertices and the number of arcs of the given digraph, respectively.\n\nThen m lines follow, each line will contain two space-separated integers ai and bi (1\u2009\u2264\u2009ai,\u2009bi\u2009\u2264\u2009n), which means that the i-th arc goes from vertex ai to vertex bi.\n\nMultiple arcs and self-loops are allowed.\n\nPrint a single integer \u2014 the maximum possible number of the colors that can be used to paint the digraph (i.e. k, as described in the problem statement). Note that the desired value of k must satisfy the inequality 1\u2009\u2264\u2009k\u2009\u2264\u2009n.\n\nFor the first example, with k\u2009=\u20092, this picture depicts the two colors (arrows denote the next color of that color).\n\nWith k\u2009=\u20092 a possible way to paint the graph is as follows.\n\nIt can be proven that no larger value for k exists for this test case.\n\nFor the second example, here's the picture of the k\u2009=\u20095 colors.\n\nA possible coloring of the graph is:\n\nFor the third example, here's the picture of the k\u2009=\u20093 colors.\n\nA possible coloring of the graph is:"}, {"role": "assistant", "content": "dfsandsimilar"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are going to work in Codeforces as an intern in a team of n engineers, numbered 1 through n. You want to give each engineer a souvenir: a T-shirt from your country (T-shirts are highly desirable in Codeforces). Unfortunately you don't know the size of the T-shirt each engineer fits in. There are m different sizes, numbered 1 through m, and each engineer will fit in a T-shirt of exactly one size.\n\nYou don't know the engineers' exact sizes, so you asked your friend, Gerald. Unfortunately, he wasn't able to obtain the exact sizes either, but he managed to obtain for each engineer i and for all sizes j, the probability that the size of the T-shirt that fits engineer i is j.\n\nSince you're planning to give each engineer one T-shirt, you are going to bring with you exactly n T-shirts. For those n T-shirts, you can bring any combination of sizes (you can bring multiple T-shirts with the same size too!). You don't know the sizes of T-shirts for each engineer when deciding what sizes to bring, so you have to pick this combination based only on the probabilities given by your friend, Gerald. \n\nYour task is to maximize the expected number of engineers that receive a T-shirt of his size. \n\nThis is defined more formally as follows. When you finally arrive at the office, you will ask each engineer his T-shirt size. Then, if you still have a T-shirt of that size, you will give him one of them. Otherwise, you don't give him a T-shirt. You will ask the engineers in order starting from engineer 1, then engineer 2, and so on until engineer n.\n\nThe first line contains two space-separated integers n and m (1\u2009\u2264\u2009n\u2009\u2264\u20093000,\u20091\u2009\u2264\u2009m\u2009\u2264\u2009300), denoting the number of engineers and the number of T-shirt sizes, respectively.\n\nThen n lines follow, each line contains m space-separated integers. The j-th integer in the i-th line represents the probability that the i-th engineer fits in a T-shirt of size j. Each probability will be given as an integer between 0 and 1000, inclusive. The actual probability should be calculated as the given number divided by 1000. \n\nIt is guaranteed that for any engineer, the sum of the probabilities for all m T-shirts is equal to one.\n\nPrint a single real number denoting the maximum possible expected number of engineers that will receive a T-shirt.\n\nFor the answer the absolute or relative error of 10\u2009-\u20099 is acceptable.\n\nFor the first example, bring one T-shirt of each size. With 0.5 chance, either both engineers fit inside T-shirts of size 1 or both fit inside T-shirts of size 2. With the other 0.5 chance, one engineer fits inside a T-shirt of size 1 and the other inside a T-shirt of size 2. If the first is true, the number of engineers that receive a T-shirt is one. If the second is true, the number of such engineers is two. Hence, the expected number of engineers who receive a T-shirt is 1.5. This is maximum possible expected number of engineers for all sets of T-shirts. \n\nFor the second example, bring two T-shirts of size 1 and one T-shirt of size 2. This way, each engineer will definitely receive a T-shirt of his size.\n\nFor the third example, bring one T-shirt of size 4."}, {"role": "assistant", "content": "dp, greedy, probabilities"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The prestigious Codeforces kindergarten consists of n kids, numbered 1 through n. Each of them are given allowance in rubles by their parents.\n\nToday, they are going to the most famous candy shop in the town. The shop sells candies in packages: for all i between 1 and m, inclusive, it sells a package containing exactly i candies. A candy costs one ruble, so a package containing x candies costs x rubles.\n\nThe kids will purchase candies in turns, starting from kid 1. In a single turn, kid i will purchase one candy package. Due to the highly competitive nature of Codeforces kindergarten, during a turn, the number of candies contained in the package purchased by the kid will always be strictly greater than the number of candies contained in the package purchased by the kid in the preceding turn (an exception is in the first turn: the first kid may purchase any package). Then, the turn proceeds to kid i\u2009+\u20091, or to kid 1 if it was kid n's turn. This process can be ended at any time, but at the end of the purchase process, all the kids must have the same number of candy packages. Of course, the amount spent by each kid on the candies cannot exceed their allowance.\n\nYou work at the candy shop and would like to prepare the candies for the kids. Print the maximum number of candies that can be sold by the candy shop to the kids. If the kids cannot purchase any candy (due to insufficient allowance), print 0.\n\nThe first line contains two space-separated integers n and m (2\u2009\u2264\u2009n\u2009\u2264\u20092\u00b7105,\u20092\u2009\u2264\u2009m\u2009\u2264\u20095\u00b7106,\u2009n\u2009\u2264\u2009m), denoting the number of kids and the maximum number of candies in a package sold by the candy shop, respectively.\n\nThen n lines follow, each line will contain a single positive integer not exceeding  denoting the allowance of a kid in rubles. The allowances are given in order from kid 1 to kid n.\n\nPlease, do not use the %lld specificator to read or write 64-bit integers in C++. It is recommended to use cin, cout streams (also you may use %I64d specificator).\n\nPrint a single integer denoting the maximum number of candies that can be sold by the candy shop.\n\nFor the first example, one of the scenarios that will result in 13 purchased candies is as follows. "}, {"role": "assistant", "content": "greedy"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Dwarfs have planted a very interesting plant, which is a triangle directed \"upwards\". This plant has an amusing feature. After one year a triangle plant directed \"upwards\" divides into four triangle plants: three of them will point \"upwards\" and one will point \"downwards\". After another year, each triangle plant divides into four triangle plants: three of them will be directed in the same direction as the parent plant, and one of them will be directed in the opposite direction. Then each year the process repeats. The figure below illustrates this process.\n\nHelp the dwarfs find out how many triangle plants that point \"upwards\" will be in n years.\n\nThe first line contains a single integer n (0\u2009\u2264\u2009n\u2009\u2264\u20091018) \u2014 the number of full years when the plant grew.\n\nPlease do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use cin, cout streams or the %I64d specifier.\n\nPrint a single integer \u2014 the remainder of dividing the number of plants that will point \"upwards\" in n years by 1000000007 (109\u2009+\u20097).\n\nThe first test sample corresponds to the second triangle on the figure in the statement. The second test sample corresponds to the third one."}, {"role": "assistant", "content": "math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "As you very well know, the whole Universe traditionally uses three-dimensional Cartesian system of coordinates. In this system each point corresponds to three real coordinates (x,\u2009y,\u2009z). In this coordinate system, the distance between the center of the Universe and the point is calculated by the following formula: . Mushroom scientists that work for the Great Mushroom King think that the Universe isn't exactly right and the distance from the center of the Universe to a point equals xa\u00b7yb\u00b7zc.\n\nTo test the metric of mushroom scientists, the usual scientists offered them a task: find such x,\u2009y,\u2009z (0\u2009\u2264\u2009x,\u2009y,\u2009z;\u00a0x\u2009+\u2009y\u2009+\u2009z\u2009\u2264\u2009S), that the distance between the center of the Universe and the point (x,\u2009y,\u2009z) is maximum possible in the metric of mushroom scientists. The mushroom scientists aren't good at maths, so they commissioned you to do the task.\n\nNote that in this problem, it is considered that 00\u2009=\u20091.\n\nThe first line contains a single integer S (1\u2009\u2264\u2009S\u2009\u2264\u2009103) \u2014 the maximum sum of coordinates of the sought point.\n\nThe second line contains three space-separated integers a, b, c (0\u2009\u2264\u2009a,\u2009b,\u2009c\u2009\u2264\u2009103) \u2014 the numbers that describe the metric of mushroom scientists.\n\nPrint three real numbers \u2014 the coordinates of the point that reaches maximum value in the metrics of mushroom scientists. If there are multiple answers, print any of them that meets the limitations.\n\nA natural logarithm of distance from the center of the Universe to the given point in the metric of mushroom scientists shouldn't differ from the natural logarithm of the maximum distance by more than 10\u2009-\u20096. We think that ln(0)\u2009=\u2009\u2009-\u2009\u221e."}, {"role": "assistant", "content": "math, ternarysearch"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The Fat Rat and his friend \u0421erealguy have had a bet whether at least a few oats are going to descend to them by some clever construction. The figure below shows the clever construction.\n\nA more formal description of the clever construction is as follows. The clever construction consists of n rows with scales. The first row has n scales, the second row has (n\u2009-\u20091) scales, the i-th row has (n\u2009-\u2009i\u2009+\u20091) scales, the last row has exactly one scale. Let's number the scales in each row from the left to the right, starting from 1. Then the value of wi,\u2009k in kilograms (1\u2009\u2264\u2009i\u2009\u2264\u2009n;\u00a01\u2009\u2264\u2009k\u2009\u2264\u2009n\u2009-\u2009i\u2009+\u20091) is the weight capacity parameter of the k-th scale in the i-th row. \n\nIf a body whose mass is not less than wi,\u2009k falls on the scale with weight capacity wi,\u2009k, then the scale breaks. At that anything that the scale has on it, either falls one level down to the left (if possible) or one level down to the right (if possible). In other words, if the scale wi,\u2009k (i\u2009<\u2009n) breaks, then there are at most two possible variants in which the contents of the scale's pan can fall out: all contents of scale wi,\u2009k falls either on scale wi\u2009+\u20091,\u2009k\u2009-\u20091 (if it exists), or on scale wi\u2009+\u20091,\u2009k (if it exists). If scale wn,\u20091 breaks, then all its contents falls right in the Fat Rat's claws. Please note that the scales that are the first and the last in a row, have only one variant of dropping the contents.\n\nInitially, oats are simultaneously put on all scales of the first level. The i-th scale has ai kilograms of oats put on it. After that the scales start breaking and the oats start falling down in some way. You can consider everything to happen instantly. That is, the scale breaks instantly and the oats also fall instantly.\n\nThe Fat Rat is sure that whatever happens, he will not get the oats from the first level. Cerealguy is sure that there is such a scenario, when the rat gets at least some number of the oats. Help the Fat Rat and the Cerealguy. Determine, which one is right.\n\nThe first line contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u200950) \u2014 the number of rows with scales.\n\nThe next line contains n space-separated integers ai (1\u2009\u2264\u2009ai\u2009\u2264\u2009106) \u2014 the masses of the oats in kilograms.\n\nThe next n lines contain descriptions of the scales: the i-th line contains (n\u2009-\u2009i\u2009+\u20091) space-separated integers wi,\u2009k (1\u2009\u2264\u2009wi,\u2009k\u2009\u2264\u2009106) \u2014 the weight capacity parameters for the scales that stand on the i-th row, in kilograms.\n\nPrint \"Fat Rat\" if the Fat Rat is right, otherwise print \"Cerealguy\".\n\nNotes to the examples: "}, {"role": "assistant", "content": "dp"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The Great Mushroom King descended to the dwarves, but not everyone managed to see him. Only the few chosen ones could see the King.\n\nWe know that only LCM(k2l\u2009+\u20091,\u2009k2l\u2009+\u20091\u2009+\u20091,\u2009...,\u2009k2r\u2009+\u20091) dwarves can see the Great Mushroom King. Numbers k, l, r are chosen by the Great Mushroom King himself in some complicated manner which is unclear to common dwarves. \n\nThe dwarven historians decided to document all visits of the Great Mushroom King. For each visit the dwarven historians know three integers ki, li, ri, chosen by the Great Mushroom King for this visit. They also know a prime number pi. Help them to count the remainder of dividing the number of dwarves who can see the King, by number pi, for each visit.\n\nThe first line contains the single integer t (1\u2009\u2264\u2009t\u2009\u2264\u2009105) \u2014 the number of the King's visits. \n\nEach of the following t input lines contains four space-separated integers ki, li, ri and pi (1\u2009\u2264\u2009ki\u2009\u2264\u2009106;\u00a00\u2009\u2264\u2009li\u2009\u2264\u2009ri\u2009\u2264\u20091018;\u00a02\u2009\u2264\u2009pi\u2009\u2264\u2009109) \u2014 the numbers, chosen by the Great Mushroom King and the prime module, correspondingly. \n\nIt is guaranteed that for all visits number pi is prime.\n\nPlease do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use the cin, cout streams or the %I64d specifier.\n\nFor each visit print the answer on a single line \u2014 the remainder of dividing the number of the dwarves who can see the King this time, by number pi. Print the answers for the visits in the order, in which the visits are described in the input.\n\nWe consider that LCM(a1,\u2009a2,\u2009...,\u2009an) represents the least common multiple of numbers a1, a2, ..., an.\n\nWe consider that x0\u2009=\u20091, for any x."}, {"role": "assistant", "content": "math, numbertheory"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Imagine the Cartesian coordinate system. There are k different points containing subway stations. One can get from any subway station to any one instantly. That is, the duration of the transfer between any two subway stations can be considered equal to zero. You are allowed to travel only between subway stations, that is, you are not allowed to leave the subway somewhere in the middle of your path, in-between the stations. \n\nThere are n dwarves, they are represented by their coordinates on the plane. The dwarves want to come together and watch a soap opera at some integer point on the plane. For that, they choose the gathering point and start moving towards it simultaneously. In one second a dwarf can move from point (x,\u2009y) to one of the following points: (x\u2009-\u20091,\u2009y), (x\u2009+\u20091,\u2009y), (x,\u2009y\u2009-\u20091), (x,\u2009y\u2009+\u20091). Besides, the dwarves can use the subway as many times as they want (the subway transfers the dwarves instantly). The dwarves do not interfere with each other as they move (that is, the dwarves move simultaneously and independently from each other). \n\nHelp the dwarves and find the minimum time they need to gather at one point.\n\nThe first line contains two integers n and k (1\u2009\u2264\u2009n\u2009\u2264\u2009105;\u00a00\u2009\u2264\u2009k\u2009\u2264\u2009105) \u2014 the number of dwarves and the number of subway stations, correspondingly.\n\nThe next n lines contain the coordinates of the dwarves. The i-th line contains two space-separated integers xi and yi (|xi|,\u2009|yi|\u2009\u2264\u2009108) \u2014 the coordinates of the i-th dwarf. It is guaranteed that all dwarves are located at different points.\n\nThe next k lines contain the coordinates of the subway stations. The t-th line contains two space-separated integers xt and yt (|xt|,\u2009|yt|\u2009\u2264\u2009108) \u2014 the coordinates of the t-th subway station. It is guaranteed that all subway stations are located at different points.\n\nPrint a single number \u2014 the minimum time, in which all dwarves can gather together at one point to watch the soap."}, {"role": "assistant", "content": "binarysearch, datastructures"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Some dwarves that are finishing the StUDY (State University for Dwarven Youngsters) Bachelor courses, have been told \"no genome, no degree\". That means that all dwarves should write a thesis on genome. Dwarven genome is far from simple. It is represented by a string that consists of lowercase Latin letters.\n\nDwarf Misha has already chosen the subject for his thesis: determining by two dwarven genomes, whether they belong to the same race. Two dwarves belong to the same race if we can swap two characters in the first dwarf's genome and get the second dwarf's genome as a result. Help Dwarf Misha and find out whether two gnomes belong to the same race or not.\n\nThe first line contains the first dwarf's genome: a non-empty string, consisting of lowercase Latin letters.\n\nThe second line contains the second dwarf's genome: a non-empty string, consisting of lowercase Latin letters.\n\nThe number of letters in each genome doesn't exceed 105. It is guaranteed that the strings that correspond to the genomes are different. The given genomes may have different length.\n\nPrint \"YES\", if the dwarves belong to the same race. Otherwise, print \"NO\"."}, {"role": "assistant", "content": "implementation, strings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Each year in the castle of Dwarven King there is a competition in growing mushrooms among the dwarves. The competition is one of the most prestigious ones, and the winner gets a wooden salad bowl. This year's event brought together the best mushroom growers from around the world, so we had to slightly change the rules so that the event gets more interesting to watch.\n\nEach mushroom grower has a mushroom that he will grow on the competition. Under the new rules, the competition consists of two parts. The first part lasts t1 seconds and the second part lasts t2 seconds. The first and the second part are separated by a little break.\n\nAfter the starting whistle the first part of the contest starts, and all mushroom growers start growing mushrooms at once, each at his individual speed of vi meters per second. After t1 seconds, the mushroom growers stop growing mushrooms and go to have a break. During the break, for unexplained reasons, the growth of all mushrooms is reduced by k percent. After the break the second part of the contest starts and all mushrooms growers at the same time continue to grow mushrooms, each at his individual speed of ui meters per second. After a t2 seconds after the end of the break, the competition ends. Note that the speeds before and after the break may vary.\n\nBefore the match dwarf Pasha learned from all participants, what two speeds they have chosen. However, the participants did not want to disclose to him all their strategy and therefore, did not say in what order they will be using these speeds. That is, if a participant chose speeds ai and bi, then there are two strategies: he either uses speed ai before the break and speed bi after it, or vice versa.\n\nDwarf Pasha really wants to win the totalizer. He knows that each participant chooses the strategy that maximizes the height of the mushroom. Help Dwarf Pasha make the final table of competition results.\n\nThe participants are sorted in the result table by the mushroom height (the participants with higher mushrooms follow earlier in the table). In case of equal mushroom heights, the participants are sorted by their numbers (the participants with a smaller number follow earlier).\n\nThe first input line contains four integer numbers n, t1, t2, k (1\u2009\u2264\u2009n,\u2009t1,\u2009t2\u2009\u2264\u20091000;\u00a01\u2009\u2264\u2009k\u2009\u2264\u2009100) \u2014 the number of participants, the time before the break, the time after the break and the percentage, by which the mushroom growth drops during the break, correspondingly.\n\nEach of the following n lines contains two integers. The i-th (1\u2009\u2264\u2009i\u2009\u2264\u2009n) line contains space-separated integers ai, bi (1\u2009\u2264\u2009ai,\u2009bi\u2009\u2264\u20091000) \u2014 the speeds which the participant number i chose.\n\nPrint the final results' table: n lines, each line should contain the number of the corresponding dwarf and the final maximum height of his mushroom with exactly two digits after the decimal point. The answer will be considered correct if it is absolutely accurate."}, {"role": "assistant", "content": "greedy, sortings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Dwarfs have planted a very interesting plant, which is a triangle directed \"upwards\". This plant has an amusing feature. After one year a triangle plant directed \"upwards\" divides into four triangle plants: three of them will point \"upwards\" and one will point \"downwards\". After another year, each triangle plant divides into four triangle plants: three of them will be directed in the same direction as the parent plant, and one of them will be directed in the opposite direction. Then each year the process repeats. The figure below illustrates this process.\n\nHelp the dwarfs find out how many triangle plants that point \"upwards\" will be in n years.\n\nThe first line contains a single integer n (0\u2009\u2264\u2009n\u2009\u2264\u20091018) \u2014 the number of full years when the plant grew.\n\nPlease do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use cin, cout streams or the %I64d specifier.\n\nPrint a single integer \u2014 the remainder of dividing the number of plants that will point \"upwards\" in n years by 1000000007 (109\u2009+\u20097).\n\nThe first test sample corresponds to the second triangle on the figure in the statement. The second test sample corresponds to the third one."}, {"role": "assistant", "content": "dp, math, matrices, numbertheory"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "As you very well know, the whole Universe traditionally uses three-dimensional Cartesian system of coordinates. In this system each point corresponds to three real coordinates (x,\u2009y,\u2009z). In this coordinate system, the distance between the center of the Universe and the point is calculated by the following formula: . Mushroom scientists that work for the Great Mushroom King think that the Universe isn't exactly right and the distance from the center of the Universe to a point equals xa\u00b7yb\u00b7zc.\n\nTo test the metric of mushroom scientists, the usual scientists offered them a task: find such x,\u2009y,\u2009z (0\u2009\u2264\u2009x,\u2009y,\u2009z;\u00a0x\u2009+\u2009y\u2009+\u2009z\u2009\u2264\u2009S), that the distance between the center of the Universe and the point (x,\u2009y,\u2009z) is maximum possible in the metric of mushroom scientists. The mushroom scientists aren't good at maths, so they commissioned you to do the task.\n\nNote that in this problem, it is considered that 00\u2009=\u20091.\n\nThe first line contains a single integer S (1\u2009\u2264\u2009S\u2009\u2264\u2009103) \u2014 the maximum sum of coordinates of the sought point.\n\nThe second line contains three space-separated integers a, b, c (0\u2009\u2264\u2009a,\u2009b,\u2009c\u2009\u2264\u2009103) \u2014 the numbers that describe the metric of mushroom scientists.\n\nPrint three real numbers \u2014 the coordinates of the point that reaches maximum value in the metrics of mushroom scientists. If there are multiple answers, print any of them that meets the limitations.\n\nA natural logarithm of distance from the center of the Universe to the given point in the metric of mushroom scientists shouldn't differ from the natural logarithm of the maximum distance by more than 10\u2009-\u20096. We think that ln(0)\u2009=\u2009\u2009-\u2009\u221e."}, {"role": "assistant", "content": "math, numbertheory, probabilities"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The Fat Rat and his friend \u0421erealguy have had a bet whether at least a few oats are going to descend to them by some clever construction. The figure below shows the clever construction.\n\nA more formal description of the clever construction is as follows. The clever construction consists of n rows with scales. The first row has n scales, the second row has (n\u2009-\u20091) scales, the i-th row has (n\u2009-\u2009i\u2009+\u20091) scales, the last row has exactly one scale. Let's number the scales in each row from the left to the right, starting from 1. Then the value of wi,\u2009k in kilograms (1\u2009\u2264\u2009i\u2009\u2264\u2009n;\u00a01\u2009\u2264\u2009k\u2009\u2264\u2009n\u2009-\u2009i\u2009+\u20091) is the weight capacity parameter of the k-th scale in the i-th row. \n\nIf a body whose mass is not less than wi,\u2009k falls on the scale with weight capacity wi,\u2009k, then the scale breaks. At that anything that the scale has on it, either falls one level down to the left (if possible) or one level down to the right (if possible). In other words, if the scale wi,\u2009k (i\u2009<\u2009n) breaks, then there are at most two possible variants in which the contents of the scale's pan can fall out: all contents of scale wi,\u2009k falls either on scale wi\u2009+\u20091,\u2009k\u2009-\u20091 (if it exists), or on scale wi\u2009+\u20091,\u2009k (if it exists). If scale wn,\u20091 breaks, then all its contents falls right in the Fat Rat's claws. Please note that the scales that are the first and the last in a row, have only one variant of dropping the contents.\n\nInitially, oats are simultaneously put on all scales of the first level. The i-th scale has ai kilograms of oats put on it. After that the scales start breaking and the oats start falling down in some way. You can consider everything to happen instantly. That is, the scale breaks instantly and the oats also fall instantly.\n\nThe Fat Rat is sure that whatever happens, he will not get the oats from the first level. Cerealguy is sure that there is such a scenario, when the rat gets at least some number of the oats. Help the Fat Rat and the Cerealguy. Determine, which one is right.\n\nThe first line contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u200950) \u2014 the number of rows with scales.\n\nThe next line contains n space-separated integers ai (1\u2009\u2264\u2009ai\u2009\u2264\u2009106) \u2014 the masses of the oats in kilograms.\n\nThe next n lines contain descriptions of the scales: the i-th line contains (n\u2009-\u2009i\u2009+\u20091) space-separated integers wi,\u2009k (1\u2009\u2264\u2009wi,\u2009k\u2009\u2264\u2009106) \u2014 the weight capacity parameters for the scales that stand on the i-th row, in kilograms.\n\nPrint \"Fat Rat\" if the Fat Rat is right, otherwise print \"Cerealguy\".\n\nNotes to the examples: "}, {"role": "assistant", "content": "*2500"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Happy PMP is freshman and he is learning about algorithmic problems. He enjoys playing algorithmic games a lot.\n\nOne of the seniors gave Happy PMP a nice game. He is given two permutations of numbers 1 through n and is asked to convert the first one to the second. In one move he can remove the last number from the permutation of numbers and inserts it back in an arbitrary position. He can either insert last number between any two consecutive numbers, or he can place it at the beginning of the permutation.\n\nHappy PMP has an algorithm that solves the problem. But it is not fast enough. He wants to know the minimum number of moves to convert the first permutation to the second. \n\nThe first line contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u20092\u00b7105) \u2014 the quantity of the numbers in the both given permutations. \n\nNext line contains n space-separated integers \u2014 the first permutation. Each number between 1 to n will appear in the permutation exactly once. \n\nNext line describe the second permutation in the same format.\n\nPrint a single integer denoting the minimum number of moves required to convert the first permutation to the second.\n\nIn the first sample, he removes number 1 from end of the list and places it at the beginning. After that he takes number 2 and places it between 1 and 3.\n\nIn the second sample, he removes number 5 and inserts it after 1.\n\nIn the third sample, the sequence of changes are like this: "}, {"role": "assistant", "content": "greedy"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "PMP is getting a warrior. He is practicing a lot, but the results are not acceptable yet. This time instead of programming contests, he decided to compete in a car racing to increase the spirit of victory. He decides to choose a competition that also exhibits algorithmic features.\n\nAlgoRace is a special league of car racing where different teams compete in a country of n cities. Cities are numbered 1 through n. Every two distinct cities in the country are connected with one bidirectional road. Each competing team should introduce one driver and a set of cars.\n\nThe competition is held in r rounds. In i-th round, drivers will start at city si and finish at city ti. Drivers are allowed to change their cars at most ki times. Changing cars can take place in any city in no time. One car can be used multiple times in one round, but total number of changes should not exceed ki. Drivers can freely choose their path to destination.\n\nPMP has prepared m type of purpose-built cars. Beside for PMP\u2019s driving skills, depending on properties of the car and the road, a car traverses each road in each direction in different times. \n\nPMP Warriors wants to devise best strategies of choosing car and roads in each round to maximize the chance of winning the cup. For each round they want to find the minimum time required to finish it.\n\nThe first line contains three space-separated integers n,\u2009m,\u2009r (2\u2009\u2264\u2009n\u2009\u2264\u200960,\u20091\u2009\u2264\u2009m\u2009\u2264\u200960,\u20091\u2009\u2264\u2009r\u2009\u2264\u2009105) \u2014 the number of cities, the number of different types of cars and the number of rounds in the competition, correspondingly.\n\nNext m sets of n\u2009\u00d7\u2009n matrices of integers between 0 to 106 (inclusive) will follow \u2014 describing the time one car requires to traverse different roads. The k-th integer in j-th line of the i-th set is the time that i-th car requires to traverse the road from j-th city to k-th city. These matrices are not necessarily symmetric, but their diagonal is always zero.\n\nNext r lines contain description of the rounds. The i-th of these lines contains space-separated integers si,\u2009ti,\u2009ki (1\u2009\u2264\u2009si,\u2009ti\u2009\u2264\u2009n,\u2009si\u2009\u2260\u2009ti,\u20090\u2009\u2264\u2009ki\u2009\u2264\u20091000) \u2014 the number of starting city, finishing city and the number of possible car changes in i-th round, correspondingly.\n\nFor each round you should print the minimum required time to complete the round in a single line.\n\nIn the first sample, in all rounds PMP goes from city #1 to city #2, then city #3 and finally city #4. But the sequences of types of the cars he uses are (1, 2, 1) in the first round and (1, 2, 2) in the second round. In the third round, although he can change his car three times, he uses the same strategy as the first round which only needs two car changes."}, {"role": "assistant", "content": "dp, shortestpaths"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Zart PMP is qualified for ICPC World Finals in Harbin, China. After team excursion to Sun Island Park for snow sculpture art exposition, PMP should get back to buses before they leave. But the park is really big and he does not know how to find them.\n\nThe park has n intersections numbered 1 through n. There are m bidirectional roads that connect some pairs of these intersections. At k intersections, ICPC volunteers are helping the teams and showing them the way to their destinations. Locations of volunteers are fixed and distinct.\n\nWhen PMP asks a volunteer the way to bus station, he/she can tell him the whole path. But the park is fully covered with ice and snow and everywhere looks almost the same. So PMP can only memorize at most q intersections after each question (excluding the intersection they are currently standing). He always tells volunteers about his weak memory and if there is no direct path of length (in number of roads) at most q that leads to bus station, the volunteer will guide PMP to another volunteer (who is at most q intersections away, of course). ICPC volunteers know the area very well and always tell PMP the best way. So if there exists a way to bus stations, PMP will definitely find it.\n\nPMP's initial location is intersection s and the buses are at intersection t. There will always be a volunteer at intersection s. Your job is to find out the minimum q which guarantees that PMP can find the buses.\n\nThe first line contains three space-separated integers n,\u2009m,\u2009k (2\u2009\u2264\u2009n\u2009\u2264\u2009105,\u20090\u2009\u2264\u2009m\u2009\u2264\u20092\u00b7105,\u20091\u2009\u2264\u2009k\u2009\u2264\u2009n) \u2014 the number of intersections, roads and volunteers, respectively. Next line contains k distinct space-separated integers between 1 and n inclusive \u2014 the numbers of cities where volunteers are located.\n\nNext m lines describe the roads. The i-th of these lines contains two space-separated integers ui,\u2009vi (1\u2009\u2264\u2009ui,\u2009vi\u2009\u2264\u2009n,\u2009ui\u2009\u2260\u2009vi) \u2014 two intersections that i-th road connects. There will be at most one road between any two intersections.\n\nLast line of input contains two space-separated integers s,\u2009t (1\u2009\u2264\u2009s,\u2009t\u2009\u2264\u2009n,\u2009s\u2009\u2260\u2009t) \u2014 the initial location of PMP and the location of the buses. It might not always be possible to reach t from s.\n\nIt is guaranteed that there is always a volunteer at intersection s. \n\nPrint on the only line the answer to the problem \u2014 the minimum value of q which guarantees that PMP can find the buses. If PMP cannot reach the buses at all, output -1 instead.\n\nThe first sample is illustrated below. Blue intersections are where volunteers are located. If PMP goes in the path of dashed line, it can reach the buses with q\u2009=\u20093:\n\nIn the second sample, PMP uses intersection 6 as an intermediate intersection, thus the answer is 3."}, {"role": "assistant", "content": "dfsandsimilar, dsu"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "In the last war of PMP, he defeated all his opponents and advanced to the final round. But after the end of semi-final round evil attacked him from behind and killed him! God bless him. \n\nBefore his death, PMP signed a contract with the bus rapid transit (BRT) that improves public transportations by optimizing time of travel estimation. You should help PMP finish his last contract.\n\nEach BRT line is straight line that passes n intersecting on its ways. At each intersection there is traffic light that periodically cycles between green and red. It starts illuminating green at time zero. During the green phase which lasts for g seconds, traffic is allowed to proceed. After the green phase the light changes to red and remains in this color for r seconds. During the red phase traffic is prohibited from proceeding. If a vehicle reaches the intersection exactly at a time when the light changes to red, it should stop, but the vehicle is clear to proceed if the light has just changed to green.\n\nAll traffic lights have the same timing and are synchronized. In other words the period of red (and green) phase is the same for all of traffic lights and they all start illuminating green at time zero.\n\nThe BRT Company has calculated the time that a bus requires to pass each road segment. A road segment is the distance between two consecutive traffic lights or between a traffic light and source (or destination) station. More precisely BRT specialists provide n\u2009+\u20091 positive integers li, the time in seconds that a bus needs to traverse i-th road segment in the path from source to destination. The l1 value denotes the time that a bus needs to pass the distance between source and the first intersection. The ln\u2009+\u20091 value denotes the time between the last intersection and destination.\n\nIn one day q buses leave the source station. The i-th bus starts from source at time ti (in seconds). Decision makers of BRT Company want to know what time a bus gets to destination?\n\nThe bus is considered as point. A bus will always move if it can. The buses do not interfere with each other. \n\nThe first line of input contains three space-separated positive integers n,\u2009g,\u2009r (1\u2009\u2264\u2009n\u2009\u2264\u2009105,\u20092\u2009\u2264\u2009g\u2009+\u2009r\u2009\u2264\u2009109) \u2014 the number of intersections, duration of green phase and duration of red phase. Next line contains n\u2009+\u20091 integers li (1\u2009\u2264\u2009li\u2009\u2264\u2009109) \u2014 the time to pass the i-th road segment in the path from source to destination. \n\nNext line contains a single integer q (1\u2009\u2264\u2009q\u2009\u2264\u2009105) \u2014 the number of buses in a day. The i-th of next q lines contains a single integer ti (1\u2009\u2264\u2009ti\u2009\u2264\u2009109) \u2014 the time when i-th bus leaves the source station.\n\nIn the i-th line of output you should print a single integer \u2014 the time that i-th bus gets to destination.\n\nPlease do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use cin, cout streams or the %I64d specifier.\n\nIn the first sample, buses #1, #2 and #5 will reach the destination without waiting behind the red light. But buses #3 and #4 should wait.\n\nIn the second sample, first bus should wait at third, fourth and fifth intersections. Second and third buses should wait only at the fifth intersection."}, {"role": "assistant", "content": "datastructures"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The story was not finished as PMP thought. God offered him one more chance to reincarnate and come back to life. But before he can come back, God told him that PMP should ask n great men including prominent programmers about their life experiences.\n\nThe men are standing on a straight line. They are numbered 1 through n from left to right. The coordinate of the i-th man is xi (xi\u2009<\u2009xi\u2009+\u20091,\u2009i\u2009<\u2009n). PMP should visit all these people one by one in arbitrary order. Each men should be visited exactly once. At the beginning of his tour, he starts at location of s-th man and asks him about his experiences.\n\nEach time PMP wants to change his location, he should give a ticket to an angel and the angel carries him to his destination. Angels take PMP from one location, fly to his destination and put him down there. Nobody else is visited in this movement. Moving from i-th man to j-th man, takes |xi\u2009-\u2009xj| time. PMP can get back to life as soon as he visits all men.\n\nThere are two types of angels: Some angels are going to the right and they only accept right tickets. Others are going the left and they only accept left tickets. There are an unlimited number of angels of each type. PMP has l left tickets and n\u2009-\u20091\u2009-\u2009l right tickets.\n\nPMP wants to get back to life as soon as possible to be able to compete in this year's final instead of the final he missed last year. He wants to know the quickest way to visit all the men exactly once. He also needs to know the exact sequence moves he should make.\n\nThe first line of input contains three space-separated integers n,\u2009l,\u2009s (2\u2009\u2264\u2009n\u2009\u2264\u2009105,\u20090\u2009\u2264\u2009l\u2009<\u2009n,\u20091\u2009\u2264\u2009s\u2009\u2264\u2009n) \u2014 the number of people to visit, the number left tickets PMP got, and initial location of PMP. Next line contains n space-separated integers. The i-th integer in this line is xi (0\u2009=\u2009x1\u2009<\u2009x2\u2009<\u2009...\u2009<\u2009xn\u2009\u2264\u2009109) \u2014 the location of i-th man.\n\nIf PMP cannot visit all men with the tickets he got print -1 in the only line of output. Otherwise, in the first line you should print the minimum time PMP can visit all men. In the second line you should print n\u2009-\u20091 integers that are the numbers of the men that PMP should visit in order in one optimal solution. If there are multiple answers, output any of them.\n\nPlease do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use cin, cout streams or the %I64d specifier.\n\nLet us remind here, a great contestant of all times, who left us about a year ago. May Renat Mullakhanov rest in peace."}, {"role": "assistant", "content": "datastructures, greedy"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Hexagonal numbers are figurate numbers which can be calculated using the formula hn\u2009=\u20092n2\u2009-\u2009n. You are given n; calculate n-th hexagonal number.\n\nThe only line of input contains an integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100).\n\nOutput the n-th hexagonal number."}, {"role": "assistant", "content": "*specialproblem"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given numbers a and b. Calculate the sum of a and reverse of b. A reverse of a number is a number which contains the same digits in reverse order. For example, reverse of 230 is 32, and reverse of 0 is 0.\n\nThe input contains two integers a and b (0\u2009\u2264\u2009a,\u2009b\u2009\u2264\u2009109), separated by a single space. The numbers are given without leading zeros.\n\nOutput the sum of a and reverse of b."}, {"role": "assistant", "content": "*specialproblem, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Least common multiple (LCM) of two numbers is the smallest positive integer which is divisible by both of them. You are given integers a and b. Calculate their LCM.\n\nThe input contains two integers a and b (1\u2009\u2264\u2009a,\u2009b\u2009\u2264\u2009103), separated by a single space.\n\nOutput LCM(a, b)."}, {"role": "assistant", "content": "*specialproblem, implementation, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given a number n. Print n lines, i-th line should consist of i characters \"*\". Lines' indices are 1-based.\n\nThe only line of input contains an integer n (1\u2009\u2264\u2009n\u2009\u2264\u200950).\n\nOutput the described pattern."}, {"role": "assistant", "content": "*specialproblem, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "HQ9+ is a joke programming language which has only four one-character instructions:\n\nInstructions \"H\" and \"Q\" are case-sensitive and must be uppercase. The characters of the program which are not instructions are ignored.\n\nYou are given a program written in HQ9+. You have to figure out whether executing this program will produce any output.\n\nThe input will consist of a single line p which will give a program in HQ9+. String p will contain between 1 and 100 characters, inclusive. ASCII-code of each character of p will be between 33 (exclamation mark) and 126 (tilde), inclusive.\n\nOutput \"YES\", if executing the program will produce any output, and \"NO\" otherwise (quotes for clarity only).\n\nIn the first case the program contains only one instruction \u2014 \"H\", which prints \"Hello, World!\".\n\nIn the second case none of the program characters are language instructions."}, {"role": "assistant", "content": "*specialproblem, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given a positive integer n. Output its binary notation.\n\nThe only line of input data contains an integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009106).\n\nOutput the binary notation of n (without any leading zeros).\n\nIn the first example 5\u2009=\u20091\u2009*\u200922\u2009+\u20090\u2009*\u200921\u2009+\u20091\u2009*\u200920."}, {"role": "assistant", "content": "*specialproblem, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Sorting arrays is traditionally associated with high-level languages. How hard can it be in Roco? Sort the given array in non-descending order.\n\nThe first line of input contains an integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100) \u2014 the size of the array. The following n lines contain the elements of the array, one per line. Each element of the array is an integer between 1 and 100, inclusive. The array might contain duplicate elements.\n\nOutput space-separated elements of the sorted array."}, {"role": "assistant", "content": "*specialproblem, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "In this problem we'll use a stack which supports two types of operations:\n\nYou are given a string which describes the sequence of operations to be performed on the stack. i-th character corresponds to i-th operation:\n\nInitially the stack is empty. Output the topmost number on the stack after executing all given operations.\n\nThe only line of input contains a string of operations, consisting of characters \u00ab+\u00bb, \u00ab*\u00bb and digits (0..9). The length of the string will be between 1 and 20 characters, inclusive.\n\nThe given sequence of operations is guaranteed to be correct, i.e. the stack will have at least two elements before every math operation. The numbers on the stack will never exceed 106. \n\nOutput a single number \u2014 the topmost element of the stack after performing all given operations.\n\nIn the first case the stack will end up containing a single number \u2014 the result of calculating (1+2)*3+6*6.\n\nIn the second case there are no math operations, so the answer will be the last number pushed on the stack."}, {"role": "assistant", "content": "*specialproblem, expressionparsing, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Polycarpus has a ribbon, its length is n. He wants to cut the ribbon in a way that fulfils the following two conditions: \n\nHelp Polycarpus and find the number of ribbon pieces after the required cutting.\n\nThe first line contains four space-separated integers n, a, b and c (1\u2009\u2264\u2009n,\u2009a,\u2009b,\u2009c\u2009\u2264\u20094000) \u2014 the length of the original ribbon and the acceptable lengths of the ribbon pieces after the cutting, correspondingly. The numbers a, b and c can coincide.\n\nPrint a single number \u2014 the maximum possible number of ribbon pieces. It is guaranteed that at least one correct ribbon cutting exists.\n\nIn the first example Polycarpus can cut the ribbon in such way: the first piece has length 2, the second piece has length 3.\n\nIn the second example Polycarpus can cut the ribbon in such way: the first piece has length 5, the second piece has length 2."}, {"role": "assistant", "content": "bruteforce, dp"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You have two positive integers w and h. Your task is to count the number of rhombi which have the following properties: \n\nCount the number of such rhombi.\n\nLet us remind you that a rhombus is a quadrilateral whose four sides all have the same length.\n\nThe first line contains two integers w and h (1\u2009\u2264\u2009w,\u2009h\u2009\u2264\u20094000) \u2014 the rectangle's sizes.\n\nPrint a single number \u2014 the number of sought rhombi.\n\nPlease do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use cin, cout streams or the %I64d specifier.\n\nIn the first example there exists only one such rhombus. Its vertices are located at points (1,\u20090), (2,\u20091), (1,\u20092), (0,\u20091)."}, {"role": "assistant", "content": "bruteforce, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Happy PMP is freshman and he is learning about algorithmic problems. He enjoys playing algorithmic games a lot.\n\nOne of the seniors gave Happy PMP a nice game. He is given two permutations of numbers 1 through n and is asked to convert the first one to the second. In one move he can remove the last number from the permutation of numbers and inserts it back in an arbitrary position. He can either insert last number between any two consecutive numbers, or he can place it at the beginning of the permutation.\n\nHappy PMP has an algorithm that solves the problem. But it is not fast enough. He wants to know the minimum number of moves to convert the first permutation to the second. \n\nThe first line contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u20092\u00b7105) \u2014 the quantity of the numbers in the both given permutations. \n\nNext line contains n space-separated integers \u2014 the first permutation. Each number between 1 to n will appear in the permutation exactly once. \n\nNext line describe the second permutation in the same format.\n\nPrint a single integer denoting the minimum number of moves required to convert the first permutation to the second.\n\nIn the first sample, he removes number 1 from end of the list and places it at the beginning. After that he takes number 2 and places it between 1 and 3.\n\nIn the second sample, he removes number 5 and inserts it after 1.\n\nIn the third sample, the sequence of changes are like this: "}, {"role": "assistant", "content": "greedy, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "PMP is getting a warrior. He is practicing a lot, but the results are not acceptable yet. This time instead of programming contests, he decided to compete in a car racing to increase the spirit of victory. He decides to choose a competition that also exhibits algorithmic features.\n\nAlgoRace is a special league of car racing where different teams compete in a country of n cities. Cities are numbered 1 through n. Every two distinct cities in the country are connected with one bidirectional road. Each competing team should introduce one driver and a set of cars.\n\nThe competition is held in r rounds. In i-th round, drivers will start at city si and finish at city ti. Drivers are allowed to change their cars at most ki times. Changing cars can take place in any city in no time. One car can be used multiple times in one round, but total number of changes should not exceed ki. Drivers can freely choose their path to destination.\n\nPMP has prepared m type of purpose-built cars. Beside for PMP\u2019s driving skills, depending on properties of the car and the road, a car traverses each road in each direction in different times. \n\nPMP Warriors wants to devise best strategies of choosing car and roads in each round to maximize the chance of winning the cup. For each round they want to find the minimum time required to finish it.\n\nThe first line contains three space-separated integers n,\u2009m,\u2009r (2\u2009\u2264\u2009n\u2009\u2264\u200960,\u20091\u2009\u2264\u2009m\u2009\u2264\u200960,\u20091\u2009\u2264\u2009r\u2009\u2264\u2009105) \u2014 the number of cities, the number of different types of cars and the number of rounds in the competition, correspondingly.\n\nNext m sets of n\u2009\u00d7\u2009n matrices of integers between 0 to 106 (inclusive) will follow \u2014 describing the time one car requires to traverse different roads. The k-th integer in j-th line of the i-th set is the time that i-th car requires to traverse the road from j-th city to k-th city. These matrices are not necessarily symmetric, but their diagonal is always zero.\n\nNext r lines contain description of the rounds. The i-th of these lines contains space-separated integers si,\u2009ti,\u2009ki (1\u2009\u2264\u2009si,\u2009ti\u2009\u2264\u2009n,\u2009si\u2009\u2260\u2009ti,\u20090\u2009\u2264\u2009ki\u2009\u2264\u20091000) \u2014 the number of starting city, finishing city and the number of possible car changes in i-th round, correspondingly.\n\nFor each round you should print the minimum required time to complete the round in a single line.\n\nIn the first sample, in all rounds PMP goes from city #1 to city #2, then city #3 and finally city #4. But the sequences of types of the cars he uses are (1, 2, 1) in the first round and (1, 2, 2) in the second round. In the third round, although he can change his car three times, he uses the same strategy as the first round which only needs two car changes."}, {"role": "assistant", "content": "dp, shortestpaths"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Zart PMP is qualified for ICPC World Finals in Harbin, China. After team excursion to Sun Island Park for snow sculpture art exposition, PMP should get back to buses before they leave. But the park is really big and he does not know how to find them.\n\nThe park has n intersections numbered 1 through n. There are m bidirectional roads that connect some pairs of these intersections. At k intersections, ICPC volunteers are helping the teams and showing them the way to their destinations. Locations of volunteers are fixed and distinct.\n\nWhen PMP asks a volunteer the way to bus station, he/she can tell him the whole path. But the park is fully covered with ice and snow and everywhere looks almost the same. So PMP can only memorize at most q intersections after each question (excluding the intersection they are currently standing). He always tells volunteers about his weak memory and if there is no direct path of length (in number of roads) at most q that leads to bus station, the volunteer will guide PMP to another volunteer (who is at most q intersections away, of course). ICPC volunteers know the area very well and always tell PMP the best way. So if there exists a way to bus stations, PMP will definitely find it.\n\nPMP's initial location is intersection s and the buses are at intersection t. There will always be a volunteer at intersection s. Your job is to find out the minimum q which guarantees that PMP can find the buses.\n\nThe first line contains three space-separated integers n,\u2009m,\u2009k (2\u2009\u2264\u2009n\u2009\u2264\u2009105,\u20090\u2009\u2264\u2009m\u2009\u2264\u20092\u00b7105,\u20091\u2009\u2264\u2009k\u2009\u2264\u2009n) \u2014 the number of intersections, roads and volunteers, respectively. Next line contains k distinct space-separated integers between 1 and n inclusive \u2014 the numbers of cities where volunteers are located.\n\nNext m lines describe the roads. The i-th of these lines contains two space-separated integers ui,\u2009vi (1\u2009\u2264\u2009ui,\u2009vi\u2009\u2264\u2009n,\u2009ui\u2009\u2260\u2009vi) \u2014 two intersections that i-th road connects. There will be at most one road between any two intersections.\n\nLast line of input contains two space-separated integers s,\u2009t (1\u2009\u2264\u2009s,\u2009t\u2009\u2264\u2009n,\u2009s\u2009\u2260\u2009t) \u2014 the initial location of PMP and the location of the buses. It might not always be possible to reach t from s.\n\nIt is guaranteed that there is always a volunteer at intersection s. \n\nPrint on the only line the answer to the problem \u2014 the minimum value of q which guarantees that PMP can find the buses. If PMP cannot reach the buses at all, output -1 instead.\n\nThe first sample is illustrated below. Blue intersections are where volunteers are located. If PMP goes in the path of dashed line, it can reach the buses with q\u2009=\u20093:\n\nIn the second sample, PMP uses intersection 6 as an intermediate intersection, thus the answer is 3."}, {"role": "assistant", "content": "binarysearch, shortestpaths"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Everyone knows that 2010 FIFA World Cup is being held in South Africa now. By the decision of BFA (Berland's Football Association) next World Cup will be held in Berland. BFA took the decision to change some World Cup regulations:\n\nYou are asked to write a program that, by the given list of the competing teams and the results of all the matches, will find the list of teams that managed to get through to the knockout stage.\n\nThe first input line contains the only integer n (1\u2009\u2264\u2009n\u2009\u2264\u200950) \u2014 amount of the teams, taking part in the final tournament of World Cup. The following n lines contain the names of these teams, a name is a string of lower-case and upper-case Latin letters, its length doesn't exceed 30 characters. The following n\u00b7(n\u2009-\u20091)\u2009/\u20092 lines describe the held matches in the format name1-name2 num1:num2, where name1, name2 \u2014 names of the teams; num1, num2 (0\u2009\u2264\u2009num1,\u2009num2\u2009\u2264\u2009100) \u2014 amount of the goals, scored by the corresponding teams. Accuracy of the descriptions is guaranteed: there are no two team names coinciding accurate to the letters' case; there is no match, where a team plays with itself; each match is met in the descriptions only once.\n\nOutput n\u2009/\u20092 lines \u2014 names of the teams, which managed to get through to the knockout stage in lexicographical order. Output each name in a separate line. No odd characters (including spaces) are allowed. It's guaranteed that the described regulations help to order the teams without ambiguity."}, {"role": "assistant", "content": "implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Bob came to a cash & carry store, put n items into his trolley, and went to the checkout counter to pay. Each item is described by its price ci and time ti in seconds that a checkout assistant spends on this item. While the checkout assistant is occupied with some item, Bob can steal some other items from his trolley. To steal one item Bob needs exactly 1 second. What is the minimum amount of money that Bob will have to pay to the checkout assistant? Remember, please, that it is Bob, who determines the order of items for the checkout assistant.\n\nThe first input line contains number n (1\u2009\u2264\u2009n\u2009\u2264\u20092000). In each of the following n lines each item is described by a pair of numbers ti, ci (0\u2009\u2264\u2009ti\u2009\u2264\u20092000,\u20091\u2009\u2264\u2009ci\u2009\u2264\u2009109). If ti is 0, Bob won't be able to steal anything, while the checkout assistant is occupied with item i.\n\nOutput one number \u2014 answer to the problem: what is the minimum amount of money that Bob will have to pay."}, {"role": "assistant", "content": "dp"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Once Bob saw a string. It contained so many different letters, that the letters were marked by numbers, but at the same time each letter could be met in the string at most 10 times. Bob didn't like that string, because it contained repeats: a repeat of length x is such a substring of length 2x, that its first half coincides character by character with its second half. Bob started deleting all the repeats from the string. He does it as follows: while it's possible, Bob takes the shortest repeat, if it is not unique, he takes the leftmost one, and deletes its left half and everything that is to the left of this repeat.\n\nYou're given the string seen by Bob. Find out, what it will look like after Bob deletes all the repeats in the way described above.\n\nThe first input line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105) \u2014 length of the string. The following line contains n space-separated integer numbers from 0 to 109 inclusive \u2014 numbers that stand for the letters of the string. It's guaranteed that each letter can be met in the string at most 10 times.\n\nIn the first line output the length of the string's part, left after Bob's deletions. In the second line output all the letters (separated by a space) of the string, left after Bob deleted all the repeats in the described way."}, {"role": "assistant", "content": "greedy, hashing, stringsuffixstructures"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Pete and Bob invented a new interesting game. Bob takes a sheet of paper and locates a Cartesian coordinate system on it as follows: point (0,\u20090) is located in the bottom-left corner, Ox axis is directed right, Oy axis is directed up. Pete gives Bob requests of three types: \n\nBob managed to answer the requests, when they were 10, 100 or 1000, but when their amount grew up to 2\u00b7105, Bob failed to cope. Now he needs a program that will answer all Pete's requests. Help Bob, please!\n\nThe first input line contains number n (1\u2009\u2264\u2009n\u2009\u2264\u20092\u00b7105) \u2014 amount of requests. Then there follow n lines \u2014 descriptions of the requests. add x y describes the request to add a point, remove x y \u2014 the request to erase a point, find x y \u2014 the request to find the bottom-left point. All the coordinates in the input file are non-negative and don't exceed 109.\n\nFor each request of type find x y output in a separate line the answer to it \u2014 coordinates of the bottommost among the leftmost marked points, lying strictly above and to the right of point (x,\u2009y). If there are no points strictly above and to the right of point (x,\u2009y), output -1."}, {"role": "assistant", "content": "datastructures"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Once upon a time there lived a good fairy A. One day a fine young man B came to her and asked to predict his future. The fairy looked into her magic ball and said that soon the fine young man will meet the most beautiful princess ever and will marry her. Then she drew on a sheet of paper n points and joined some of them with segments, each of the segments starts in some point and ends in some other point. Having drawn that picture, she asked the young man to erase one of the segments from the sheet. Then she tries to colour each point red or blue so, that there is no segment having points of the same colour as its ends. If she manages to do so, the prediction will come true. B wants to meet the most beautiful princess, that's why he asks you to help him. Find all the segments that will help him to meet the princess.\n\nThe first input line contains two integer numbers: n \u2014 amount of the drawn points and m \u2014 amount of the drawn segments (1\u2009\u2264\u2009n\u2009\u2264\u2009104,\u20090\u2009\u2264\u2009m\u2009\u2264\u2009104). The following m lines contain the descriptions of the segments. Each description contains two different space-separated integer numbers v, u (1\u2009\u2264\u2009v\u2009\u2264\u2009n,\u20091\u2009\u2264\u2009u\u2009\u2264\u2009n) \u2014 indexes of the points, joined by this segment. No segment is met in the description twice.\n\nIn the first line output number k \u2014 amount of the segments in the answer. In the second line output k space-separated numbers \u2014 indexes of these segments in ascending order. Each index should be output only once. Segments are numbered from 1 in the input order."}, {"role": "assistant", "content": "dfsandsimilar, divideandconquer, dsu"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "One day Vasya heard a story: \"In the city of High Bertown a bus number 62 left from the bus station. It had n grown-ups and m kids...\"\n\nThe latter events happen to be of no importance to us. Vasya is an accountant and he loves counting money. So he wondered what maximum and minimum sum of money these passengers could have paid for the ride.\n\nThe bus fare equals one berland ruble in High Bertown. However, not everything is that easy \u2014 no more than one child can ride for free with each grown-up passenger. That means that a grown-up passenger who rides with his k (k\u2009>\u20090) children, pays overall k rubles: a ticket for himself and (k\u2009-\u20091) tickets for his children. Also, a grown-up can ride without children, in this case he only pays one ruble.\n\nWe know that in High Bertown children can't ride in a bus unaccompanied by grown-ups.\n\nHelp Vasya count the minimum and the maximum sum in Berland rubles, that all passengers of this bus could have paid in total.\n\nThe input file consists of a single line containing two space-separated numbers n and m (0\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009105) \u2014 the number of the grown-ups and the number of the children in the bus, correspondingly.\n\nIf n grown-ups and m children could have ridden in the bus, then print on a single line two space-separated integers \u2014 the minimum and the maximum possible total bus fare, correspondingly. \n\nOtherwise, print \"Impossible\" (without the quotes).\n\nIn the first sample a grown-up rides with two children and pays two rubles.\n\nIn the second sample there are only children in the bus, so the situation is impossible."}, {"role": "assistant", "content": "greedy, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "So, the Berland is at war with its eternal enemy Flatland again, and Vasya, an accountant, was assigned to fulfil his duty to the nation. \n\nRight now the situation in Berland is dismal \u2014 their both cities are surrounded! The armies of flatlanders stand on the borders of circles, the circles' centers are in the surrounded cities. At any moment all points of the flatland ring can begin to move quickly in the direction of the city \u2014 that's the strategy the flatlanders usually follow when they besiege cities.\n\nThe berlanders are sure that they can repel the enemy's attack if they learn the exact time the attack starts. For that they need to construct a radar that would register any movement at the distance of at most r from it. Thus, we can install a radar at such point, that at least one point of the enemy ring will be in its detecting range (that is, at a distance of at most r). Then the radar can immediately inform about the enemy's attack. \n\nDue to the newest technologies, we can place a radar at any point without any problems. But the problem is that the berlanders have the time to make only one radar. Besides, the larger the detection radius (r) is, the more the radar costs.\n\nThat's why Vasya's task (that is, your task) is to find the minimum possible detection radius for the radar. In other words, your task is to find the minimum radius r (r\u2009\u2265\u20090) such, that a radar with radius r can be installed at some point and it can register the start of the movements of both flatland rings from that point. \n\nIn this problem you can consider the cities as material points, the attacking enemy rings - as circles with centers in the cities, the radar's detection range \u2014 as a disk (including the border) with the center at the point where the radar is placed.\n\nThe input files consist of two lines. Each line represents the city and the flatland ring that surrounds it as three space-separated integers xi, yi, ri (|xi|,\u2009|yi|\u2009\u2264\u2009104;\u00a01\u2009\u2264\u2009ri\u2009\u2264\u2009104) \u2014 the city's coordinates and the distance from the city to the flatlanders, correspondingly.\n\nIt is guaranteed that the cities are located at different points.\n\nPrint a single real number \u2014 the minimum detection radius of the described radar. The answer is considered correct if the absolute or relative error does not exceed 10\u2009-\u20096.\n\nThe figure below shows the answer to the first sample. In this sample the best decision is to put the radar at point with coordinates (2,\u20090). \n\nThe figure below shows the answer for the second sample. In this sample the best decision is to put the radar at point with coordinates (0,\u20090). "}, {"role": "assistant", "content": "geometry"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Vasya used to be an accountant before the war began and he is one of the few who knows how to operate a computer, so he was assigned as the programmer.\n\nWe all know that programs often store sets of integers. For example, if we have a problem about a weighted directed graph, its edge can be represented by three integers: the number of the starting vertex, the number of the final vertex and the edge's weight. So, as Vasya was trying to represent characteristics of a recently invented robot in his program, he faced the following problem.\n\nVasya is not a programmer, so he asked his friend Gena, what the convenient way to store n integers is. Gena used to code in language X-- and so he can use only the types that occur in this language. Let's define, what a \"type\" is in language X--:\n\nMore formally: type := int | pair<type,type>. For example, Gena uses the following type for graph edges: pair<int,pair<int,int>>.\n\nGena was pleased to help Vasya, he dictated to Vasya a type of language X--, that stores n integers. Unfortunately, Gena was in a hurry, so he omitted the punctuation. Now Gena has already left and Vasya can't find the correct punctuation, resulting in a type of language X--, however hard he tries.\n\nHelp Vasya and add the punctuation marks so as to receive the valid type of language X--. Otherwise say that the task is impossible to perform.\n\nThe first line contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105), showing how many numbers the type dictated by Gena contains.\n\nThe second line contains space-separated words, said by Gena. Each of them is either \"pair\" or \"int\" (without the quotes).\n\nIt is guaranteed that the total number of words does not exceed 105 and that among all the words that Gena said, there are exactly n words \"int\".\n\nIf it is possible to add the punctuation marks so as to get a correct type of language X-- as a result, print a single line that represents the resulting type. Otherwise, print \"Error occurred\" (without the quotes). Inside the record of a type should not be any extra spaces and other characters. \n\nIt is guaranteed that if such type exists, then it is unique.\n\nNote that you should print the type dictated by Gena (if such type exists) and not any type that can contain n values."}, {"role": "assistant", "content": "dfsandsimilar"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Berland starts to seize the initiative on the war with Flatland. To drive the enemy from their native land, the berlanders need to know exactly how many more flatland soldiers are left in the enemy's reserve. Fortunately, the scouts captured an enemy in the morning, who had a secret encrypted message with the information the berlanders needed so much.\n\nThe captured enemy had an array of positive integers. Berland intelligence have long been aware of the flatland code: to convey the message, which contained a number m, the enemies use an array of integers a. The number of its subarrays, in which there are at least k equal numbers, equals m. The number k has long been known in the Berland army so General Touristov has once again asked Corporal Vasya to perform a simple task: to decipher the flatlanders' message.\n\nHelp Vasya, given an array of integers a and number k, find the number of subarrays of the array of numbers a, which has at least k equal numbers.\n\nSubarray a[i... j]\u00a0(1\u2009\u2264\u2009i\u2009\u2264\u2009j\u2009\u2264\u2009n) of array a\u2009=\u2009(a1,\u2009a2,\u2009...,\u2009an) is an array, made from its consecutive elements, starting from the i-th one and ending with the j-th one: a[i... j]\u2009=\u2009(ai,\u2009ai\u2009+\u20091,\u2009...,\u2009aj).\n\nThe first line contains two space-separated integers n, k (1\u2009\u2264\u2009k\u2009\u2264\u2009n\u2009\u2264\u20094\u00b7105), showing how many numbers an array has and how many equal numbers the subarrays are required to have, correspondingly. \n\nThe second line contains n space-separated integers ai (1\u2009\u2264\u2009ai\u2009\u2264\u2009109) \u2014 elements of the array.\n\nPrint the single number \u2014 the number of such subarrays of array a, that they have at least k equal integers.\n\nPlease do not use the %lld specifier to read or write 64-bit integers in \u0421++. In is preferred to use the cin, cout streams or the %I64d specifier.\n\nIn the first sample are three subarrays, containing at least two equal numbers: (1,2,1), (2,1,2) and (1,2,1,2).\n\nIn the second sample are two subarrays, containing three equal numbers: (1,2,1,1,3) and (1,2,1,1).\n\nIn the third sample any subarray contains at least one 1 number. Overall they are 6: (1), (1), (1), (1,1), (1,1) and (1,1,1)."}, {"role": "assistant", "content": "twopointers"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Berland has managed to repel the flatlanders' attack and is now starting the counter attack.\n\nFlatland has n cities, numbered from 1 to n, and some pairs of them are connected by bidirectional roads. The Flatlandian maps show roads between cities if and only if there is in fact no road between this pair of cities (we do not know whether is it a clever spy-proof strategy or just saving ink). In other words, if two cities are connected by a road on a flatland map, then there is in fact no road between them. The opposite situation is also true: if two cities are not connected by a road on a flatland map, then in fact, there is a road between them.\n\nThe berlanders got hold of a flatland map. Now Vasya the Corporal is commissioned by General Touristov to find all such groups of flatland cities, that in each group of cities you can get from any city to any other one, moving along the actual roads. Also the cities from different groups are unreachable from each other, moving along the actual roads. Indeed, destroying such groups one by one is much easier than surrounding all Flatland at once!\n\nHelp the corporal complete this task and finally become a sergeant! Don't forget that a flatland map shows a road between cities if and only if there is in fact no road between them. \n\nThe first line contains two space-separated integers n and m (1\u2009\u2264\u2009n\u2009\u2264\u20095\u00b7105,\u20090\u2009\u2264\u2009m\u2009\u2264\u2009106) \u2014 the number of cities and the number of roads marked on the flatland map, correspondingly.\n\nNext m lines contain descriptions of the cities on the map. The i-th line contains two integers ai and bi (1\u2009\u2264\u2009ai,\u2009bi\u2009\u2264\u2009n,\u2009ai\u2009\u2260\u2009bi) \u2014 the numbers of cities that are connected by the i-th road on the flatland map.\n\nIt is guaranteed that each pair of cities occurs in the input no more than once.\n\nOn the first line print number k \u2014 the number of groups of cities in Flatland, such that in each group you can get from any city to any other one by flatland roads. At the same time, the cities from different groups should be unreachable by flatland roads.\n\nOn each of the following k lines first print ti (1\u2009\u2264\u2009ti\u2009\u2264\u2009n) \u2014 the number of vertexes in the i-th group. Then print space-separated numbers of cities in the i-th group.\n\nThe order of printing groups and the order of printing numbers in the groups does not matter. The total sum ti for all k groups must equal n.\n\nIn the first sample there are roads only between pairs of cities 1-4 and 2-3.\n\nIn the second sample there is no road between cities 1 and 2, but still you can get from one city to the other one through city number 3."}, {"role": "assistant", "content": "datastructures, dsu, graphs, hashing, sortings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The ancient Berlanders believed that the longer the name, the more important its bearer is. Thus, Berland kings were famous for their long names. But long names are somewhat inconvenient, so the Berlanders started to abbreviate the names of their kings. They called every king by the first letters of its name. Thus, the king, whose name was Victorious Vasily Pupkin, was always called by the berlanders VVP.\n\nIn Berland over its long history many dynasties of kings replaced each other, but they were all united by common traditions. Thus, according to one Berland traditions, to maintain stability in the country, the first name of the heir should be the same as the last name his predecessor (hence, the first letter of the abbreviated name of the heir coincides with the last letter of the abbreviated name of the predecessor). Berlanders appreciate stability, so this tradition has never been broken. Also Berlanders like perfection, so another tradition requires that the first name of the first king in the dynasty coincides with the last name of the last king in this dynasty (hence, the first letter of the abbreviated name of the first king coincides with the last letter of the abbreviated name of the last king). This tradition, of course, has also been always observed.\n\nThe name of a dynasty is formed by very simple rules: we take all the short names of the kings in the order in which they ruled, and write them in one line. Thus, a dynasty of kings \"ab\" and \"ba\" is called \"abba\", and the dynasty, which had only the king \"abca\", is called \"abca\".\n\nVasya, a historian, has recently found a list of abbreviated names of all Berland kings and their relatives. Help Vasya to find the maximally long name of the dynasty that could have existed in Berland.\n\nNote that in his list all the names are ordered by the time, that is, if name A is earlier in the list than B, then if A and B were kings, then king A ruled before king B.\n\nThe first line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u20095\u00b7105) \u2014 the number of names in Vasya's list. Next n lines contain n abbreviated names, one per line. An abbreviated name is a non-empty sequence of lowercase Latin letters. Its length does not exceed 10 characters.\n\nPrint a single number \u2014 length of the sought dynasty's name in letters.\n\nIf Vasya's list is wrong and no dynasty can be found there, print a single number 0.\n\nIn the first sample two dynasties can exist: the one called \"abcca\" (with the first and second kings) and the one called \"abccba\" (with the first and third kings). \n\nIn the second sample there aren't acceptable dynasties.\n\nThe only dynasty in the third sample consists of one king, his name is \"c\"."}, {"role": "assistant", "content": "dp"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "In the capital city of Berland, Bertown, demonstrations are against the recent election of the King of Berland. Berland opposition, led by Mr. Ovalny, believes that the elections were not fair enough and wants to organize a demonstration at one of the squares.\n\nBertown has n squares, numbered from 1 to n, they are numbered in the order of increasing distance between them and the city center. That is, square number 1 is central, and square number n is the farthest from the center. Naturally, the opposition wants to hold a meeting as close to the city center as possible (that is, they want an square with the minimum number).\n\nThere are exactly k (k\u2009<\u2009n) days left before the demonstration. Now all squares are free. But the Bertown city administration never sleeps, and the approval of an application for the demonstration threatens to become a very complex process. The process of approval lasts several days, but every day the following procedure takes place:\n\nIn order to organize an event on the square i, the administration needs to spend ai bourles. Because of the crisis the administration has only b bourles to confront the opposition. What is the best square that the opposition can take, if the administration will keep trying to occupy the square in question each time? Note that the administration's actions always depend only on the actions of the opposition.\n\nThe first line contains two integers n and k \u2014 the number of squares and days left before the meeting, correspondingly (1\u2009\u2264\u2009k\u2009<\u2009n\u2009\u2264\u2009105).\n\nThe second line contains a single integer b \u2014 the number of bourles the administration has (1\u2009\u2264\u2009b\u2009\u2264\u20091018).\n\nThe third line contains n space-separated integers ai \u2014 the sum of money, needed to organise an event on square i (1\u2009\u2264\u2009ai\u2009\u2264\u2009109).\n\nPlease, do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use the cin, cout streams or the %I64d specifier.\n\nPrint a single number \u2014 the minimum number of the square where the opposition can organize the demonstration.\n\nIn the first sample the opposition can act like this. On day one it applies for square 3. The administration has to organize an event there and end up with 3 bourles. If on the second day the opposition applies for square 2, the administration won't have the money to intervene.\n\nIn the second sample the opposition has only the chance for the last square. If its first move occupies one of the first four squares, the administration is left with at least 4 bourles, which means that next day it can use its next move to move the opposition from any square to the last one.\n\nIn the third sample administration has a lot of money, so opposition can occupy only last square."}, {"role": "assistant", "content": "greedy"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "They say that Berland has exactly two problems, fools and roads. Besides, Berland has n cities, populated by the fools and connected by the roads. All Berland roads are bidirectional. As there are many fools in Berland, between each pair of cities there is a path (or else the fools would get upset). Also, between each pair of cities there is no more than one simple path (or else the fools would get lost). \n\nBut that is not the end of Berland's special features. In this country fools sometimes visit each other and thus spoil the roads. The fools aren't very smart, so they always use only the simple paths.\n\nA simple path is the path which goes through every Berland city not more than once.\n\nThe Berland government knows the paths which the fools use. Help the government count for each road, how many distinct fools can go on it.\n\nNote how the fools' paths are given in the input.\n\nThe first line contains a single integer n (2\u2009\u2264\u2009n\u2009\u2264\u2009105) \u2014 the number of cities. \n\nEach of the next n\u2009-\u20091 lines contains two space-separated integers ui,\u2009vi (1\u2009\u2264\u2009ui,\u2009vi\u2009\u2264\u2009n, ui\u2009\u2260\u2009vi), that means that there is a road connecting cities ui and vi. \n\nThe next line contains integer k (0\u2009\u2264\u2009k\u2009\u2264\u2009105) \u2014 the number of pairs of fools who visit each other. \n\nNext k lines contain two space-separated numbers. The i-th line (i\u2009>\u20090) contains numbers ai,\u2009bi (1\u2009\u2264\u2009ai,\u2009bi\u2009\u2264\u2009n). That means that the fool number 2i\u2009-\u20091 lives in city ai and visits the fool number 2i, who lives in city bi. The given pairs describe simple paths, because between every pair of cities there is only one simple path.\n\nPrint n\u2009-\u20091 integer. The integers should be separated by spaces. The i-th number should equal the number of fools who can go on the i-th road. The roads are numbered starting from one in the order, in which they occur in the input.\n\nIn the first sample the fool number one goes on the first and third road and the fool number 3 goes on the second, first and fourth ones.\n\nIn the second sample, the fools number 1, 3 and 5 go on the first road, the fool number 5 will go on the second road, on the third road goes the fool number 3, and on the fourth one goes fool number 1."}, {"role": "assistant", "content": "datastructures, dfsandsimilar, trees"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Berland is very concerned with privacy, so almost all plans and blueprints are secret. However, a spy of the neighboring state managed to steal the Bertown subway scheme.\n\nThe Bertown Subway has n stations, numbered from 1 to n, and m bidirectional tunnels connecting them. All Bertown Subway consists of lines. To be more precise, there are two types of lines: circular and radial.\n\nA radial line is a sequence of stations v1,\u2009...,\u2009vk (k\u2009>\u20091), where stations vi and vi\u2009+\u20091 (i\u2009<\u2009k) are connected by a tunnel and no station occurs in the line more than once (vi\u2009\u2260\u2009vj for i\u2009\u2260\u2009j).\n\nA loop line is a series of stations, v1,\u2009...,\u2009vk (k\u2009>\u20092), where stations vi \u0438 vi\u2009+\u20091 are connected by a tunnel. In addition, stations v1 and vk are also connected by a tunnel. No station is occurs in the loop line more than once.\n\nNote that a single station can be passed by any number of lines.\n\nAccording to Berland standards, there can't be more than one tunnel between two stations and each tunnel belongs to exactly one line. Naturally, each line has at least one tunnel. Between any two stations there is the way along the subway tunnels. In addition, in terms of graph theory, a subway is a vertex cactus: if we consider the subway as a graph in which the stations are the vertexes and the edges are tunnels, then each vertex lies on no more than one simple cycle.\n\nUnfortunately, scheme, stolen by the spy, had only the stations and the tunnels. It was impossible to determine to which line every tunnel corresponds. But to sabotage successfully, the spy needs to know what minimum and maximum number of lines may be in the Bertown subway.\n\nHelp him!\n\nThe first line contains two integers n and m (1\u2009\u2264\u2009n\u2009\u2264\u2009105, 0\u2009\u2264\u2009m\u2009\u2264\u20093\u00b7105) \u2014 the number of stations and the number of tunnels, correspondingly.\n\nEach of the next m lines contain two integers \u2014 the numbers of stations connected by the corresponding tunnel. The stations are numbered with integers from 1 to n.\n\nIt is guaranteed that the graph that corresponds to the subway has no multiple edges or loops, it is connected and it is a vertex cactus.\n\nPrint two numbers \u2014 the minimum and maximum number of lines correspondingly.\n\nThe subway scheme with minimum possible number of lines for the second sample is: "}, {"role": "assistant", "content": "graphs, greedy"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "It is dark times in Berland. Berlyand opposition, funded from a neighboring state, has organized a demonstration in Berland capital Bertown. Through the work of intelligence we know that the demonstrations are planned to last for k days.\n\nFortunately, Berland has a special police unit, which can save the country. It has exactly n soldiers numbered from 1 to n. Berland general, the commander of the detachment, must schedule the detachment's work in these difficult k days. In each of these days, the general must send a certain number of police officers to disperse riots. Since the detachment is large and the general is not very smart, he can only select a set of all soldiers numbered from l to r, inclusive, where l and r are selected arbitrarily.\n\nNow the general has exactly two problems. First, he cannot send the same group twice \u2014 then soldiers get bored and they rebel. Second, not all soldiers are equally reliable. Every soldier has a reliability of ai. The reliability of the detachment is counted as the sum of reliabilities of soldiers in it. The reliability of a single soldier can be negative, then when you include him in the detachment, he will only spoil things. The general is distinguished by his great greed and shortsightedness, so each day he sends to the dissolution the most reliable group of soldiers possible (that is, of all the groups that have not been sent yet).\n\nThe Berland Government has decided to know what would be the minimum reliability of the detachment, sent to disperse the demonstrations during these k days. The general himself can not cope with such a difficult task. Help him to not embarrass himself in front of his superiors!\n\nThe first line contains two integers n and k  \u2014 the number of soldiers in the detachment and the number of times somebody goes on duty.\n\nThe second line contains n space-separated integers ai, their absolute value doesn't exceed 109 \u2014 the soldiers' reliabilities.\n\nPlease do not use the %lld specifier to read or write 64-bit integers in \u0421++, it is preferred to use cin, cout streams of the %I64d specifier.\n\nPrint a single number \u2014 the sought minimum reliability of the groups that go on duty during these k days."}, {"role": "assistant", "content": "binarysearch, datastructures, trees"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "As you very well know, this year's funkiest numbers are so called triangular numbers (that is, integers that are representable as , where k is some positive integer), and the coolest numbers are those that are representable as a sum of two triangular numbers.\n\nA well-known hipster Andrew adores everything funky and cool but unfortunately, he isn't good at maths. Given number n, help him define whether this number can be represented by a sum of two triangular numbers (not necessarily different)!\n\nThe first input line contains an integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009109).\n\nPrint \"YES\" (without the quotes), if n can be represented as a sum of two triangular numbers, otherwise print \"NO\" (without the quotes).\n\nIn the first sample number .\n\nIn the second sample number 512 can not be represented as a sum of two triangular numbers."}, {"role": "assistant", "content": "binarysearch, bruteforce, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "In Berland the opposition is going to arrange mass walking on the boulevard. The boulevard consists of n tiles that are lain in a row and are numbered from 1 to n from right to left. The opposition should start walking on the tile number 1 and the finish on the tile number n. During the walk it is allowed to move from right to left between adjacent tiles in a row, and jump over a tile. More formally, if you are standing on the tile number i (i\u2009<\u2009n\u2009-\u20091), you can reach the tiles number i\u2009+\u20091 or the tile number i\u2009+\u20092 from it (if you stand on the tile number n\u2009-\u20091, you can only reach tile number n). We can assume that all the opposition movements occur instantaneously.\n\nIn order to thwart an opposition rally, the Berland bloody regime organized the rain. The tiles on the boulevard are of poor quality and they are rapidly destroyed in the rain. We know that the i-th tile is destroyed after ai days of rain (on day ai tile isn't destroyed yet, and on day ai\u2009+\u20091 it is already destroyed). Of course, no one is allowed to walk on the destroyed tiles! So the walk of the opposition is considered thwarted, if either the tile number 1 is broken, or the tile number n is broken, or it is impossible to reach the tile number n from the tile number 1 if we can walk on undestroyed tiles.\n\nThe opposition wants to gather more supporters for their walk. Therefore, the more time they have to pack, the better. Help the opposition to calculate how much time they still have and tell us for how many days the walk from the tile number 1 to the tile number n will be possible.\n\nThe first line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009103) \u2014 the boulevard's length in tiles.\n\nThe second line contains n space-separated integers ai \u2014 the number of days after which the i-th tile gets destroyed (1\u2009\u2264\u2009ai\u2009\u2264\u2009103). \n\nPrint a single number \u2014 the sought number of days.\n\nIn the first sample the second tile gets destroyed after day three, and the only path left is 1\u2009\u2192\u20093\u2009\u2192\u20094. After day five there is a two-tile gap between the first and the last tile, you can't jump over it.\n\nIn the second sample path 1\u2009\u2192\u20093\u2009\u2192\u20095 is available up to day five, inclusive. On day six the last tile is destroyed and the walk is thwarted."}, {"role": "assistant", "content": "bruteforce, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The ancient Berlanders believed that the longer the name, the more important its bearer is. Thus, Berland kings were famous for their long names. But long names are somewhat inconvenient, so the Berlanders started to abbreviate the names of their kings. They called every king by the first letters of its name. Thus, the king, whose name was Victorious Vasily Pupkin, was always called by the berlanders VVP.\n\nIn Berland over its long history many dynasties of kings replaced each other, but they were all united by common traditions. Thus, according to one Berland traditions, to maintain stability in the country, the first name of the heir should be the same as the last name his predecessor (hence, the first letter of the abbreviated name of the heir coincides with the last letter of the abbreviated name of the predecessor). Berlanders appreciate stability, so this tradition has never been broken. Also Berlanders like perfection, so another tradition requires that the first name of the first king in the dynasty coincides with the last name of the last king in this dynasty (hence, the first letter of the abbreviated name of the first king coincides with the last letter of the abbreviated name of the last king). This tradition, of course, has also been always observed.\n\nThe name of a dynasty is formed by very simple rules: we take all the short names of the kings in the order in which they ruled, and write them in one line. Thus, a dynasty of kings \"ab\" and \"ba\" is called \"abba\", and the dynasty, which had only the king \"abca\", is called \"abca\".\n\nVasya, a historian, has recently found a list of abbreviated names of all Berland kings and their relatives. Help Vasya to find the maximally long name of the dynasty that could have existed in Berland.\n\nNote that in his list all the names are ordered by the time, that is, if name A is earlier in the list than B, then if A and B were kings, then king A ruled before king B.\n\nThe first line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u20095\u00b7105) \u2014 the number of names in Vasya's list. Next n lines contain n abbreviated names, one per line. An abbreviated name is a non-empty sequence of lowercase Latin letters. Its length does not exceed 10 characters.\n\nPrint a single number \u2014 length of the sought dynasty's name in letters.\n\nIf Vasya's list is wrong and no dynasty can be found there, print a single number 0.\n\nIn the first sample two dynasties can exist: the one called \"abcca\" (with the first and second kings) and the one called \"abccba\" (with the first and third kings). \n\nIn the second sample there aren't acceptable dynasties.\n\nThe only dynasty in the third sample consists of one king, his name is \"c\"."}, {"role": "assistant", "content": "dp"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "In the capital city of Berland, Bertown, demonstrations are against the recent election of the King of Berland. Berland opposition, led by Mr. Ovalny, believes that the elections were not fair enough and wants to organize a demonstration at one of the squares.\n\nBertown has n squares, numbered from 1 to n, they are numbered in the order of increasing distance between them and the city center. That is, square number 1 is central, and square number n is the farthest from the center. Naturally, the opposition wants to hold a meeting as close to the city center as possible (that is, they want an square with the minimum number).\n\nThere are exactly k (k\u2009<\u2009n) days left before the demonstration. Now all squares are free. But the Bertown city administration never sleeps, and the approval of an application for the demonstration threatens to become a very complex process. The process of approval lasts several days, but every day the following procedure takes place:\n\nIn order to organize an event on the square i, the administration needs to spend ai bourles. Because of the crisis the administration has only b bourles to confront the opposition. What is the best square that the opposition can take, if the administration will keep trying to occupy the square in question each time? Note that the administration's actions always depend only on the actions of the opposition.\n\nThe first line contains two integers n and k \u2014 the number of squares and days left before the meeting, correspondingly (1\u2009\u2264\u2009k\u2009<\u2009n\u2009\u2264\u2009105).\n\nThe second line contains a single integer b \u2014 the number of bourles the administration has (1\u2009\u2264\u2009b\u2009\u2264\u20091018).\n\nThe third line contains n space-separated integers ai \u2014 the sum of money, needed to organise an event on square i (1\u2009\u2264\u2009ai\u2009\u2264\u2009109).\n\nPlease, do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use the cin, cout streams or the %I64d specifier.\n\nPrint a single number \u2014 the minimum number of the square where the opposition can organize the demonstration.\n\nIn the first sample the opposition can act like this. On day one it applies for square 3. The administration has to organize an event there and end up with 3 bourles. If on the second day the opposition applies for square 2, the administration won't have the money to intervene.\n\nIn the second sample the opposition has only the chance for the last square. If its first move occupies one of the first four squares, the administration is left with at least 4 bourles, which means that next day it can use its next move to move the opposition from any square to the last one.\n\nIn the third sample administration has a lot of money, so opposition can occupy only last square."}, {"role": "assistant", "content": "bruteforce, constructivealgorithms"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "They say that Berland has exactly two problems, fools and roads. Besides, Berland has n cities, populated by the fools and connected by the roads. All Berland roads are bidirectional. As there are many fools in Berland, between each pair of cities there is a path (or else the fools would get upset). Also, between each pair of cities there is no more than one simple path (or else the fools would get lost). \n\nBut that is not the end of Berland's special features. In this country fools sometimes visit each other and thus spoil the roads. The fools aren't very smart, so they always use only the simple paths.\n\nA simple path is the path which goes through every Berland city not more than once.\n\nThe Berland government knows the paths which the fools use. Help the government count for each road, how many distinct fools can go on it.\n\nNote how the fools' paths are given in the input.\n\nThe first line contains a single integer n (2\u2009\u2264\u2009n\u2009\u2264\u2009105) \u2014 the number of cities. \n\nEach of the next n\u2009-\u20091 lines contains two space-separated integers ui,\u2009vi (1\u2009\u2264\u2009ui,\u2009vi\u2009\u2264\u2009n, ui\u2009\u2260\u2009vi), that means that there is a road connecting cities ui and vi. \n\nThe next line contains integer k (0\u2009\u2264\u2009k\u2009\u2264\u2009105) \u2014 the number of pairs of fools who visit each other. \n\nNext k lines contain two space-separated numbers. The i-th line (i\u2009>\u20090) contains numbers ai,\u2009bi (1\u2009\u2264\u2009ai,\u2009bi\u2009\u2264\u2009n). That means that the fool number 2i\u2009-\u20091 lives in city ai and visits the fool number 2i, who lives in city bi. The given pairs describe simple paths, because between every pair of cities there is only one simple path.\n\nPrint n\u2009-\u20091 integer. The integers should be separated by spaces. The i-th number should equal the number of fools who can go on the i-th road. The roads are numbered starting from one in the order, in which they occur in the input.\n\nIn the first sample the fool number one goes on the first and third road and the fool number 3 goes on the second, first and fourth ones.\n\nIn the second sample, the fools number 1, 3 and 5 go on the first road, the fool number 5 will go on the second road, on the third road goes the fool number 3, and on the fourth one goes fool number 1."}, {"role": "assistant", "content": "datastructures, trees"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "After making bad dives into swimming pools, Wilbur wants to build a swimming pool in the shape of a rectangle in his backyard. He has set up coordinate axes, and he wants the sides of the rectangle to be parallel to them. Of course, the area of the rectangle must be positive. Wilbur had all four vertices of the planned pool written on a paper, until his friend came along and erased some of the vertices.\n\nNow Wilbur is wondering, if the remaining n vertices of the initial rectangle give enough information to restore the area of the planned swimming pool.\n\nThe first line of the input contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u20094)\u00a0\u2014 the number of vertices that were not erased by Wilbur's friend.\n\nEach of the following n lines contains two integers xi and yi (\u2009-\u20091000\u2009\u2264\u2009xi,\u2009yi\u2009\u2264\u20091000)\u00a0\u2014the coordinates of the i-th vertex that remains. Vertices are given in an arbitrary order.\n\nIt's guaranteed that these points are distinct vertices of some rectangle, that has positive area and which sides are parallel to the coordinate axes.\n\nPrint the area of the initial rectangle if it could be uniquely determined by the points remaining. Otherwise, print \u2009-\u20091. \n\nIn the first sample, two opposite corners of the initial rectangle are given, and that gives enough information to say that the rectangle is actually a unit square.\n\nIn the second sample there is only one vertex left and this is definitely not enough to uniquely define the area."}, {"role": "assistant", "content": "geometry, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Wilbur the pig is tinkering with arrays again. He has the array a1,\u2009a2,\u2009...,\u2009an initially consisting of n zeros. At one step, he can choose any index i and either add 1 to all elements ai,\u2009ai\u2009+\u20091,\u2009... ,\u2009an or subtract 1 from all elements ai,\u2009ai\u2009+\u20091,\u2009...,\u2009an. His goal is to end up with the array b1,\u2009b2,\u2009...,\u2009bn. \n\nOf course, Wilbur wants to achieve this goal in the minimum number of steps and asks you to compute this value.\n\nThe first line of the input contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009200\u2009000)\u00a0\u2014 the length of the array ai. Initially ai\u2009=\u20090 for every position i, so this array is not given in the input.\n\nThe second line of the input contains n integers b1,\u2009b2,\u2009...,\u2009bn (\u2009-\u2009109\u2009\u2264\u2009bi\u2009\u2264\u2009109).\n\nPrint the minimum number of steps that Wilbur needs to make in order to achieve ai\u2009=\u2009bi for all i.\n\nIn the first sample, Wilbur may successively choose indices 1, 2, 3, 4, and 5, and add 1 to corresponding suffixes.\n\nIn the second sample, Wilbur first chooses indices 1 and 2 and adds 1 to corresponding suffixes, then he chooses index 4 and subtract 1."}, {"role": "assistant", "content": "greedy, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Wilbur is playing with a set of n points on the coordinate plane. All points have non-negative integer coordinates. Moreover, if some point (x, y) belongs to the set, then all points (x', y'), such that 0\u2009\u2264\u2009x'\u2009\u2264\u2009x and 0\u2009\u2264\u2009y'\u2009\u2264\u2009y also belong to this set.\n\nNow Wilbur wants to number the points in the set he has, that is assign them distinct integer numbers from 1 to n. In order to make the numbering aesthetically pleasing, Wilbur imposes the condition that if some point (x, y) gets number i, then all (x',y') from the set, such that x'\u2009\u2265\u2009x and y'\u2009\u2265\u2009y must be assigned a number not less than i. For example, for a set of four points (0, 0), (0, 1), (1, 0) and (1, 1), there are two aesthetically pleasing numberings. One is 1, 2, 3, 4 and another one is 1, 3, 2, 4.\n\nWilbur's friend comes along and challenges Wilbur. For any point he defines it's special value as s(x,\u2009y)\u2009=\u2009y\u2009-\u2009x. Now he gives Wilbur some w1, w2,..., wn, and asks him to find an aesthetically pleasing numbering of the points in the set, such that the point that gets number i has it's special value equal to wi, that is s(xi,\u2009yi)\u2009=\u2009yi\u2009-\u2009xi\u2009=\u2009wi.\n\nNow Wilbur asks you to help him with this challenge.\n\nThe first line of the input consists of a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000)\u00a0\u2014 the number of points in the set Wilbur is playing with.\n\nNext follow n lines with points descriptions. Each line contains two integers x and y (0\u2009\u2264\u2009x,\u2009y\u2009\u2264\u2009100\u2009000), that give one point in Wilbur's set. It's guaranteed that all points are distinct. Also, it is guaranteed that if some point (x, y) is present in the input, then all points (x', y'), such that 0\u2009\u2264\u2009x'\u2009\u2264\u2009x and 0\u2009\u2264\u2009y'\u2009\u2264\u2009y, are also present in the input.\n\nThe last line of the input contains n integers. The i-th of them is wi (\u2009-\u2009100\u2009000\u2009\u2264\u2009wi\u2009\u2264\u2009100\u2009000)\u00a0\u2014 the required special value of the point that gets number i in any aesthetically pleasing numbering.\n\nIf there exists an aesthetically pleasant numbering of points in the set, such that s(xi,\u2009yi)\u2009=\u2009yi\u2009-\u2009xi\u2009=\u2009wi, then print \"YES\" on the first line of the output. Otherwise, print \"NO\".\n\nIf a solution exists, proceed output with n lines. On the i-th of these lines print the point of the set that gets number i. If there are multiple solutions, print any of them.\n\nIn the first sample, point (2, 0) gets number 3, point (0, 0) gets number one, point (1, 0) gets number 2, point (1, 1) gets number 5 and point (0, 1) gets number 4. One can easily check that this numbering is aesthetically pleasing and yi\u2009-\u2009xi\u2009=\u2009wi.\n\nIn the second sample, the special values of the points in the set are 0, \u2009-\u20091, and \u2009-\u20092 while the sequence that the friend gives to Wilbur is 0, 1, 2. Therefore, the answer does not exist."}, {"role": "assistant", "content": "combinatorics, greedy, sortings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Wilbur the pig really wants to be a beaver, so he decided today to pretend he is a beaver and bite at trees to cut them down.\n\nThere are n trees located at various positions on a line. Tree i is located at position xi. All the given positions of the trees are distinct.\n\nThe trees are equal, i.e. each tree has height h. Due to the wind, when a tree is cut down, it either falls left with probability p, or falls right with probability 1\u2009-\u2009p. If a tree hits another tree while falling, that tree will fall in the same direction as the tree that hit it. A tree can hit another tree only if the distance between them is strictly less than h. \n\nFor example, imagine there are 4 trees located at positions 1, 3, 5 and 8, while h\u2009=\u20093 and the tree at position 1 falls right. It hits the tree at position 3 and it starts to fall too. In it's turn it hits the tree at position 5 and it also starts to fall. The distance between 8 and 5 is exactly 3, so the tree at position 8 will not fall.\n\nAs long as there are still trees standing, Wilbur will select either the leftmost standing tree with probability 0.5 or the rightmost standing tree with probability 0.5. Selected tree is then cut down. If there is only one tree remaining, Wilbur always selects it. As the ground is covered with grass, Wilbur wants to know the expected total length of the ground covered with fallen trees after he cuts them all down because he is concerned about his grass-eating cow friends. Please help Wilbur.\n\nThe first line of the input contains two integers, n (1\u2009\u2264\u2009n\u2009\u2264\u20092000) and h (1\u2009\u2264\u2009h\u2009\u2264\u2009108) and a real number p (0\u2009\u2264\u2009p\u2009\u2264\u20091), given with no more than six decimal places.\n\nThe second line of the input contains n integers, x1,\u2009x2,\u2009...,\u2009xn (\u2009-\u2009108\u2009\u2264\u2009xi\u2009\u2264\u2009108) in no particular order.\n\nPrint a single real number\u00a0\u2014 the expected total length of the ground covered by trees when they have all fallen down. Your answer will be considered correct if its absolute or relative error does not exceed 10\u2009-\u20096. \n\nNamely: let's assume that your answer is a, and the answer of the jury is b. The checker program will consider your answer correct, if .\n\nConsider the first example, we have 2 trees with height 2. \n\n 1. Both trees falls left. This can either happen with the right tree falling left first, which has  probability (also knocking down the left tree), or the left tree can fall left and then the right tree can fall left, which has  probability. Total probability is . \n\n 2. Both trees fall right. This is analogous to (1), so the probability of this happening is . \n\n 3. The left tree fall left and the right tree falls right. This is the only remaining scenario so it must have  probability. \n\n Cases 1 and 2 lead to a total of 3 units of ground covered, while case 3 leads to a total of 4 units of ground covered. Thus, the expected value is ."}, {"role": "assistant", "content": "dp, math, probabilities, sortings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Wilbur the pig now wants to play with strings. He has found an n by m table consisting only of the digits from 0 to 9 where the rows are numbered 1 to n and the columns are numbered 1 to m. Wilbur starts at some square and makes certain moves. If he is at square (x, y) and the digit d (0\u2009\u2264\u2009d\u2009\u2264\u20099) is written at position (x, y), then he must move to the square (x\u2009+\u2009ad, y\u2009+\u2009bd), if that square lies within the table, and he stays in the square (x, y) otherwise. Before Wilbur makes a move, he can choose whether or not to write the digit written in this square on the white board. All digits written on the whiteboard form some string. Every time a new digit is written, it goes to the end of the current string.\n\nWilbur has q strings that he is worried about. For each string si, Wilbur wants to know whether there exists a starting position (x, y) so that by making finitely many moves, Wilbur can end up with the string si written on the white board.\n\nThe first line of the input consists of three integers n, m, and q (1\u2009\u2264\u2009n,\u2009m,\u2009q\u2009\u2264\u2009200)\u00a0\u2014 the dimensions of the table and the number of strings to process, respectively.\n\nEach of the next n lines contains m digits from 0 and 9 giving the table itself.\n\nThen follow 10 lines. The i-th of them contains the values ai\u2009-\u20091 and bi\u2009-\u20091 (\u2009-\u2009200\u2009\u2264\u2009ai,\u2009bi\u2009\u2264\u2009200), i.e. the vector that Wilbur uses to make a move from the square with a digit i\u2009-\u20091 in it.\n\nThere are q lines that follow. The i-th of them will contain a string si consisting only of digits from 0 to 9. It is guaranteed that the total length of these q strings won't exceed 1\u2009000\u2009000.\n\nFor each of the q strings, print \"YES\" if Wilbur can choose x and y in order to finish with this string after some finite number of moves. If it's impossible, than print \"NO\" for the corresponding string.\n\nIn the first sample, there is a 1 by 1 table consisting of the only digit 0. The only move that can be made is staying on the square. The first string can be written on the white board by writing 0 repeatedly. The second string cannot be written as there is no 2 on the table."}, {"role": "assistant", "content": "dfsandsimilar, dp, graphs, strings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Find the number of k-divisible numbers on the segment [a,\u2009b]. In other words you need to find the number of such integer values x that a\u2009\u2264\u2009x\u2009\u2264\u2009b and x is divisible by k.\n\nThe only line contains three space-separated integers k, a and b (1\u2009\u2264\u2009k\u2009\u2264\u20091018;\u2009-\u20091018\u2009\u2264\u2009a\u2009\u2264\u2009b\u2009\u2264\u20091018).\n\nPrint the required number."}, {"role": "assistant", "content": "math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "A restaurant received n orders for the rental. Each rental order reserve the restaurant for a continuous period of time, the i-th order is characterized by two time values \u2014 the start time li and the finish time ri (li\u2009\u2264\u2009ri).\n\nRestaurant management can accept and reject orders. What is the maximal number of orders the restaurant can accept?\n\nNo two accepted orders can intersect, i.e. they can't share even a moment of time. If one order ends in the moment other starts, they can't be accepted both.\n\nThe first line contains integer number n (1\u2009\u2264\u2009n\u2009\u2264\u20095\u00b7105) \u2014 number of orders. The following n lines contain integer values li and ri each (1\u2009\u2264\u2009li\u2009\u2264\u2009ri\u2009\u2264\u2009109).\n\nPrint the maximal number of orders that can be accepted."}, {"role": "assistant", "content": "dp, greedy, sortings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "For the given sequence with n different elements find the number of increasing subsequences with k\u2009+\u20091 elements. It is guaranteed that the answer is not greater than 8\u00b71018.\n\nFirst line contain two integer values n and k (1\u2009\u2264\u2009n\u2009\u2264\u2009105,\u20090\u2009\u2264\u2009k\u2009\u2264\u200910) \u2014 the length of sequence and the number of elements in increasing subsequences.\n\nNext n lines contains one integer ai (1\u2009\u2264\u2009ai\u2009\u2264\u2009n) each \u2014 elements of sequence. All values ai are different.\n\nPrint one integer \u2014 the answer to the problem."}, {"role": "assistant", "content": "datastructures, dp"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "In this problem you are to calculate the sum of all integers from 1 to n, but you should take all powers of two with minus in the sum.\n\nFor example, for n\u2009=\u20094 the sum is equal to \u2009-\u20091\u2009-\u20092\u2009+\u20093\u2009-\u20094\u2009=\u2009\u2009-\u20094, because 1, 2 and 4 are 20, 21 and 22 respectively.\n\nCalculate the answer for t values of n.\n\nThe first line of the input contains a single integer t (1\u2009\u2264\u2009t\u2009\u2264\u2009100) \u2014 the number of values of n to be processed.\n\nEach of next t lines contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009109).\n\nPrint the requested sum for each of t integers n given in the input.\n\nThe answer for the first sample is explained in the statement."}, {"role": "assistant", "content": "math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given a string s and should process m queries. Each query is described by two 1-based indices li, ri and integer ki. It means that you should cyclically shift the substring s[li... ri] ki times. The queries should be processed one after another in the order they are given.\n\nOne operation of a cyclic shift (rotation) is equivalent to moving the last character to the position of the first character and shifting all other characters one position to the right.\n\nFor example, if the string s is abacaba and the query is l1\u2009=\u20093,\u2009r1\u2009=\u20096,\u2009k1\u2009=\u20091 then the answer is abbacaa. If after that we would process the query l2\u2009=\u20091,\u2009r2\u2009=\u20094,\u2009k2\u2009=\u20092 then we would get the string baabcaa.\n\nThe first line of the input contains the string s (1\u2009\u2264\u2009|s|\u2009\u2264\u200910\u2009000) in its initial state, where |s| stands for the length of s. It contains only lowercase English letters.\n\nSecond line contains a single integer m (1\u2009\u2264\u2009m\u2009\u2264\u2009300)\u00a0\u2014 the number of queries.\n\nThe i-th of the next m lines contains three integers li, ri and ki (1\u2009\u2264\u2009li\u2009\u2264\u2009ri\u2009\u2264\u2009|s|,\u20091\u2009\u2264\u2009ki\u2009\u2264\u20091\u2009000\u2009000)\u00a0\u2014 the description of the i-th query.\n\nPrint the resulting string s after processing all m queries.\n\nThe sample is described in problem statement."}, {"role": "assistant", "content": "implementation, strings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given the set of vectors on the plane, each of them starting at the origin. Your task is to find a pair of vectors with the minimal non-oriented angle between them.\n\nNon-oriented angle is non-negative value, minimal between clockwise and counterclockwise direction angles. Non-oriented angle is always between 0 and \u03c0. For example, opposite directions vectors have angle equals to \u03c0.\n\nFirst line of the input contains a single integer n (2\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000)\u00a0\u2014 the number of vectors.\n\nThe i-th of the following n lines contains two integers xi and yi (|x|,\u2009|y|\u2009\u2264\u200910\u2009000,\u2009x2\u2009+\u2009y2\u2009>\u20090)\u00a0\u2014 the coordinates of the i-th vector. Vectors are numbered from 1 to n in order of appearing in the input. It is guaranteed that no two vectors in the input share the same direction (but they still can have opposite directions).\n\nPrint two integer numbers a and b (a\u2009\u2260\u2009b)\u00a0\u2014 a pair of indices of vectors with the minimal non-oriented angle. You can print the numbers in any order. If there are many possible answers, print any."}, {"role": "assistant", "content": "geometry, sortings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Igor is in the museum and he wants to see as many pictures as possible.\n\nMuseum can be represented as a rectangular field of n\u2009\u00d7\u2009m cells. Each cell is either empty or impassable. Empty cells are marked with '.', impassable cells are marked with '*'. Every two adjacent cells of different types (one empty and one impassable) are divided by a wall containing one picture.\n\nAt the beginning Igor is in some empty cell. At every moment he can move to any empty cell that share a side with the current one.\n\nFor several starting positions you should calculate the maximum number of pictures that Igor can see. Igor is able to see the picture only if he is in the cell adjacent to the wall with this picture. Igor have a lot of time, so he will examine every picture he can see.\n\nFirst line of the input contains three integers n, m and k (3\u2009\u2264\u2009n,\u2009m\u2009\u2264\u20091000,\u20091\u2009\u2264\u2009k\u2009\u2264\u2009min(n\u00b7m,\u2009100\u2009000))\u00a0\u2014 the museum dimensions and the number of starting positions to process.\n\nEach of the next n lines contains m symbols '.', '*' \u2014 the description of the museum. It is guaranteed that all border cells are impassable, so Igor can't go out from the museum.\n\nEach of the last k lines contains two integers x and y (1\u2009\u2264\u2009x\u2009\u2264\u2009n,\u20091\u2009\u2264\u2009y\u2009\u2264\u2009m)\u00a0\u2014 the row and the column of one of Igor's starting positions respectively. Rows are numbered from top to bottom, columns \u2014 from left to right. It is guaranteed that all starting positions are empty cells.\n\nPrint k integers\u00a0\u2014 the maximum number of pictures, that Igor can see if he starts in corresponding position."}, {"role": "assistant", "content": "dfsandsimilar, graphs, shortestpaths"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You have a rectangular chocolate bar consisting of n\u2009\u00d7\u2009m single squares. You want to eat exactly k squares, so you may need to break the chocolate bar. \n\nIn one move you can break any single rectangular piece of chocolate in two rectangular pieces. You can break only by lines between squares: horizontally or vertically. The cost of breaking is equal to square of the break length.\n\nFor example, if you have a chocolate bar consisting of 2\u2009\u00d7\u20093 unit squares then you can break it horizontally and get two 1\u2009\u00d7\u20093 pieces (the cost of such breaking is 32\u2009=\u20099), or you can break it vertically in two ways and get two pieces: 2\u2009\u00d7\u20091 and 2\u2009\u00d7\u20092 (the cost of such breaking is 22\u2009=\u20094).\n\nFor several given values n, m and k find the minimum total cost of breaking. You can eat exactly k squares of chocolate if after all operations of breaking there is a set of rectangular pieces of chocolate with the total size equal to k squares. The remaining n\u00b7m\u2009-\u2009k squares are not necessarily form a single rectangular piece.\n\nThe first line of the input contains a single integer t (1\u2009\u2264\u2009t\u2009\u2264\u200940910)\u00a0\u2014 the number of values n, m and k to process.\n\nEach of the next t lines contains three integers n, m and k (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u200930,\u20091\u2009\u2264\u2009k\u2009\u2264\u2009min(n\u00b7m,\u200950))\u00a0\u2014 the dimensions of the chocolate bar and the number of squares you want to eat respectively.\n\nFor each n, m and k print the minimum total cost needed to break the chocolate bar, in order to make it possible to eat exactly k squares.\n\nIn the first query of the sample one needs to perform two breaks:\n\nIn the second query of the sample one wants to eat 3 unit squares. One can use exactly the same strategy as in the first query of the sample."}, {"role": "assistant", "content": "bruteforce, dp"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Given simple (without self-intersections) n-gon. It is not necessary convex. Also you are given m lines. For each line find the length of common part of the line and the n-gon.\n\nThe boundary of n-gon belongs to polygon. It is possible that n-gon contains 180-degree angles.\n\nThe first line contains integers n and m (3\u2009\u2264\u2009n\u2009\u2264\u20091000;1\u2009\u2264\u2009m\u2009\u2264\u2009100). The following n lines contain coordinates of polygon vertices (in clockwise or counterclockwise direction). All vertices are distinct.\n\nThe following m lines contain line descriptions. Each of them contains two distict points of a line by their coordinates.\n\nAll given in the input coordinates are real numbers, given with at most two digits after decimal point. They do not exceed 105 by absolute values.\n\nPrint m lines, the i-th line should contain the length of common part of the given n-gon and the i-th line. The answer will be considered correct if the absolute or relative error doesn't exceed 10\u2009-\u20096."}, {"role": "assistant", "content": "geometry"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Today Patrick waits for a visit from his friend Spongebob. To prepare for the visit, Patrick needs to buy some goodies in two stores located near his house. There is a d1 meter long road between his house and the first shop and a d2 meter long road between his house and the second shop. Also, there is a road of length d3 directly connecting these two shops to each other. Help Patrick calculate the minimum distance that he needs to walk in order to go to both shops and return to his house.\n\nPatrick always starts at his house. He should visit both shops moving only along the three existing roads and return back to his house. He doesn't mind visiting the same shop or passing the same road multiple times. The only goal is to minimize the total distance traveled.\n\nThe first line of the input contains three integers d1, d2, d3 (1\u2009\u2264\u2009d1,\u2009d2,\u2009d3\u2009\u2264\u2009108)\u00a0\u2014 the lengths of the paths. \n\nPrint the minimum distance that Patrick will have to walk in order to visit both shops and return to his house.\n\nThe first sample is shown on the picture in the problem statement. One of the optimal routes is: house  first shop  second shop  house.\n\nIn the second sample one of the optimal routes is: house  first shop  house  second shop  house."}, {"role": "assistant", "content": "implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "While Patrick was gone shopping, Spongebob decided to play a little trick on his friend. The naughty Sponge browsed through Patrick's personal stuff and found a sequence a1,\u2009a2,\u2009...,\u2009am of length m, consisting of integers from 1 to n, not necessarily distinct. Then he picked some sequence f1,\u2009f2,\u2009...,\u2009fn of length n and for each number ai got number bi\u2009=\u2009fai. To finish the prank he erased the initial sequence ai.\n\nIt's hard to express how sad Patrick was when he returned home from shopping! We will just say that Spongebob immediately got really sorry about what he has done and he is now trying to restore the original sequence. Help him do this or determine that this is impossible.\n\nThe first line of the input contains two integers n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009100\u2009000)\u00a0\u2014 the lengths of sequences fi and bi respectively.\n\nThe second line contains n integers, determining sequence f1,\u2009f2,\u2009...,\u2009fn (1\u2009\u2264\u2009fi\u2009\u2264\u2009n).\n\nThe last line contains m integers, determining sequence b1,\u2009b2,\u2009...,\u2009bm (1\u2009\u2264\u2009bi\u2009\u2264\u2009n).\n\nPrint \"Possible\" if there is exactly one sequence ai, such that bi\u2009=\u2009fai for all i from 1 to m. Then print m integers a1,\u2009a2,\u2009...,\u2009am.\n\nIf there are multiple suitable sequences ai, print \"Ambiguity\".\n\nIf Spongebob has made a mistake in his calculations and no suitable sequence ai exists, print \"Impossible\".\n\nIn the first sample 3 is replaced by 1 and vice versa, while 2 never changes. The answer exists and is unique.\n\nIn the second sample all numbers are replaced by 1, so it is impossible to unambiguously restore the original sequence.\n\nIn the third sample fi\u2009\u2260\u20093 for all i, so no sequence ai transforms into such bi and we can say for sure that Spongebob has made a mistake."}, {"role": "assistant", "content": "implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "One day Squidward, Spongebob and Patrick decided to go to the beach. Unfortunately, the weather was bad, so the friends were unable to ride waves. However, they decided to spent their time building sand castles.\n\nAt the end of the day there were n castles built by friends. Castles are numbered from 1 to n, and the height of the i-th castle is equal to hi. When friends were about to leave, Squidward noticed, that castles are not ordered by their height, and this looks ugly. Now friends are going to reorder the castles in a way to obtain that condition hi\u2009\u2264\u2009hi\u2009+\u20091 holds for all i from 1 to n\u2009-\u20091.\n\nSquidward suggested the following process of sorting castles: \n\nEven Patrick understands that increasing the number of blocks in partitioning will ease the sorting process. Now friends ask you to count the maximum possible number of blocks in a partitioning that satisfies all the above requirements.\n\nThe first line of the input contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000)\u00a0\u2014 the number of castles Spongebob, Patrick and Squidward made from sand during the day.\n\nThe next line contains n integers hi (1\u2009\u2264\u2009hi\u2009\u2264\u2009109). The i-th of these integers corresponds to the height of the i-th castle.\n\nPrint the maximum possible number of blocks in a valid partitioning.\n\nIn the first sample the partitioning looks like that: [1][2][3].\n\nIn the second sample the partitioning is: [2, 1][3, 2]"}, {"role": "assistant", "content": "sortings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Spongebob is already tired trying to reason his weird actions and calculations, so he simply asked you to find all pairs of n and m, such that there are exactly x distinct squares in the table consisting of n rows and m columns. For example, in a 3\u2009\u00d7\u20095 table there are 15 squares with side one, 8 squares with side two and 3 squares with side three. The total number of distinct squares in a 3\u2009\u00d7\u20095 table is 15\u2009+\u20098\u2009+\u20093\u2009=\u200926.\n\nThe first line of the input contains a single integer x (1\u2009\u2264\u2009x\u2009\u2264\u20091018)\u00a0\u2014 the number of squares inside the tables Spongebob is interested in.\n\nFirst print a single integer k\u00a0\u2014 the number of tables with exactly x distinct squares inside.\n\nThen print k pairs of integers describing the tables. Print the pairs in the order of increasing n, and in case of equality\u00a0\u2014 in the order of increasing m.\n\nIn a 1\u2009\u00d7\u20092 table there are 2 1\u2009\u00d7\u20091 squares. So, 2 distinct squares in total.\n\nIn a 2\u2009\u00d7\u20093 table there are 6 1\u2009\u00d7\u20091 squares and 2 2\u2009\u00d7\u20092 squares. That is equal to 8 squares in total."}, {"role": "assistant", "content": "bruteforce, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Rooted tree is a connected graph without any simple cycles with one vertex selected as a root. In this problem the vertex number 1 will always serve as a root.\n\nLowest common ancestor of two vertices u and v is the farthest from the root vertex that lies on both the path from u to the root and on path from v to the root. We will denote it as LCA(u,\u2009v).\n\nSandy had a rooted tree consisting of n vertices that she used to store her nuts. Unfortunately, the underwater storm broke her tree and she doesn't remember all it's edges. She only managed to restore m edges of the initial tree and q triples ai, bi and ci, for which she supposes LCA(ai,\u2009bi)\u2009=\u2009ci.\n\nHelp Sandy count the number of trees of size n with vertex 1 as a root, that match all the information she remembered. If she made a mess and there are no such trees then print 0. Two rooted trees are considered to be distinct if there exists an edge that occur in one of them and doesn't occur in the other one.\n\nThe first line of the input contains three integers n, m and q (1\u2009\u2264\u2009n\u2009\u2264\u200913,\u20090\u2009\u2264\u2009m\u2009<\u2009n,\u20090\u2009\u2264\u2009q\u2009\u2264\u2009100)\u00a0\u2014 the number of vertices, the number of edges and LCA triples remembered by Sandy respectively.\n\nEach of the next m lines contains two integers ui and vi (1\u2009\u2264\u2009ui,\u2009vi\u2009\u2264\u2009n,\u2009ui\u2009\u2260\u2009vi)\u00a0\u2014 the numbers of vertices connected by the i-th edge. It's guaranteed that this set of edges is a subset of edges of some tree.\n\nThe last q lines contain the triplets of numbers ai, bi, ci (1\u2009\u2264\u2009ai,\u2009bi,\u2009ci\u2009\u2264\u2009n). Each of these triples define LCA(ai,\u2009bi)\u2009=\u2009ci. It's not guaranteed that there exists a tree that satisfy all the given LCA conditions.\n\nPrint a single integer\u00a0\u2014 the number of trees of size n that satisfy all the conditions.\n\nIn the second sample correct answer looks like this:\n\nIn the third sample there are two possible trees:\n\nIn the fourth sample the answer is 0 because the information about LCA is inconsistent."}, {"role": "assistant", "content": "bitmasks, dp, trees"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Johnny has a younger sister Anne, who is very clever and smart. As she came home from the kindergarten, she told his brother about the task that her kindergartener asked her to solve. The task was just to construct a triangle out of four sticks of different colours. Naturally, one of the sticks is extra. It is not allowed to break the sticks or use their partial length. Anne has perfectly solved this task, now she is asking Johnny to do the same.\n\nThe boy answered that he would cope with it without any difficulty. However, after a while he found out that different tricky things can occur. It can happen that it is impossible to construct a triangle of a positive area, but it is possible to construct a degenerate triangle. It can be so, that it is impossible to construct a degenerate triangle even. As Johnny is very lazy, he does not want to consider such a big amount of cases, he asks you to help him.\n\nThe first line of the input contains four space-separated positive integer numbers not exceeding 100 \u2014 lengthes of the sticks.\n\nOutput TRIANGLE if it is possible to construct a non-degenerate triangle. Output SEGMENT if the first case cannot take place and it is possible to construct a degenerate triangle. Output IMPOSSIBLE if it is impossible to construct any triangle. Remember that you are to use three sticks. It is not allowed to break the sticks or use their partial length."}, {"role": "assistant", "content": "bruteforce, geometry"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "President of Berland has a very vast office-room, where, apart from him, work his subordinates. Each subordinate, as well as President himself, has his own desk of a unique colour. Each desk is rectangular, and its sides are parallel to the office walls. One day President decided to establish an assembly, of which all his deputies will be members. Unfortunately, he does not remember the exact amount of his deputies, but he remembers that the desk of each his deputy is adjacent to his own desk, that is to say, the two desks (President's and each deputy's) have a common side of a positive length.\n\nThe office-room plan can be viewed as a matrix with n rows and m columns. Each cell of this matrix is either empty, or contains a part of a desk. An uppercase Latin letter stands for each desk colour. The \u00abperiod\u00bb character (\u00ab.\u00bb) stands for an empty cell. \n\nThe first line contains two separated by a space integer numbers n, m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009100) \u2014 the length and the width of the office-room, and c character \u2014 the President's desk colour. The following n lines contain m characters each \u2014 the office-room description. It is guaranteed that the colour of each desk is unique, and each desk represents a continuous subrectangle of the given matrix. All colours are marked by uppercase Latin letters.\n\nPrint the only number \u2014 the amount of President's deputies."}, {"role": "assistant", "content": "implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Alice and Bob like games. And now they are ready to start a new game. They have placed n chocolate bars in a line. Alice starts to eat chocolate bars one by one from left to right, and Bob \u2014 from right to left. For each chocololate bar the time, needed for the player to consume it, is known (Alice and Bob eat them with equal speed). When the player consumes a chocolate bar, he immediately starts with another. It is not allowed to eat two chocolate bars at the same time, to leave the bar unfinished and to make pauses. If both players start to eat the same bar simultaneously, Bob leaves it to Alice as a true gentleman.\n\nHow many bars each of the players will consume?\n\nThe first line contains one integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105) \u2014 the amount of bars on the table. The second line contains a sequence t1,\u2009t2,\u2009...,\u2009tn (1\u2009\u2264\u2009ti\u2009\u2264\u20091000), where ti is the time (in seconds) needed to consume the i-th bar (in the order from left to right).\n\nPrint two numbers a and b, where a is the amount of bars consumed by Alice, and b is the amount of bars consumed by Bob."}, {"role": "assistant", "content": "greedy, twopointers"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "This is simplified version of the problem used on the original contest. The original problem seems to have too difiicult solution. The constraints for input data have been reduced.\n\nPolycarp likes to play computer role-playing game \u00abLizards and Basements\u00bb. At the moment he is playing it as a magician. At one of the last levels he has to fight the line of archers. The only spell with which he can damage them is a fire ball. If Polycarp hits the i-th archer with his fire ball (they are numbered from left to right), the archer loses a health points. At the same time the spell damages the archers adjacent to the i-th (if any) \u2014 they lose b (1\u2009\u2264\u2009b\u2009<\u2009a\u2009\u2264\u200910) health points each.\n\nAs the extreme archers (i.e. archers numbered 1 and n) are very far, the fire ball cannot reach them. Polycarp can hit any other archer with his fire ball.\n\nThe amount of health points for each archer is known. An archer will be killed when this amount is less than 0. What is the minimum amount of spells Polycarp can use to kill all the enemies?\n\nPolycarp can throw his fire ball into an archer if the latter is already killed.\n\nThe first line of the input contains three integers n,\u2009a,\u2009b (3\u2009\u2264\u2009n\u2009\u2264\u200910; 1\u2009\u2264\u2009b\u2009<\u2009a\u2009\u2264\u200910). The second line contains a sequence of n integers \u2014 h1,\u2009h2,\u2009...,\u2009hn (1\u2009\u2264\u2009hi\u2009\u2264\u200915), where hi is the amount of health points the i-th archer has.\n\nIn the first line print t \u2014 the required minimum amount of fire balls.\n\nIn the second line print t numbers \u2014 indexes of the archers that Polycarp should hit to kill all the archers in t shots. All these numbers should be between 2 and n\u2009-\u20091. Separate numbers with spaces. If there are several solutions, output any of them. Print numbers in any order."}, {"role": "assistant", "content": "bruteforce, dp"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "There are several days left before the fiftieth birthday of a famous Berland's writer Berlbury. In this connection the local library decided to make an exposition of the works of this famous science-fiction writer. It was decided as well that it is necessary to include into the exposition only those books that were published during a particular time period. It is obvious that if the books differ much in size, the visitors will not like it. That was why the organizers came to the opinion, that the difference between the highest and the lowest books in the exposition should be not more than k millimeters.\n\nThe library has n volumes of books by Berlbury, arranged in chronological order of their appearance. The height of each book in millimeters is know, it is hi. As Berlbury is highly respected in the city, the organizers want to include into the exposition as many books as possible, and to find out what periods of his creative work they will manage to cover. You are asked to help the organizers cope with this hard task.\n\nThe first line of the input data contains two integer numbers separated by a space n (1\u2009\u2264\u2009n\u2009\u2264\u2009105) and k (0\u2009\u2264\u2009k\u2009\u2264\u2009106) \u2014 the amount of books by Berlbury in the library, and the maximum allowed height difference between the lowest and the highest books. The second line contains n integer numbers separated by a space. Each number hi (1\u2009\u2264\u2009hi\u2009\u2264\u2009106) is the height of the i-th book in millimeters.\n\nIn the first line of the output data print two numbers a and b (separate them by a space), where a is the maximum amount of books the organizers can include into the exposition, and b \u2014 the amount of the time periods, during which Berlbury published a books, and the height difference between the lowest and the highest among these books is not more than k milllimeters.\n\nIn each of the following b lines print two integer numbers separated by a space \u2014 indexes of the first and the last volumes from each of the required time periods of Berlbury's creative work."}, {"role": "assistant", "content": "binarysearch, datastructures, dsu, trees, twopointers"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "One morning the Cereal Guy found out that all his cereal flakes were gone. He found a note instead of them. It turned out that his smart roommate hid the flakes in one of n boxes. The boxes stand in one row, they are numbered from 1 to n from the left to the right. The roommate left hints like \"Hidden to the left of the i-th box\" (\"To the left of i\"), \"Hidden to the right of the i-th box\" (\"To the right of i\"). Such hints mean that there are no flakes in the i-th box as well. The Cereal Guy wants to know the minimal number of boxes he necessarily needs to check to find the flakes considering all the hints. Or he wants to find out that the hints are contradictory and the roommate lied to him, that is, no box has the flakes.\n\nThe first line contains two integers n and m (1\u2009\u2264\u2009n\u2009\u2264\u20091000,\u20090\u2009\u2264\u2009m\u2009\u2264\u20091000) which represent the number of boxes and the number of hints correspondingly. Next m lines contain hints like \"To the left of i\" and \"To the right of i\", where i is integer (1\u2009\u2264\u2009i\u2009\u2264\u2009n). The hints may coincide.\n\nThe answer should contain exactly one integer \u2014 the number of boxes that should necessarily be checked or \"-1\" if the hints are contradictory."}, {"role": "assistant", "content": "implementation, twopointers"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The Cereal Guy's friend Serial Guy likes to watch soap operas. An episode is about to start, and he hasn't washed his plate yet. But he decided to at least put in under the tap to be filled with water. The plate can be represented by a parallelepiped k\u2009\u00d7\u2009n\u2009\u00d7\u2009m, that is, it has k layers (the first layer is the upper one), each of which is a rectangle n\u2009\u00d7\u2009m with empty squares ('.') and obstacles ('#'). The water can only be present in the empty squares. The tap is positioned above the square (x,\u2009y) of the first layer, it is guaranteed that this square is empty. Every minute a cubical unit of water falls into the plate. Find out in how many minutes the Serial Guy should unglue himself from the soap opera and turn the water off for it not to overfill the plate. That is, you should find the moment of time when the plate is absolutely full and is going to be overfilled in the next moment.\n\nNote: the water fills all the area within reach (see sample 4). Water flows in each of the 6 directions, through faces of 1\u2009\u00d7\u20091\u2009\u00d7\u20091 cubes.\n\nThe first line contains three numbers k, n, m (1\u2009\u2264\u2009k,\u2009n,\u2009m\u2009\u2264\u200910) which are the sizes of the plate. Then follow k rectangles consisting of n lines each containing m characters '.' or '#', which represents the \"layers\" of the plate in the order from the top to the bottom. The rectangles are separated by empty lines (see the samples). The last line contains x and y (1\u2009\u2264\u2009x\u2009\u2264\u2009n,\u20091\u2009\u2264\u2009y\u2009\u2264\u2009m) which are the tap's coordinates. x is the number of the line and y is the number of the column. Lines of each layer are numbered from left to right by the integers from 1 to n, columns of each layer are numbered from top to bottom by the integers from 1 to m.\n\nThe answer should contain a single number, showing in how many minutes the plate will be filled."}, {"role": "assistant", "content": "dfsandsimilar, dsu"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Pasha and Akim were making a forest map \u2014 the lawns were the graph's vertexes and the roads joining the lawns were its edges. They decided to encode the number of laughy mushrooms on every lawn in the following way: on every edge between two lawns they wrote two numbers, the greatest common divisor (GCD) and the least common multiple (LCM) of the number of mushrooms on these lawns. But one day Pasha and Akim had an argument about the laughy mushrooms and tore the map. Pasha was left with just some part of it, containing only m roads. Your task is to help Pasha \u2014 use the map he has to restore the number of mushrooms on every lawn. As the result is not necessarily unique, help Pasha to restore any one or report that such arrangement of mushrooms does not exist. It is guaranteed that the numbers on the roads on the initial map were no less that 1 and did not exceed 106.\n\nThe first line contains two numbers n and m () which are the numbers of lawns and roads we know about. Each of the following m lines contains four numbers which are the numbers of lawns the road connects, the GCD and the LCM of the numbers of mushrooms on these lawns (1\u2009\u2264\u2009GCD,\u2009LCM\u2009\u2264\u2009106).\n\nIt is guaranteed, that no road connects lawn to itself, and no two lawns are connected by more than one road.\n\nThe answer should contain \"YES\" or \"NO\" on the first line, saying whether it is possible or not to perform the arrangement. If the answer is \"YES\", print on the following line n numbers which are the numbers of mushrooms on the corresponding lawns."}, {"role": "assistant", "content": "bruteforce, dfsandsimilar"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Misha decided to help Pasha and Akim be friends again. He had a cunning plan \u2014 to destroy all the laughy mushrooms. He knows that the laughy mushrooms can easily burst when they laugh. Mushrooms grow on the lawns. There are a[t] mushrooms on the t-th lawn.\n\nMisha knows that the lawns where the mushrooms grow have a unique ability. A lawn (say, i) can transfer laugh to other lawn (say, j) if there exists an integer (say, b) such, that some permutation of numbers a[i],\u2009a[j] and b is a beautiful triple (i\u2009\u2260\u2009j). A beautiful triple is such three pairwise coprime numbers x,\u2009y,\u2009z, which satisfy the following condition: x2\u2009+\u2009y2\u2009=\u2009z2.\n\nMisha wants to know on which minimal number of lawns he should laugh for all the laughy mushrooms to burst.\n\nThe first line contains one integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009106) which is the number of lawns. The next line contains n integers ai which are the number of mushrooms on the i-lawn (1\u2009\u2264\u2009ai\u2009\u2264\u2009107). All the numbers are different.\n\nPrint a single number \u2014 the minimal number of lawns on which Misha should laugh for all the mushrooms to burst."}, {"role": "assistant", "content": "bruteforce, dsu, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Once upon a time in the thicket of the mushroom forest lived mushroom gnomes. They were famous among their neighbors for their magic mushrooms. Their magic nature made it possible that between every two neighboring mushrooms every minute grew another mushroom with the weight equal to the sum of weights of two neighboring ones. \n\nThe mushroom gnomes loved it when everything was in order, that's why they always planted the mushrooms in one line in the order of their weights' increasing. Well... The gnomes planted the mushrooms and went to eat. After x minutes they returned and saw that new mushrooms had grown up, so that the increasing order had been violated. The gnomes replanted all the mushrooms in the correct order, that is, they sorted the mushrooms in the order of the weights' increasing. And went to eat again (those gnomes were quite big eaters). What total weights modulo p will the mushrooms have in another y minutes?\n\nThe first line contains four integers n, x, y, p (1\u2009\u2264\u2009n\u2009\u2264\u2009106,\u20090\u2009\u2264\u2009x,\u2009y\u2009\u2264\u20091018,\u2009x\u2009+\u2009y\u2009>\u20090,\u20092\u2009\u2264\u2009p\u2009\u2264\u2009109) which represent the number of mushrooms, the number of minutes after the first replanting, the number of minutes after the second replanting and the module. The next line contains n integers ai which represent the mushrooms' weight in the non-decreasing order (0\u2009\u2264\u2009ai\u2009\u2264\u2009109).\n\nPlease, do not use %lld specificator to read or write 64-bit integers in C++. It is preffered to use cin (also you may use %I64d).\n\nThe answer should contain a single number which is the total weights of the mushrooms modulo p in the end after x\u2009+\u2009y minutes."}, {"role": "assistant", "content": "math, matrices"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given string s. Let's call word any largest sequence of consecutive symbols without symbols ',' (comma) and ';' (semicolon). For example, there are four words in string \"aba,123;1a;0\": \"aba\", \"123\", \"1a\", \"0\". A word can be empty: for example, the string s=\";;\" contains three empty words separated by ';'.\n\nYou should find all words in the given string that are nonnegative INTEGER numbers without leading zeroes and build by them new string a. String a should contain all words that are numbers separating them by ',' (the order of numbers should remain the same as in the string s). By all other words you should build string b in the same way (the order of numbers should remain the same as in the string s).\n\nHere strings \"101\", \"0\" are INTEGER numbers, but \"01\" and \"1.0\" are not.\n\nFor example, for the string aba,123;1a;0 the string a would be equal to \"123,0\" and string b would be equal to \"aba,1a\".\n\nThe only line of input contains the string s (1\u2009\u2264\u2009|s|\u2009\u2264\u2009105). The string contains only symbols '.' (ASCII 46), ',' (ASCII 44), ';' (ASCII 59), digits, lowercase and uppercase latin letters.\n\nPrint the string a to the first line and string b to the second line. Each string should be surrounded by quotes (ASCII 34).\n\nIf there are no words that are numbers print dash (ASCII 45) on the first line. If all words are numbers print dash on the second line.\n\nIn the second example the string s contains five words: \"1\", \"\", \"01\", \"a0\", \"\"."}, {"role": "assistant", "content": "implementation, strings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given two arrays of integers a and b. For each element of the second array bj you should find the number of elements in array a that are less than or equal to the value bj.\n\nThe first line contains two integers n,\u2009m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u20092\u00b7105) \u2014 the sizes of arrays a and b.\n\nThe second line contains n integers \u2014 the elements of array a (\u2009-\u2009109\u2009\u2264\u2009ai\u2009\u2264\u2009109).\n\nThe third line contains m integers \u2014 the elements of array b (\u2009-\u2009109\u2009\u2264\u2009bj\u2009\u2264\u2009109).\n\nPrint m integers, separated by spaces: the j-th of which is equal to the number of such elements in array a that are less than or equal to the value bj."}, {"role": "assistant", "content": "binarysearch, datastructures, sortings, twopointers"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "A string is called palindrome if it reads the same from left to right and from right to left. For example \"kazak\", \"oo\", \"r\" and \"mikhailrubinchikkihcniburliahkim\" are palindroms, but strings \"abb\" and \"ij\" are not.\n\nYou are given string s consisting of lowercase Latin letters. At once you can choose any position in the string and change letter in that position to any other lowercase letter. So after each changing the length of the string doesn't change. At first you can change some letters in s. Then you can permute the order of letters as you want. Permutation doesn't count as changes. \n\nYou should obtain palindrome with the minimal number of changes. If there are several ways to do that you should get the lexicographically (alphabetically) smallest palindrome. So firstly you should minimize the number of changes and then minimize the palindrome lexicographically.\n\nThe only line contains string s (1\u2009\u2264\u2009|s|\u2009\u2264\u20092\u00b7105) consisting of only lowercase Latin letters.\n\nPrint the lexicographically smallest palindrome that can be obtained with the minimal number of changes."}, {"role": "assistant", "content": "constructivealgorithms, greedy, strings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given two circles. Find the area of their intersection.\n\nThe first line contains three integers x1,\u2009y1,\u2009r1 (\u2009-\u2009109\u2009\u2264\u2009x1,\u2009y1\u2009\u2264\u2009109,\u20091\u2009\u2264\u2009r1\u2009\u2264\u2009109) \u2014 the position of the center and the radius of the first circle.\n\nThe second line contains three integers x2,\u2009y2,\u2009r2 (\u2009-\u2009109\u2009\u2264\u2009x2,\u2009y2\u2009\u2264\u2009109,\u20091\u2009\u2264\u2009r2\u2009\u2264\u2009109) \u2014 the position of the center and the radius of the second circle.\n\nPrint the area of the intersection of the circles. The answer will be considered correct if the absolute or relative error doesn't exceed 10\u2009-\u20096."}, {"role": "assistant", "content": "geometry"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given a rooted tree with root in vertex 1. Each vertex is coloured in some colour.\n\nLet's call colour c dominating in the subtree of vertex v if there are no other colours that appear in the subtree of vertex v more times than colour c. So it's possible that two or more colours will be dominating in the subtree of some vertex.\n\nThe subtree of vertex v is the vertex v and all other vertices that contains vertex v in each path to the root.\n\nFor each vertex v find the sum of all dominating colours in the subtree of vertex v.\n\nThe first line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105) \u2014 the number of vertices in the tree.\n\nThe second line contains n integers ci (1\u2009\u2264\u2009ci\u2009\u2264\u2009n), ci \u2014 the colour of the i-th vertex.\n\nEach of the next n\u2009-\u20091 lines contains two integers xj,\u2009yj (1\u2009\u2264\u2009xj,\u2009yj\u2009\u2264\u2009n) \u2014 the edge of the tree. The first vertex is the root of the tree.\n\nPrint n integers \u2014 the sums of dominating colours for each vertex."}, {"role": "assistant", "content": "datastructures, dfsandsimilar, dsu, trees"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given an undirected bipartite graph without multiple edges. You should paint the edges of graph to minimal number of colours, so that no two adjacent edges have the same colour.\n\nThe first line contains three integers a,\u2009b,\u2009m (1\u2009\u2264\u2009a,\u2009b\u2009\u2264\u20091000, 0\u2009\u2264\u2009m\u2009\u2264\u2009105), a is the size of the first part, b is the size of the second part, m is the number of edges in the graph.\n\nEach of the next m lines contains two integers x,\u2009y (1\u2009\u2264\u2009x\u2009\u2264\u2009a,\u20091\u2009\u2264\u2009y\u2009\u2264\u2009b), where x is the number of the vertex in the first part and y is the number of the vertex in the second part. It is guaranteed that there are no multiple edges.\n\nIn the first line print integer c \u2014 the minimal number of colours. The second line should contain m integers from 1 to c \u2014 the colours of the edges (in the order they appear in the input).\n\nIf there are several solutions, you can print any one of them."}, {"role": "assistant", "content": "graphs"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "In Absurdistan, there are n towns (numbered 1 through n) and m bidirectional railways. There is also an absurdly simple road network\u00a0\u2014 for each pair of different towns x and y, there is a bidirectional road between towns x and y if and only if there is no railway between them. Travelling to a different town using one railway or one road always takes exactly one hour.\n\nA train and a bus leave town 1 at the same time. They both have the same destination, town n, and don't make any stops on the way (but they can wait in town n). The train can move only along railways and the bus can move only along roads.\n\nYou've been asked to plan out routes for the vehicles; each route can use any road/railway multiple times. One of the most important aspects to consider is safety\u00a0\u2014 in order to avoid accidents at railway crossings, the train and the bus must not arrive at the same town (except town n) simultaneously.\n\nUnder these constraints, what is the minimum number of hours needed for both vehicles to reach town n (the maximum of arrival times of the bus and the train)? Note, that bus and train are not required to arrive to the town n at the same moment of time, but are allowed to do so.\n\nThe first line of the input contains two integers n and m (2\u2009\u2264\u2009n\u2009\u2264\u2009400, 0\u2009\u2264\u2009m\u2009\u2264\u2009n(n\u2009-\u20091)\u2009/\u20092)\u00a0\u2014 the number of towns and the number of railways respectively.\n\nEach of the next m lines contains two integers u and v, denoting a railway between towns u and v (1\u2009\u2264\u2009u,\u2009v\u2009\u2264\u2009n, u\u2009\u2260\u2009v).\n\nYou may assume that there is at most one railway connecting any two towns.\n\nOutput one integer\u00a0\u2014 the smallest possible time of the later vehicle's arrival in town n. If it's impossible for at least one of the vehicles to reach town n, output \u2009-\u20091.\n\nIn the first sample, the train can take the route  and the bus can take the route . Note that they can arrive at town 4 at the same time.\n\nIn the second sample, Absurdistan is ruled by railwaymen. There are no roads, so there's no way for the bus to reach town 4."}, {"role": "assistant", "content": "graphs, shortestpaths"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "A function  is called Lipschitz continuous if there is a real constant K such that the inequality |f(x)\u2009-\u2009f(y)|\u2009\u2264\u2009K\u00b7|x\u2009-\u2009y| holds for all . We'll deal with a more... discrete version of this term.\n\nFor an array , we define it's Lipschitz constant  as follows:\n\nIn other words,  is the smallest non-negative integer such that |h[i]\u2009-\u2009h[j]|\u2009\u2264\u2009L\u00b7|i\u2009-\u2009j| holds for all 1\u2009\u2264\u2009i,\u2009j\u2009\u2264\u2009n.\n\nYou are given an array  of size n and q queries of the form [l,\u2009r]. For each query, consider the subarray ; determine the sum of Lipschitz constants of all subarrays of .\n\nThe first line of the input contains two space-separated integers n and q (2\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000 and 1\u2009\u2264\u2009q\u2009\u2264\u2009100)\u00a0\u2014 the number of elements in array  and the number of queries respectively.\n\nThe second line contains n space-separated integers  ().\n\nThe following q lines describe queries. The i-th of those lines contains two space-separated integers li and ri (1\u2009\u2264\u2009li\u2009<\u2009ri\u2009\u2264\u2009n).\n\nPrint the answers to all queries in the order in which they are given in the input. For the i-th query, print one line containing a single integer\u00a0\u2014 the sum of Lipschitz constants of all subarrays of .\n\nIn the first query of the first sample, the Lipschitz constants of subarrays of  with length at least 2 are:\n\nThe answer to the query is their sum."}, {"role": "assistant", "content": "datastructures, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Kleof\u00e1\u0161 is participating in an n-thlon - a tournament consisting of n different competitions in n different disciplines (numbered 1 through n). There are m participants in the n-thlon and each of them participates in all competitions.\n\nIn each of these n competitions, the participants are given ranks from 1 to m in such a way that no two participants are given the same rank - in other words, the ranks in each competition form a permutation of numbers from 1 to m. The score of a participant in a competition is equal to his/her rank in it.\n\nThe overall score of each participant is computed as the sum of that participant's scores in all competitions.\n\nThe overall rank of each participant is equal to 1\u2009+\u2009k, where k is the number of participants with strictly smaller overall score.\n\nThe n-thlon is over now, but the results haven't been published yet. Kleof\u00e1\u0161 still remembers his ranks in each particular competition; however, he doesn't remember anything about how well the other participants did. Therefore, Kleof\u00e1\u0161 would like to know his expected overall rank.\n\nAll competitors are equally good at each discipline, so all rankings (permutations of ranks of everyone except Kleof\u00e1\u0161) in each competition are equiprobable.\n\nThe first line of the input contains two space-separated integers n (1\u2009\u2264\u2009n\u2009\u2264\u2009100) and m (1\u2009\u2264\u2009m\u2009\u2264\u20091000)\u00a0\u2014 the number of competitions and the number of participants respectively.\n\nThen, n lines follow. The i-th of them contains one integer xi (1\u2009\u2264\u2009xi\u2009\u2264\u2009m)\u00a0\u2014 the rank of Kleof\u00e1\u0161 in the i-th competition.\n\nOutput a single real number \u2013 the expected overall rank of Kleof\u00e1\u0161. Your answer will be considered correct if its relative or absolute error doesn't exceed 10\u2009-\u20099.\n\nNamely: let's assume that your answer is a, and the answer of the jury is b. The checker program will consider your answer correct, if .\n\nIn the first sample, Kleof\u00e1\u0161 has overall score 6. Nobody else can have overall score less than 6 (but it's possible for one other person to have overall score 6 as well), so his overall rank must be 1."}, {"role": "assistant", "content": "dp, math, probabilities"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given a tree T with n vertices (numbered 1 through n) and a letter in each vertex. The tree is rooted at vertex 1.\n\nLet's look at the subtree Tv of some vertex v. It is possible to read a string along each simple path starting at v and ending at some vertex in Tv (possibly v itself). Let's denote the number of distinct strings which can be read this way as . \n\nAlso, there's a number cv assigned to each vertex v. We are interested in vertices with the maximum value of .\n\nYou should compute two statistics: the maximum value of  and the number of vertices v with the maximum .\n\nThe first line of the input contains one integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009300\u2009000)\u00a0\u2014 the number of vertices of the tree.\n\nThe second line contains n space-separated integers ci (0\u2009\u2264\u2009ci\u2009\u2264\u2009109).\n\nThe third line contains a string s consisting of n lowercase English letters\u00a0\u2014 the i-th character of this string is the letter in vertex i.\n\nThe following n\u2009-\u20091 lines describe the tree T. Each of them contains two space-separated integers u and v (1\u2009\u2264\u2009u,\u2009v\u2009\u2264\u2009n) indicating an edge between vertices u and v.\n\nIt's guaranteed that the input will describe a tree.\n\nPrint two lines. \n\nOn the first line, print  over all 1\u2009\u2264\u2009i\u2009\u2264\u2009n. \n\nOn the second line, print the number of vertices v for which .\n\nIn the first sample, the tree looks like this:\n\nThe sets of strings that can be read from individual vertices are:\n\nFinally, the values of  are:\n\nIn the second sample, the values of  are (5,\u20094,\u20092,\u20091,\u20091,\u20091). The distinct strings read in T2 are ; note that  can be read down to vertices 3 or 4."}, {"role": "assistant", "content": "datastructures, dfsandsimilar, dsu, hashing, strings, trees"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "There's a famous museum in the city where Kleof\u00e1\u0161 lives. In the museum, n exhibits (numbered 1 through n) had been displayed for a long time; the i-th of those exhibits has value vi and mass wi. \n\nThen, the museum was bought by a large financial group and started to vary the exhibits. At about the same time, Kleof\u00e1\u0161... gained interest in the museum, so to say.\n\nYou should process q events of three types:\n\nFor each event of type 3, let s(m) be the maximum possible total value of stolen exhibits with total mass \u2009\u2264\u2009m.\n\nFormally, let D be the set of numbers of all exhibits that are currently displayed (so initially D = {1, ..., n}). Let P(D) be the set of all subsets of D and let \n\nThen, s(m) is defined as \n\nCompute s(m) for each . Note that the output follows a special format.\n\nThe first line of the input contains two space-separated integers n and k (1\u2009\u2264\u2009n\u2009\u2264\u20095000, 1\u2009\u2264\u2009k\u2009\u2264\u20091000) \u2014 the initial number of exhibits in the museum and the maximum interesting mass of stolen exhibits. \n\nThen, n lines follow. The i-th of them contains two space-separated positive integers vi and wi (1\u2009\u2264\u2009vi\u2009\u2264\u20091\u2009000\u2009000, 1\u2009\u2264\u2009wi\u2009\u2264\u20091000)\u00a0\u2014 the value and mass of the i-th exhibit.\n\nThe next line contains a single integer q (1\u2009\u2264\u2009q\u2009\u2264\u200930\u2009000)\u00a0\u2014 the number of events.\n\nEach of the next q lines contains the description of one event in the following format:\n\nThere will be at most 10\u2009000 events of type 1 and at least one event of type 3.\n\nAs the number of values s(m) can get large, output the answers to events of type 3 in a special format.\n\nFor each event of type 3, consider the values s(m) computed for the question that Kleof\u00e1\u0161 asked in this event; print one line containing a single number \n\nwhere p\u2009=\u2009107\u2009+\u200919 and q\u2009=\u2009109\u2009+\u20097.\n\nPrint the answers to events of type 3 in the order in which they appear in the input.\n\nIn the first sample, the numbers of displayed exhibits and values s(1),\u2009...,\u2009s(10) for individual events of type 3 are, in order: \n\nThe values of individual exhibits are v1\u2009=\u200930,\u2009v2\u2009=\u200960,\u2009v3\u2009=\u20095,\u2009v4\u2009=\u200942,\u2009v5\u2009=\u200920,\u2009v6\u2009=\u200940 and their masses are w1\u2009=\u20094,\u2009w2\u2009=\u20096,\u2009w3\u2009=\u20091,\u2009w4\u2009=\u20095,\u2009w5\u2009=\u20093,\u2009w6\u2009=\u20096.\n\nIn the second sample, the only question is asked after removing all exhibits, so s(m)\u2009=\u20090 for any m."}, {"role": "assistant", "content": "datastructures, dp"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "After seeing the \"ALL YOUR BASE ARE BELONG TO US\" meme for the first time, numbers X and Y realised that they have different bases, which complicated their relations.\n\nYou're given a number X represented in base bx and a number Y represented in base by. Compare those two numbers.\n\nThe first line of the input contains two space-separated integers n and bx (1\u2009\u2264\u2009n\u2009\u2264\u200910, 2\u2009\u2264\u2009bx\u2009\u2264\u200940), where n is the number of digits in the bx-based representation of X. \n\nThe second line contains n space-separated integers x1,\u2009x2,\u2009...,\u2009xn (0\u2009\u2264\u2009xi\u2009<\u2009bx) \u2014 the digits of X. They are given in the order from the most significant digit to the least significant one.\n\nThe following two lines describe Y in the same way: the third line contains two space-separated integers m and by (1\u2009\u2264\u2009m\u2009\u2264\u200910, 2\u2009\u2264\u2009by\u2009\u2264\u200940, bx\u2009\u2260\u2009by), where m is the number of digits in the by-based representation of Y, and the fourth line contains m space-separated integers y1,\u2009y2,\u2009...,\u2009ym (0\u2009\u2264\u2009yi\u2009<\u2009by) \u2014 the digits of Y.\n\nThere will be no leading zeroes. Both X and Y will be positive. All digits of both numbers are given in the standard decimal numeral system.\n\nOutput a single character (quotes for clarity): \n\nIn the first sample, X\u2009=\u20091011112\u2009=\u20094710\u2009=\u2009Y.\n\nIn the second sample, X\u2009=\u20091023\u2009=\u2009215 and Y\u2009=\u2009245\u2009=\u20091123, thus X\u2009<\u2009Y.\n\nIn the third sample,  and Y\u2009=\u200948031509. We may notice that X starts with much larger digits and bx is much larger than by, so X is clearly larger than Y."}, {"role": "assistant", "content": "bruteforce, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "When Xellos was doing a practice course in university, he once had to measure the intensity of an effect that slowly approached equilibrium. A good way to determine the equilibrium intensity would be choosing a sufficiently large number of consecutive data points that seems as constant as possible and taking their average. Of course, with the usual sizes of data, it's nothing challenging\u00a0\u2014 but why not make a similar programming contest problem while we're at it?\n\nYou're given a sequence of n data points a1,\u2009...,\u2009an. There aren't any big jumps between consecutive data points\u00a0\u2014 for each 1\u2009\u2264\u2009i\u2009<\u2009n, it's guaranteed that |ai\u2009+\u20091\u2009-\u2009ai|\u2009\u2264\u20091.\n\nA range [l,\u2009r] of data points is said to be almost constant if the difference between the largest and the smallest value in that range is at most 1. Formally, let M be the maximum and m the minimum value of ai for l\u2009\u2264\u2009i\u2009\u2264\u2009r; the range [l,\u2009r] is almost constant if M\u2009-\u2009m\u2009\u2264\u20091.\n\nFind the length of the longest almost constant range.\n\nThe first line of the input contains a single integer n (2\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000)\u00a0\u2014 the number of data points.\n\nThe second line contains n integers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009100\u2009000).\n\nPrint a single number\u00a0\u2014 the maximum length of an almost constant range of the given sequence.\n\nIn the first sample, the longest almost constant range is [2,\u20095]; its length (the number of data points in it) is 4.\n\nIn the second sample, there are three almost constant ranges of length 4: [1,\u20094], [6,\u20099] and [7,\u200910]; the only almost constant range of the maximum length 5 is [6,\u200910]."}, {"role": "assistant", "content": "dp, implementation, twopointers"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "In Absurdistan, there are n towns (numbered 1 through n) and m bidirectional railways. There is also an absurdly simple road network\u00a0\u2014 for each pair of different towns x and y, there is a bidirectional road between towns x and y if and only if there is no railway between them. Travelling to a different town using one railway or one road always takes exactly one hour.\n\nA train and a bus leave town 1 at the same time. They both have the same destination, town n, and don't make any stops on the way (but they can wait in town n). The train can move only along railways and the bus can move only along roads.\n\nYou've been asked to plan out routes for the vehicles; each route can use any road/railway multiple times. One of the most important aspects to consider is safety\u00a0\u2014 in order to avoid accidents at railway crossings, the train and the bus must not arrive at the same town (except town n) simultaneously.\n\nUnder these constraints, what is the minimum number of hours needed for both vehicles to reach town n (the maximum of arrival times of the bus and the train)? Note, that bus and train are not required to arrive to the town n at the same moment of time, but are allowed to do so.\n\nThe first line of the input contains two integers n and m (2\u2009\u2264\u2009n\u2009\u2264\u2009400, 0\u2009\u2264\u2009m\u2009\u2264\u2009n(n\u2009-\u20091)\u2009/\u20092)\u00a0\u2014 the number of towns and the number of railways respectively.\n\nEach of the next m lines contains two integers u and v, denoting a railway between towns u and v (1\u2009\u2264\u2009u,\u2009v\u2009\u2264\u2009n, u\u2009\u2260\u2009v).\n\nYou may assume that there is at most one railway connecting any two towns.\n\nOutput one integer\u00a0\u2014 the smallest possible time of the later vehicle's arrival in town n. If it's impossible for at least one of the vehicles to reach town n, output \u2009-\u20091.\n\nIn the first sample, the train can take the route  and the bus can take the route . Note that they can arrive at town 4 at the same time.\n\nIn the second sample, Absurdistan is ruled by railwaymen. There are no roads, so there's no way for the bus to reach town 4."}, {"role": "assistant", "content": "graphs"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "A function  is called Lipschitz continuous if there is a real constant K such that the inequality |f(x)\u2009-\u2009f(y)|\u2009\u2264\u2009K\u00b7|x\u2009-\u2009y| holds for all . We'll deal with a more... discrete version of this term.\n\nFor an array , we define it's Lipschitz constant  as follows:\n\nIn other words,  is the smallest non-negative integer such that |h[i]\u2009-\u2009h[j]|\u2009\u2264\u2009L\u00b7|i\u2009-\u2009j| holds for all 1\u2009\u2264\u2009i,\u2009j\u2009\u2264\u2009n.\n\nYou are given an array  of size n and q queries of the form [l,\u2009r]. For each query, consider the subarray ; determine the sum of Lipschitz constants of all subarrays of .\n\nThe first line of the input contains two space-separated integers n and q (2\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000 and 1\u2009\u2264\u2009q\u2009\u2264\u2009100)\u00a0\u2014 the number of elements in array  and the number of queries respectively.\n\nThe second line contains n space-separated integers  ().\n\nThe following q lines describe queries. The i-th of those lines contains two space-separated integers li and ri (1\u2009\u2264\u2009li\u2009<\u2009ri\u2009\u2264\u2009n).\n\nPrint the answers to all queries in the order in which they are given in the input. For the i-th query, print one line containing a single integer\u00a0\u2014 the sum of Lipschitz constants of all subarrays of .\n\nIn the first query of the first sample, the Lipschitz constants of subarrays of  with length at least 2 are:\n\nThe answer to the query is their sum."}, {"role": "assistant", "content": "math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Kleof\u00e1\u0161 is participating in an n-thlon - a tournament consisting of n different competitions in n different disciplines (numbered 1 through n). There are m participants in the n-thlon and each of them participates in all competitions.\n\nIn each of these n competitions, the participants are given ranks from 1 to m in such a way that no two participants are given the same rank - in other words, the ranks in each competition form a permutation of numbers from 1 to m. The score of a participant in a competition is equal to his/her rank in it.\n\nThe overall score of each participant is computed as the sum of that participant's scores in all competitions.\n\nThe overall rank of each participant is equal to 1\u2009+\u2009k, where k is the number of participants with strictly smaller overall score.\n\nThe n-thlon is over now, but the results haven't been published yet. Kleof\u00e1\u0161 still remembers his ranks in each particular competition; however, he doesn't remember anything about how well the other participants did. Therefore, Kleof\u00e1\u0161 would like to know his expected overall rank.\n\nAll competitors are equally good at each discipline, so all rankings (permutations of ranks of everyone except Kleof\u00e1\u0161) in each competition are equiprobable.\n\nThe first line of the input contains two space-separated integers n (1\u2009\u2264\u2009n\u2009\u2264\u2009100) and m (1\u2009\u2264\u2009m\u2009\u2264\u20091000)\u00a0\u2014 the number of competitions and the number of participants respectively.\n\nThen, n lines follow. The i-th of them contains one integer xi (1\u2009\u2264\u2009xi\u2009\u2264\u2009m)\u00a0\u2014 the rank of Kleof\u00e1\u0161 in the i-th competition.\n\nOutput a single real number \u2013 the expected overall rank of Kleof\u00e1\u0161. Your answer will be considered correct if its relative or absolute error doesn't exceed 10\u2009-\u20099.\n\nNamely: let's assume that your answer is a, and the answer of the jury is b. The checker program will consider your answer correct, if .\n\nIn the first sample, Kleof\u00e1\u0161 has overall score 6. Nobody else can have overall score less than 6 (but it's possible for one other person to have overall score 6 as well), so his overall rank must be 1."}, {"role": "assistant", "content": "probabilities"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Kevin has just recevied his disappointing results on the USA Identification of Cows Olympiad (USAICO) in the form of a binary string of length n. Each character of Kevin's string represents Kevin's score on one of the n questions of the olympiad\u2014'1' for a correctly identified cow and '0' otherwise.\n\nHowever, all is not lost. Kevin is a big proponent of alternative thinking and believes that his score, instead of being the sum of his points, should be the length of the longest alternating subsequence of his string. Here, we define an alternating subsequence of a string as a not-necessarily contiguous subsequence where no two consecutive elements are equal. For example, {0,\u20091,\u20090,\u20091}, {1,\u20090,\u20091}, and {1,\u20090,\u20091,\u20090} are alternating sequences, while {1,\u20090,\u20090} and {0,\u20091,\u20090,\u20091,\u20091} are not.\n\nKevin, being the sneaky little puffball that he is, is willing to hack into the USAICO databases to improve his score. In order to be subtle, he decides that he will flip exactly one substring\u2014that is, take a contiguous non-empty substring of his score and change all '0's in that substring to '1's and vice versa. After such an operation, Kevin wants to know the length of the longest possible alternating subsequence that his string could have.\n\nThe first line contains the number of questions on the olympiad n (1\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000).\n\nThe following line contains a binary string of length n representing Kevin's results on the USAICO. \n\nOutput a single integer, the length of the longest possible alternating subsequence that Kevin can create in his string after flipping a single substring.\n\nIn the first sample, Kevin can flip the bolded substring '10000011' and turn his string into '10011011', which has an alternating subsequence of length 5: '10011011'.\n\nIn the second sample, Kevin can flip the entire string and still have the same score."}, {"role": "assistant", "content": "dp, greedy, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "As behooves any intelligent schoolboy, Kevin Sun is studying psycowlogy, cowculus, and cryptcowgraphy at the Bovinia State University (BGU) under Farmer Ivan. During his Mathematics of Olympiads (MoO) class, Kevin was confronted with a weird functional equation and needs your help. For two fixed integers k and p, where p is an odd prime number, the functional equation states that \n\nfor some function . (This equation should hold for any integer x in the range 0 to p\u2009-\u20091, inclusive.)\n\nIt turns out that f can actually be many different functions. Instead of finding a solution, Kevin wants you to count the number of distinct functions f that satisfy this equation. Since the answer may be very large, you should print your result modulo 109\u2009+\u20097.\n\nThe input consists of two space-separated integers p and k (3\u2009\u2264\u2009p\u2009\u2264\u20091\u2009000\u2009000, 0\u2009\u2264\u2009k\u2009\u2264\u2009p\u2009-\u20091) on a single line. It is guaranteed that p is an odd prime number.\n\nPrint a single integer, the number of distinct functions f modulo 109\u2009+\u20097.\n\nIn the first sample, p\u2009=\u20093 and k\u2009=\u20092. The following functions work: "}, {"role": "assistant", "content": "combinatorics, dfsandsimilar, dsu, math, numbertheory"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Kevin and Nicky Sun have invented a new game called Lieges of Legendre. In this game, two players take turns modifying the game state with Kevin moving first. Initially, the game is set up so that there are n piles of cows, with the i-th pile containing ai cows. During each player's turn, that player calls upon the power of Sunlight, and uses it to either:\n\nThe player who removes the last cow wins. Given n, k, and a sequence a1,\u2009a2,\u2009...,\u2009an, help Kevin and Nicky find the winner, given that both sides play in optimal way.\n\nThe first line of the input contains two space-separated integers n and k (1\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000,\u20091\u2009\u2264\u2009k\u2009\u2264\u2009109).\n\nThe second line contains n integers, a1,\u2009a2,\u2009... an (1\u2009\u2264\u2009ai\u2009\u2264\u2009109) describing the initial state of the game. \n\nOutput the name of the winning player, either \"Kevin\" or \"Nicky\" (without quotes).\n\nIn the second sample, Nicky can win in the following way: Kevin moves first and is forced to remove a cow, so the pile contains two cows after his move. Next, Nicky replaces this pile of size 2 with two piles of size 1. So the game state is now two piles of size 1. Kevin then removes one of the remaining cows and Nicky wins by removing the other."}, {"role": "assistant", "content": "games, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Kevin Sun is ruminating on the origin of cows while standing at the origin of the Cartesian plane. He notices n lines  on the plane, each representable by an equation of the form ax\u2009+\u2009by\u2009=\u2009c. He also observes that no two lines are parallel and that no three lines pass through the same point.\n\nFor each triple (i,\u2009j,\u2009k) such that 1\u2009\u2264\u2009i\u2009<\u2009j\u2009<\u2009k\u2009\u2264\u2009n, Kevin considers the triangle formed by the three lines  . He calls a triangle original if the circumcircle of that triangle passes through the origin. Since Kevin believes that the circles of bovine life are tied directly to such triangles, he wants to know the number of original triangles formed by unordered triples of distinct lines. \n\nRecall that the circumcircle of a triangle is the circle which passes through all the vertices of that triangle.\n\nThe first line of the input contains a single integer n (3\u2009\u2264\u2009n\u2009\u2264\u20092000), the number of lines.\n\nThe next n lines describe lines . The i-th of these lines contains three space-separated integers ai,\u2009bi,\u2009ci (|ai|,\u2009|bi|,\u2009|ci|\u2009\u2264\u200910\u2009000,\u2009ai2\u2009+\u2009bi2\u2009>\u20090), representing the equation aix\u2009+\u2009biy\u2009=\u2009ci of line .\n\nPrint a single integer, the number of triples (i,\u2009j,\u2009k) with i\u2009<\u2009j\u2009<\u2009k such that lines  form an original triangle.\n\nNote that in the first sample, some of the lines pass through the origin.\n\nIn the second sample, there is exactly one triple of lines: y\u2009=\u20091,\u2009x\u2009+\u2009y\u2009=\u20092,\u2009x\u2009-\u2009y\u2009=\u2009\u2009-\u20092. The triangle they form has vertices (0,\u20092),\u2009(1,\u20091),\u2009(\u2009-\u20091,\u20091). The circumcircle of this triangle has equation x2\u2009+\u2009(y\u2009-\u20091)2\u2009=\u20091. This indeed passes through (0,\u20090)."}, {"role": "assistant", "content": "geometry, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "In the land of Bovinia there are n pastures, but no paths connecting the pastures. Of course, this is a terrible situation, so Kevin Sun is planning to rectify it by constructing m undirected paths connecting pairs of distinct pastures. To make transportation more efficient, he also plans to pave some of these new paths.\n\nKevin is very particular about certain aspects of path-paving. Since he loves odd numbers, he wants each pasture to have an odd number of paved paths connected to it. Thus we call a paving sunny if each pasture is incident to an odd number of paved paths. He also enjoys short paths more than long paths, so he would like the longest paved path to be as short as possible. After adding each path, Kevin wants to know if a sunny paving exists for the paths of Bovinia, and if at least one does, the minimum possible length of the longest path in such a paving. Note that \"longest path\" here means maximum-weight edge.\n\nThe first line contains two integers n (2\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000) and m (1\u2009\u2264\u2009m\u2009\u2264\u2009300\u2009000), denoting the number of pastures and paths, respectively. The next m lines each contain three integers ai, bi and li, describing the i-th path. The i-th path connects pastures ai and bi (1\u2009\u2264\u2009ai,\u2009bi\u2009\u2264\u2009n; ai\u2009\u2260\u2009bi) and has length li (1\u2009\u2264\u2009li\u2009\u2264\u2009109). Paths are given in the order in which they are constructed. \n\nOutput m lines. The i-th line should contain a single integer denoting the minimum possible length of the longest path (maximum-weight edge) in a sunny paving using only the first i paths. If Kevin cannot pave a set of paths so that each pasture is incident to an odd number of paved paths, output \u2009-\u20091.\n\nNote that the paving is only hypothetical\u2014your answer after adding the i-th path should not be affected by any of your previous answers.\n\nFor the first sample, these are the paths that Kevin should pave after building the i-th path: \n\nIn the second sample, there never exists a paving that makes Kevin happy."}, {"role": "assistant", "content": "datastructures, divideandconquer, dsu, math, trees"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Kevin Sun has just finished competing in Codeforces Round #334! The round was 120 minutes long and featured five problems with maximum point values of 500, 1000, 1500, 2000, and 2500, respectively. Despite the challenging tasks, Kevin was uncowed and bulldozed through all of them, distinguishing himself from the herd as the best cowmputer scientist in all of Bovinia. Kevin knows his submission time for each problem, the number of wrong submissions that he made on each problem, and his total numbers of successful and unsuccessful hacks. Because Codeforces scoring is complicated, Kevin wants you to write a program to compute his final score.\n\nCodeforces scores are computed as follows: If the maximum point value of a problem is x, and Kevin submitted correctly at minute m but made w wrong submissions, then his score on that problem is . His total score is equal to the sum of his scores for each problem. In addition, Kevin's total score gets increased by 100 points for each successful hack, but gets decreased by 50 points for each unsuccessful hack.\n\nAll arithmetic operations are performed with absolute precision and no rounding. It is guaranteed that Kevin's final score is an integer.\n\nThe first line of the input contains five space-separated integers m1, m2, m3, m4, m5, where mi (0\u2009\u2264\u2009mi\u2009\u2264\u2009119) is the time of Kevin's last submission for problem i. His last submission is always correct and gets accepted.\n\nThe second line contains five space-separated integers w1, w2, w3, w4, w5, where wi (0\u2009\u2264\u2009wi\u2009\u2264\u200910) is Kevin's number of wrong submissions on problem i.\n\nThe last line contains two space-separated integers hs and hu (0\u2009\u2264\u2009hs,\u2009hu\u2009\u2264\u200920), denoting the Kevin's numbers of successful and unsuccessful hacks, respectively.\n\nPrint a single integer, the value of Kevin's final score.\n\nIn the second sample, Kevin takes 119 minutes on all of the problems. Therefore, he gets  of the points on each problem. So his score from solving problems is . Adding in 10\u00b7100\u2009=\u20091000 points from hacks, his total score becomes 3930\u2009+\u20091000\u2009=\u20094930."}, {"role": "assistant", "content": "implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Kevin Sun wants to move his precious collection of n cowbells from Naperthrill to Exeter, where there is actually grass instead of corn. Before moving, he must pack his cowbells into k boxes of a fixed size. In order to keep his collection safe during transportation, he won't place more than two cowbells into a single box. Since Kevin wishes to minimize expenses, he is curious about the smallest size box he can use to pack his entire collection. \n\nKevin is a meticulous cowbell collector and knows that the size of his i-th (1\u2009\u2264\u2009i\u2009\u2264\u2009n) cowbell is an integer si. In fact, he keeps his cowbells sorted by size, so si\u2009-\u20091\u2009\u2264\u2009si for any i\u2009>\u20091. Also an expert packer, Kevin can fit one or two cowbells into a box of size s if and only if the sum of their sizes does not exceed s. Given this information, help Kevin determine the smallest s for which it is possible to put all of his cowbells into k boxes of size s.\n\nThe first line of the input contains two space-separated integers n and k (1\u2009\u2264\u2009n\u2009\u2264\u20092\u00b7k\u2009\u2264\u2009100\u2009000), denoting the number of cowbells and the number of boxes, respectively.\n\nThe next line contains n space-separated integers s1,\u2009s2,\u2009...,\u2009sn (1\u2009\u2264\u2009s1\u2009\u2264\u2009s2\u2009\u2264\u2009...\u2009\u2264\u2009sn\u2009\u2264\u20091\u2009000\u2009000), the sizes of Kevin's cowbells. It is guaranteed that the sizes si are given in non-decreasing order.\n\nPrint a single integer, the smallest s for which it is possible for Kevin to put all of his cowbells into k boxes of size s.\n\nIn the first sample, Kevin must pack his two cowbells into the same box. \n\nIn the second sample, Kevin can pack together the following sets of cowbells: {2,\u20093}, {5} and {9}.\n\nIn the third sample, the optimal solution is {3,\u20095} and {7}."}, {"role": "assistant", "content": "binarysearch, greedy"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Kevin has just recevied his disappointing results on the USA Identification of Cows Olympiad (USAICO) in the form of a binary string of length n. Each character of Kevin's string represents Kevin's score on one of the n questions of the olympiad\u2014'1' for a correctly identified cow and '0' otherwise.\n\nHowever, all is not lost. Kevin is a big proponent of alternative thinking and believes that his score, instead of being the sum of his points, should be the length of the longest alternating subsequence of his string. Here, we define an alternating subsequence of a string as a not-necessarily contiguous subsequence where no two consecutive elements are equal. For example, {0,\u20091,\u20090,\u20091}, {1,\u20090,\u20091}, and {1,\u20090,\u20091,\u20090} are alternating sequences, while {1,\u20090,\u20090} and {0,\u20091,\u20090,\u20091,\u20091} are not.\n\nKevin, being the sneaky little puffball that he is, is willing to hack into the USAICO databases to improve his score. In order to be subtle, he decides that he will flip exactly one substring\u2014that is, take a contiguous non-empty substring of his score and change all '0's in that substring to '1's and vice versa. After such an operation, Kevin wants to know the length of the longest possible alternating subsequence that his string could have.\n\nThe first line contains the number of questions on the olympiad n (1\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000).\n\nThe following line contains a binary string of length n representing Kevin's results on the USAICO. \n\nOutput a single integer, the length of the longest possible alternating subsequence that Kevin can create in his string after flipping a single substring.\n\nIn the first sample, Kevin can flip the bolded substring '10000011' and turn his string into '10011011', which has an alternating subsequence of length 5: '10011011'.\n\nIn the second sample, Kevin can flip the entire string and still have the same score."}, {"role": "assistant", "content": "constructivealgorithms, dp, greedy, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "As behooves any intelligent schoolboy, Kevin Sun is studying psycowlogy, cowculus, and cryptcowgraphy at the Bovinia State University (BGU) under Farmer Ivan. During his Mathematics of Olympiads (MoO) class, Kevin was confronted with a weird functional equation and needs your help. For two fixed integers k and p, where p is an odd prime number, the functional equation states that \n\nfor some function . (This equation should hold for any integer x in the range 0 to p\u2009-\u20091, inclusive.)\n\nIt turns out that f can actually be many different functions. Instead of finding a solution, Kevin wants you to count the number of distinct functions f that satisfy this equation. Since the answer may be very large, you should print your result modulo 109\u2009+\u20097.\n\nThe input consists of two space-separated integers p and k (3\u2009\u2264\u2009p\u2009\u2264\u20091\u2009000\u2009000, 0\u2009\u2264\u2009k\u2009\u2264\u2009p\u2009-\u20091) on a single line. It is guaranteed that p is an odd prime number.\n\nPrint a single integer, the number of distinct functions f modulo 109\u2009+\u20097.\n\nIn the first sample, p\u2009=\u20093 and k\u2009=\u20092. The following functions work: "}, {"role": "assistant", "content": "combinatorics, dsu, math, numbertheory"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Kevin and Nicky Sun have invented a new game called Lieges of Legendre. In this game, two players take turns modifying the game state with Kevin moving first. Initially, the game is set up so that there are n piles of cows, with the i-th pile containing ai cows. During each player's turn, that player calls upon the power of Sunlight, and uses it to either:\n\nThe player who removes the last cow wins. Given n, k, and a sequence a1,\u2009a2,\u2009...,\u2009an, help Kevin and Nicky find the winner, given that both sides play in optimal way.\n\nThe first line of the input contains two space-separated integers n and k (1\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000,\u20091\u2009\u2264\u2009k\u2009\u2264\u2009109).\n\nThe second line contains n integers, a1,\u2009a2,\u2009... an (1\u2009\u2264\u2009ai\u2009\u2264\u2009109) describing the initial state of the game. \n\nOutput the name of the winning player, either \"Kevin\" or \"Nicky\" (without quotes).\n\nIn the second sample, Nicky can win in the following way: Kevin moves first and is forced to remove a cow, so the pile contains two cows after his move. Next, Nicky replaces this pile of size 2 with two piles of size 1. So the game state is now two piles of size 1. Kevin then removes one of the remaining cows and Nicky wins by removing the other."}, {"role": "assistant", "content": "*2200"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "An infinitely long railway has a train consisting of n cars, numbered from 1 to n (the numbers of all the cars are distinct) and positioned in arbitrary order. David Blaine wants to sort the railway cars in the order of increasing numbers. In one move he can make one of the cars disappear from its place and teleport it either to the beginning of the train, or to the end of the train, at his desire. What is the minimum number of actions David Blaine needs to perform in order to sort the train?\n\nThe first line of the input contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000)\u00a0\u2014 the number of cars in the train. \n\nThe second line contains n integers pi (1\u2009\u2264\u2009pi\u2009\u2264\u2009n, pi\u2009\u2260\u2009pj if i\u2009\u2260\u2009j)\u00a0\u2014 the sequence of the numbers of the cars in the train.\n\nPrint a single integer\u00a0\u2014 the minimum number of actions needed to sort the railway cars.\n\nIn the first sample you need first to teleport the 4-th car, and then the 5-th car to the end of the train."}, {"role": "assistant", "content": "constructivealgorithms, greedy"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Student Vladislav came to his programming exam completely unprepared as usual. He got a question about some strange algorithm on a graph\u00a0\u2014 something that will definitely never be useful in real life. He asked a girl sitting next to him to lend him some cheat papers for this questions and found there the following definition:\n\nThe minimum spanning tree T of graph G is such a tree that it contains all the vertices of the original graph G, and the sum of the weights of its edges is the minimum possible among all such trees.\n\nVladislav drew a graph with n vertices and m edges containing no loops and multiple edges. He found one of its minimum spanning trees and then wrote for each edge its weight and whether it is included in the found tree or not. Unfortunately, the piece of paper where the graph was painted is gone and the teacher is getting very angry and demands to see the original graph. Help Vladislav come up with a graph so that the information about the minimum spanning tree remains correct.\n\nThe first line of the input contains two integers n and m ()\u00a0\u2014 the number of vertices and the number of edges in the graph.\n\nEach of the next m lines describes an edge of the graph and consists of two integers aj and bj (1\u2009\u2264\u2009aj\u2009\u2264\u2009109,\u2009bj\u2009=\u2009{0,\u20091}). The first of these numbers is the weight of the edge and the second number is equal to 1 if this edge was included in the minimum spanning tree found by Vladislav, or 0 if it was not.\n\nIt is guaranteed that exactly n\u2009-\u20091 number {bj} are equal to one and exactly m\u2009-\u2009n\u2009+\u20091 of them are equal to zero.\n\nIf Vladislav has made a mistake and such graph doesn't exist, print \u2009-\u20091.\n\nOtherwise print m lines. On the j-th line print a pair of vertices (uj,\u2009vj) (1\u2009\u2264\u2009uj,\u2009vj\u2009\u2264\u2009n,\u2009uj\u2009\u2260\u2009vj), that should be connected by the j-th edge. The edges are numbered in the same order as in the input. The graph, determined by these edges, must be connected, contain no loops or multiple edges and its edges with bj\u2009=\u20091 must define the minimum spanning tree. In case there are multiple possible solutions, print any of them."}, {"role": "assistant", "content": "constructivealgorithms, datastructures, graphs"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Mikhail the Freelancer dreams of two things: to become a cool programmer and to buy a flat in Moscow. To become a cool programmer, he needs at least p experience points, and a desired flat in Moscow costs q dollars. Mikhail is determined to follow his dreams and registered at a freelance site.\n\nHe has suggestions to work on n distinct projects. Mikhail has already evaluated that the participation in the i-th project will increase his experience by ai per day and bring bi dollars per day. As freelance work implies flexible working hours, Mikhail is free to stop working on one project at any time and start working on another project. Doing so, he receives the respective share of experience and money. Mikhail is only trying to become a cool programmer, so he is able to work only on one project at any moment of time.\n\nFind the real value, equal to the minimum number of days Mikhail needs to make his dream come true.\n\nFor example, suppose Mikhail is suggested to work on three projects and a1\u2009=\u20096, b1\u2009=\u20092, a2\u2009=\u20091, b2\u2009=\u20093, a3\u2009=\u20092, b3\u2009=\u20096. Also, p\u2009=\u200920 and q\u2009=\u200920. In order to achieve his aims Mikhail has to work for 2.5 days on both first and third projects. Indeed, a1\u00b72.5\u2009+\u2009a2\u00b70\u2009+\u2009a3\u00b72.5\u2009=\u20096\u00b72.5\u2009+\u20091\u00b70\u2009+\u20092\u00b72.5\u2009=\u200920 and b1\u00b72.5\u2009+\u2009b2\u00b70\u2009+\u2009b3\u00b72.5\u2009=\u20092\u00b72.5\u2009+\u20093\u00b70\u2009+\u20096\u00b72.5\u2009=\u200920.\n\nThe first line of the input contains three integers n, p and q (1\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000,\u20091\u2009\u2264\u2009p,\u2009q\u2009\u2264\u20091\u2009000\u2009000)\u00a0\u2014 the number of projects and the required number of experience and money.\n\nEach of the next n lines contains two integers ai and bi (1\u2009\u2264\u2009ai,\u2009bi\u2009\u2264\u20091\u2009000\u2009000)\u00a0\u2014 the daily increase in experience and daily income for working on the i-th project.\n\nPrint a real value\u00a0\u2014 the minimum number of days Mikhail needs to get the required amount of experience and money. Your answer will be considered correct if its absolute or relative error does not exceed 10\u2009-\u20096. \n\nNamely: let's assume that your answer is a, and the answer of the jury is b. The checker program will consider your answer correct, if .\n\nFirst sample corresponds to the example in the problem statement."}, {"role": "assistant", "content": "geometry"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are playing a board card game. In this game the player has two characteristics, x and y\u00a0\u2014 the white magic skill and the black magic skill, respectively. There are n spell cards lying on the table, each of them has four characteristics, ai, bi, ci and di. In one move a player can pick one of the cards and cast the spell written on it, but only if first two of it's characteristics meet the requirement ai\u2009\u2264\u2009x and bi\u2009\u2264\u2009y, i.e. if the player has enough magic skill to cast this spell. However, after casting the spell the characteristics of a player change and become equal to x\u2009=\u2009ci and y\u2009=\u2009di.\n\nAt the beginning of the game both characteristics of a player are equal to zero. The goal of the game is to cast the n-th spell. Your task is to make it in as few moves as possible. You are allowed to use spell in any order and any number of times (for example, you may not use some spells at all).\n\nThe first line of the input contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000)\u00a0\u2014 the number of cards on the table.\n\nEach of the next n lines contains four integers ai, bi, ci, di (0\u2009\u2264\u2009ai,\u2009bi,\u2009ci,\u2009di\u2009\u2264\u2009109)\u00a0\u2014 the characteristics of the corresponding card.\n\nIn the first line print a single integer k\u00a0\u2014 the minimum number of moves needed to cast the n-th spell and in the second line print k numbers\u00a0\u2014 the indices of the cards in the order in which you should cast them. In case there are multiple possible solutions, print any of them.\n\nIf it is impossible to cast the n-th spell, print \u2009-\u20091."}, {"role": "assistant", "content": "datastructures, dfsandsimilar"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The scientists have recently discovered wormholes\u00a0\u2014 objects in space that allow to travel very long distances between galaxies and star systems. \n\nThe scientists know that there are n galaxies within reach. You are in the galaxy number 1 and you need to get to the galaxy number n. To get from galaxy i to galaxy j, you need to fly onto a wormhole (i,\u2009j) and in exactly one galaxy day you will find yourself in galaxy j. \n\nUnfortunately, the required wormhole is not always available. Every galaxy day they disappear and appear at random. However, the state of wormholes does not change within one galaxy day. A wormhole from galaxy i to galaxy j exists during each galaxy day taken separately with probability pij. You can always find out what wormholes exist at the given moment. At each moment you can either travel to another galaxy through one of wormholes that exist at this moment or you can simply wait for one galaxy day to see which wormholes will lead from your current position at the next day.\n\nYour task is to find the expected value of time needed to travel from galaxy 1 to galaxy n, if you act in the optimal way. It is guaranteed that this expected value exists.\n\nThe first line of the input contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u20091000)\u00a0\u2014 the number of galaxies within reach.\n\nThen follows a matrix of n rows and n columns. Each element pij represents the probability that there is a wormhole from galaxy i to galaxy j. All the probabilities are given in percents and are integers. It is guaranteed that all the elements on the main diagonal are equal to 100.\n\nPrint a single real value\u00a0\u2014 the expected value of the time needed to travel from galaxy 1 to galaxy n if one acts in an optimal way. Your answer will be considered correct if its absolute or relative error does not exceed 10\u2009-\u20096. \n\nNamely: let's assume that your answer is a, and the answer of the jury is b. The checker program will consider your answer correct, if .\n\nIn the second sample the wormhole from galaxy 1 to galaxy 2 appears every day with probability equal to 0.3. The expected value of days one needs to wait before this event occurs is ."}, {"role": "assistant", "content": "probabilities, shortestpaths"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Carl is a beginner magician. He has a blue, b violet and c orange magic spheres. In one move he can transform two spheres of the same color into one sphere of any other color. To make a spell that has never been seen before, he needs at least x blue, y violet and z orange spheres. Can he get them (possible, in multiple actions)?\n\nThe first line of the input contains three integers a, b and c (0\u2009\u2264\u2009a,\u2009b,\u2009c\u2009\u2264\u20091\u2009000\u2009000)\u00a0\u2014 the number of blue, violet and orange spheres that are in the magician's disposal.\n\nThe second line of the input contains three integers, x, y and z (0\u2009\u2264\u2009x,\u2009y,\u2009z\u2009\u2264\u20091\u2009000\u2009000)\u00a0\u2014 the number of blue, violet and orange spheres that he needs to get.\n\nIf the wizard is able to obtain the required numbers of spheres, print \"Yes\". Otherwise, print \"No\".\n\nIn the first sample the wizard has 4 blue and 4 violet spheres. In his first action he can turn two blue spheres into one violet one. After that he will have 2 blue and 5 violet spheres. Then he turns 4 violet spheres into 2 orange spheres and he ends up with 2 blue, 1 violet and 2 orange spheres, which is exactly what he needs."}, {"role": "assistant", "content": "implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The Cybernetics Failures (CF) organisation made a prototype of a bomb technician robot. To find the possible problems it was decided to carry out a series of tests. At the beginning of each test the robot prototype will be placed in cell (x0,\u2009y0) of a rectangular squared field of size x\u2009\u00d7\u2009y, after that a mine will be installed into one of the squares of the field. It is supposed to conduct exactly x\u00b7y tests, each time a mine is installed into a square that has never been used before. The starting cell of the robot always remains the same.\n\nAfter placing the objects on the field the robot will have to run a sequence of commands given by string s, consisting only of characters 'L', 'R', 'U', 'D'. These commands tell the robot to move one square to the left, to the right, up or down, or stay idle if moving in the given direction is impossible. As soon as the robot fulfills all the sequence of commands, it will blow up due to a bug in the code. But if at some moment of time the robot is at the same square with the mine, it will also blow up, but not due to a bug in the code.\n\nMoving to the left decreases coordinate y, and moving to the right increases it. Similarly, moving up decreases the x coordinate, and moving down increases it.\n\nThe tests can go on for very long, so your task is to predict their results. For each k from 0 to length(s) your task is to find in how many tests the robot will run exactly k commands before it blows up.\n\nThe first line of the input contains four integers x, y, x0, y0 (1\u2009\u2264\u2009x,\u2009y\u2009\u2264\u2009500,\u20091\u2009\u2264\u2009x0\u2009\u2264\u2009x,\u20091\u2009\u2264\u2009y0\u2009\u2264\u2009y)\u00a0\u2014 the sizes of the field and the starting coordinates of the robot. The coordinate axis X is directed downwards and axis Y is directed to the right.\n\nThe second line contains a sequence of commands s, which should be fulfilled by the robot. It has length from 1 to 100\u2009000 characters and only consists of characters 'L', 'R', 'U', 'D'.\n\nPrint the sequence consisting of (length(s)\u2009+\u20091) numbers. On the k-th position, starting with zero, print the number of tests where the robot will run exactly k commands before it blows up.\n\nIn the first sample, if we exclude the probable impact of the mines, the robot's route will look like that: ."}, {"role": "assistant", "content": "implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "An infinitely long railway has a train consisting of n cars, numbered from 1 to n (the numbers of all the cars are distinct) and positioned in arbitrary order. David Blaine wants to sort the railway cars in the order of increasing numbers. In one move he can make one of the cars disappear from its place and teleport it either to the beginning of the train, or to the end of the train, at his desire. What is the minimum number of actions David Blaine needs to perform in order to sort the train?\n\nThe first line of the input contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000)\u00a0\u2014 the number of cars in the train. \n\nThe second line contains n integers pi (1\u2009\u2264\u2009pi\u2009\u2264\u2009n, pi\u2009\u2260\u2009pj if i\u2009\u2260\u2009j)\u00a0\u2014 the sequence of the numbers of the cars in the train.\n\nPrint a single integer\u00a0\u2014 the minimum number of actions needed to sort the railway cars.\n\nIn the first sample you need first to teleport the 4-th car, and then the 5-th car to the end of the train."}, {"role": "assistant", "content": "*1600"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Student Vladislav came to his programming exam completely unprepared as usual. He got a question about some strange algorithm on a graph\u00a0\u2014 something that will definitely never be useful in real life. He asked a girl sitting next to him to lend him some cheat papers for this questions and found there the following definition:\n\nThe minimum spanning tree T of graph G is such a tree that it contains all the vertices of the original graph G, and the sum of the weights of its edges is the minimum possible among all such trees.\n\nVladislav drew a graph with n vertices and m edges containing no loops and multiple edges. He found one of its minimum spanning trees and then wrote for each edge its weight and whether it is included in the found tree or not. Unfortunately, the piece of paper where the graph was painted is gone and the teacher is getting very angry and demands to see the original graph. Help Vladislav come up with a graph so that the information about the minimum spanning tree remains correct.\n\nThe first line of the input contains two integers n and m ()\u00a0\u2014 the number of vertices and the number of edges in the graph.\n\nEach of the next m lines describes an edge of the graph and consists of two integers aj and bj (1\u2009\u2264\u2009aj\u2009\u2264\u2009109,\u2009bj\u2009=\u2009{0,\u20091}). The first of these numbers is the weight of the edge and the second number is equal to 1 if this edge was included in the minimum spanning tree found by Vladislav, or 0 if it was not.\n\nIt is guaranteed that exactly n\u2009-\u20091 number {bj} are equal to one and exactly m\u2009-\u2009n\u2009+\u20091 of them are equal to zero.\n\nIf Vladislav has made a mistake and such graph doesn't exist, print \u2009-\u20091.\n\nOtherwise print m lines. On the j-th line print a pair of vertices (uj,\u2009vj) (1\u2009\u2264\u2009uj,\u2009vj\u2009\u2264\u2009n,\u2009uj\u2009\u2260\u2009vj), that should be connected by the j-th edge. The edges are numbered in the same order as in the input. The graph, determined by these edges, must be connected, contain no loops or multiple edges and its edges with bj\u2009=\u20091 must define the minimum spanning tree. In case there are multiple possible solutions, print any of them."}, {"role": "assistant", "content": "graphs"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Mikhail the Freelancer dreams of two things: to become a cool programmer and to buy a flat in Moscow. To become a cool programmer, he needs at least p experience points, and a desired flat in Moscow costs q dollars. Mikhail is determined to follow his dreams and registered at a freelance site.\n\nHe has suggestions to work on n distinct projects. Mikhail has already evaluated that the participation in the i-th project will increase his experience by ai per day and bring bi dollars per day. As freelance work implies flexible working hours, Mikhail is free to stop working on one project at any time and start working on another project. Doing so, he receives the respective share of experience and money. Mikhail is only trying to become a cool programmer, so he is able to work only on one project at any moment of time.\n\nFind the real value, equal to the minimum number of days Mikhail needs to make his dream come true.\n\nFor example, suppose Mikhail is suggested to work on three projects and a1\u2009=\u20096, b1\u2009=\u20092, a2\u2009=\u20091, b2\u2009=\u20093, a3\u2009=\u20092, b3\u2009=\u20096. Also, p\u2009=\u200920 and q\u2009=\u200920. In order to achieve his aims Mikhail has to work for 2.5 days on both first and third projects. Indeed, a1\u00b72.5\u2009+\u2009a2\u00b70\u2009+\u2009a3\u00b72.5\u2009=\u20096\u00b72.5\u2009+\u20091\u00b70\u2009+\u20092\u00b72.5\u2009=\u200920 and b1\u00b72.5\u2009+\u2009b2\u00b70\u2009+\u2009b3\u00b72.5\u2009=\u20092\u00b72.5\u2009+\u20093\u00b70\u2009+\u20096\u00b72.5\u2009=\u200920.\n\nThe first line of the input contains three integers n, p and q (1\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000,\u20091\u2009\u2264\u2009p,\u2009q\u2009\u2264\u20091\u2009000\u2009000)\u00a0\u2014 the number of projects and the required number of experience and money.\n\nEach of the next n lines contains two integers ai and bi (1\u2009\u2264\u2009ai,\u2009bi\u2009\u2264\u20091\u2009000\u2009000)\u00a0\u2014 the daily increase in experience and daily income for working on the i-th project.\n\nPrint a real value\u00a0\u2014 the minimum number of days Mikhail needs to get the required amount of experience and money. Your answer will be considered correct if its absolute or relative error does not exceed 10\u2009-\u20096. \n\nNamely: let's assume that your answer is a, and the answer of the jury is b. The checker program will consider your answer correct, if .\n\nFirst sample corresponds to the example in the problem statement."}, {"role": "assistant", "content": "*2400"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "There are n beacons located at distinct positions on a number line. The i-th beacon has position ai and power level bi. When the i-th beacon is activated, it destroys all beacons to its left (direction of decreasing coordinates) within distance bi inclusive. The beacon itself is not destroyed however. Saitama will activate the beacons one at a time from right to left. If a beacon is destroyed, it cannot be activated.\n\nSaitama wants Genos to add a beacon strictly to the right of all the existing beacons, with any position and any power level, such that the least possible number of beacons are destroyed. Note that Genos's placement of the beacon means it will be the first beacon activated. Help Genos by finding the minimum number of beacons that could be destroyed.\n\nThe first line of input contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000) \u2014 the initial number of beacons.\n\nThe i-th of next n lines contains two integers ai and bi (0\u2009\u2264\u2009ai\u2009\u2264\u20091\u2009000\u2009000, 1\u2009\u2264\u2009bi\u2009\u2264\u20091\u2009000\u2009000)\u00a0\u2014 the position and power level of the i-th beacon respectively. No two beacons will have the same position, so ai\u2009\u2260\u2009aj if i\u2009\u2260\u2009j.\n\nPrint a single integer\u00a0\u2014 the minimum number of beacons that could be destroyed if exactly one beacon is added.\n\nFor the first sample case, the minimum number of beacons destroyed is 1. One way to achieve this is to place a beacon at position 9 with power level 2.\n\nFor the second sample case, the minimum number of beacons destroyed is 3. One way to achieve this is to place a beacon at position 1337 with power level 42."}, {"role": "assistant", "content": "binarysearch, dp"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Genos recently installed the game Zuma on his phone. In Zuma there exists a line of n gemstones, the i-th of which has color ci. The goal of the game is to destroy all the gemstones in the line as quickly as possible.\n\nIn one second, Genos is able to choose exactly one continuous substring of colored gemstones that is a palindrome and remove it from the line. After the substring is removed, the remaining gemstones shift to form a solid line again. What is the minimum number of seconds needed to destroy the entire line?\n\nLet us remind, that the string (or substring) is called palindrome, if it reads same backwards or forward. In our case this means the color of the first gemstone is equal to the color of the last one, the color of the second gemstone is equal to the color of the next to last and so on.\n\nThe first line of input contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009500)\u00a0\u2014 the number of gemstones.\n\nThe second line contains n space-separated integers, the i-th of which is ci (1\u2009\u2264\u2009ci\u2009\u2264\u2009n)\u00a0\u2014 the color of the i-th gemstone in a line.\n\nPrint a single integer\u00a0\u2014 the minimum number of seconds needed to destroy the entire line.\n\nIn the first sample, Genos can destroy the entire line in one second.\n\nIn the second sample, Genos can only destroy one gemstone at a time, so destroying three gemstones takes three seconds.\n\nIn the third sample, to achieve the optimal time of two seconds, destroy palindrome 4 4 first and then destroy palindrome 1 2 3 2 1."}, {"role": "assistant", "content": "dp"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "In the spirit of the holidays, Saitama has given Genos two grid paths of length n (a weird gift even by Saitama's standards). A grid path is an ordered sequence of neighbouring squares in an infinite grid. Two squares are neighbouring if they share a side.\n\nOne example of a grid path is (0,\u20090)\u2009\u2192\u2009(0,\u20091)\u2009\u2192\u2009(0,\u20092)\u2009\u2192\u2009(1,\u20092)\u2009\u2192\u2009(1,\u20091)\u2009\u2192\u2009(0,\u20091)\u2009\u2192\u2009(\u2009-\u20091,\u20091). Note that squares in this sequence might be repeated, i.e. path has self intersections.\n\nMovement within a grid path is restricted to adjacent squares within the sequence. That is, from the i-th square, one can only move to the (i\u2009-\u20091)-th or (i\u2009+\u20091)-th squares of this path. Note that there is only a single valid move from the first and last squares of a grid path. Also note, that even if there is some j-th square of the path that coincides with the i-th square, only moves to (i\u2009-\u20091)-th and (i\u2009+\u20091)-th squares are available. For example, from the second square in the above sequence, one can only move to either the first or third squares.\n\nTo ensure that movement is not ambiguous, the two grid paths will not have an alternating sequence of three squares. For example, a contiguous subsequence (0,\u20090)\u2009\u2192\u2009(0,\u20091)\u2009\u2192\u2009(0,\u20090) cannot occur in a valid grid path.\n\nOne marble is placed on the first square of each grid path. Genos wants to get both marbles to the last square of each grid path. However, there is a catch. Whenever he moves one marble, the other marble will copy its movement if possible. For instance, if one marble moves east, then the other marble will try and move east as well. By try, we mean if moving east is a valid move, then the marble will move east.\n\nMoving north increases the second coordinate by 1, while moving south decreases it by 1. Similarly, moving east increases first coordinate by 1, while moving west decreases it.\n\nGiven these two valid grid paths, Genos wants to know if it is possible to move both marbles to the ends of their respective paths. That is, if it is possible to move the marbles such that both marbles rest on the last square of their respective paths.\n\nThe first line of the input contains a single integer n (2\u2009\u2264\u2009n\u2009\u2264\u20091\u2009000\u2009000)\u00a0\u2014 the length of the paths.\n\nThe second line of the input contains a string consisting of n\u2009-\u20091 characters (each of which is either 'N', 'E', 'S', or 'W')\u00a0\u2014 the first grid path. The characters can be thought of as the sequence of moves needed to traverse the grid path. For example, the example path in the problem statement can be expressed by the string \"NNESWW\".\n\nThe third line of the input contains a string of n\u2009-\u20091 characters (each of which is either 'N', 'E', 'S', or 'W')\u00a0\u2014 the second grid path.\n\nPrint \"YES\" (without quotes) if it is possible for both marbles to be at the end position at the same time. Print \"NO\" (without quotes) otherwise. In both cases, the answer is case-insensitive.\n\nIn the first sample, the first grid path is the one described in the statement. Moreover, the following sequence of moves will get both marbles to the end: NNESWWSWSW.\n\nIn the second sample, no sequence of moves can get both marbles to the end."}, {"role": "assistant", "content": "hashing, strings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Genos and Saitama went shopping for Christmas trees. However, a different type of tree caught their attention, the exalted Power Tree. \n\nA Power Tree starts out as a single root vertex indexed 1. A Power Tree grows through a magical phenomenon known as an update. In an update, a single vertex is added to the tree as a child of some other vertex.\n\nEvery vertex in the tree (the root and all the added vertices) has some value vi associated with it. The power of a vertex is defined as the strength of the multiset composed of the value associated with this vertex (vi) and the powers of its direct children. The strength of a multiset is defined as the sum of all elements in the multiset multiplied by the number of elements in it. Or in other words for some multiset S: \n\nSaitama knows the updates that will be performed on the tree, so he decided to test Genos by asking him queries about the tree during its growth cycle.\n\nAn update is of the form 1\u00a0p\u00a0v, and adds a new vertex with value v as a child of vertex p.\n\nA query is of the form 2\u00a0u, and asks for the power of vertex u.\n\nPlease help Genos respond to these queries modulo 109\u2009+\u20097.\n\nThe first line of the input contains two space separated integers v1 and q (1\u2009\u2264\u2009v1\u2009<\u2009109, 1\u2009\u2264\u2009q\u2009\u2264\u2009200\u2009000) \u2014 the value of vertex 1 and the total number of updates and queries respectively.\n\nThe next q lines contain the updates and queries. Each of them has one of the following forms: \n\nIt is guaranteed that the input will contain at least one query.\n\nFor each query, print out the power of the given vertex modulo 109\u2009+\u20097.\n\nFor the first sample case, after all the updates the graph will have vertices labelled in the following manner: 1 \u2014 2 \u2014 3 \u2014 4 \u2014 5\n\nThese vertices will have corresponding values: 2 \u2014 3 \u2014 5 \u2014 7 \u2014 11\n\nAnd corresponding powers: 344 \u2014 170 \u2014 82 \u2014 36 \u2014 11"}, {"role": "assistant", "content": "datastructures, trees"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Genos has been given n distinct lines on the Cartesian plane. Let  be a list of intersection points of these lines. A single point might appear multiple times in this list if it is the intersection of multiple pairs of lines. The order of the list does not matter.\n\nGiven a query point (p,\u2009q), let  be the corresponding list of distances of all points in  to the query point. Distance here refers to euclidean distance. As a refresher, the euclidean distance between two points (x1,\u2009y1) and (x2,\u2009y2) is .\n\nGenos is given a point (p,\u2009q) and a positive integer m. He is asked to find the sum of the m smallest elements in . Duplicate elements in  are treated as separate elements. Genos is intimidated by Div1 E problems so he asked for your help.\n\nThe first line of the input contains a single integer n (2\u2009\u2264\u2009n\u2009\u2264\u200950\u2009000)\u00a0\u2014 the number of lines.\n\nThe second line contains three integers x, y and m (|x|,\u2009|y|\u2009\u2264\u20091\u2009000\u2009000, )\u00a0\u2014 the encoded coordinates of the query point and the integer m from the statement above. The query point (p,\u2009q) is obtained as . In other words, divide x and y by 1000 to get the actual query point.  denotes the length of the list  and it is guaranteed that .\n\nEach of the next n lines contains two integers ai and bi (|ai|,\u2009|bi|\u2009\u2264\u20091\u2009000\u2009000)\u00a0\u2014 the parameters for a line of the form: . It is guaranteed that no two lines are the same, that is (ai,\u2009bi)\u2009\u2260\u2009(aj,\u2009bj) if i\u2009\u2260\u2009j.\n\nPrint a single real number, the sum of m smallest elements of . Your answer will be considered correct if its absolute or relative error does not exceed 10\u2009-\u20096.\n\nTo clarify, let's assume that your answer is a and the answer of the jury is b. The checker program will consider your answer correct if .\n\nIn the first sample, the three closest points have distances  and .\n\nIn the second sample, the two lines y\u2009=\u20091000x\u2009-\u20091000 and  intersect at (2000000,\u20091999999000). This point has a distance of  from (\u2009-\u20091000,\u2009\u2009-\u20091000).\n\nIn the third sample, the three lines all intersect at the point (1,\u20091). This intersection point is present three times in  since it is the intersection of three pairs of lines. Since the distance between the intersection point and the query point is 2, the answer is three times that or 6."}, {"role": "assistant", "content": "binarysearch, geometry"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Saitama accidentally destroyed a hotel again. To repay the hotel company, Genos has volunteered to operate an elevator in one of its other hotels. The elevator is special \u2014 it starts on the top floor, can only move down, and has infinite capacity. Floors are numbered from 0 to s and elevator initially starts on floor s at time 0.\n\nThe elevator takes exactly 1 second to move down exactly 1 floor and negligible time to pick up passengers. Genos is given a list detailing when and on which floor passengers arrive. Please determine how long in seconds it will take Genos to bring all passengers to floor 0.\n\nThe first line of input contains two integers n and s (1\u2009\u2264\u2009n\u2009\u2264\u2009100, 1\u2009\u2264\u2009s\u2009\u2264\u20091000)\u00a0\u2014 the number of passengers and the number of the top floor respectively.\n\nThe next n lines each contain two space-separated integers fi and ti (1\u2009\u2264\u2009fi\u2009\u2264\u2009s, 1\u2009\u2264\u2009ti\u2009\u2264\u20091000)\u00a0\u2014 the floor and the time of arrival in seconds for the passenger number i.\n\nPrint a single integer\u00a0\u2014 the minimum amount of time in seconds needed to bring all the passengers to floor 0.\n\nIn the first sample, it takes at least 11 seconds to bring all passengers to floor 0. Here is how this could be done:\n\n1. Move to floor 5: takes 2 seconds.\n\n2. Pick up passenger 3.\n\n3. Move to floor 3: takes 2 seconds.\n\n4. Wait for passenger 2 to arrive: takes 4 seconds.\n\n5. Pick up passenger 2.\n\n6. Go to floor 2: takes 1 second.\n\n7. Pick up passenger 1.\n\n8. Go to floor 0: takes 2 seconds.\n\nThis gives a total of 2\u2009+\u20092\u2009+\u20094\u2009+\u20091\u2009+\u20092\u2009=\u200911 seconds."}, {"role": "assistant", "content": "implementation, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Genos needs your help. He was asked to solve the following programming problem by Saitama:\n\nThe length of some string s is denoted |s|. The Hamming distance between two strings s and t of equal length is defined as , where si is the i-th character of s and ti is the i-th character of t. For example, the Hamming distance between string \"0011\" and string \"0110\" is |0\u2009-\u20090|\u2009+\u2009|0\u2009-\u20091|\u2009+\u2009|1\u2009-\u20091|\u2009+\u2009|1\u2009-\u20090|\u2009=\u20090\u2009+\u20091\u2009+\u20090\u2009+\u20091\u2009=\u20092.\n\nGiven two binary strings a and b, find the sum of the Hamming distances between a and all contiguous substrings of b of length |a|.\n\nThe first line of the input contains binary string a (1\u2009\u2264\u2009|a|\u2009\u2264\u2009200\u2009000).\n\nThe second line of the input contains binary string b (|a|\u2009\u2264\u2009|b|\u2009\u2264\u2009200\u2009000).\n\nBoth strings are guaranteed to consist of characters '0' and '1' only.\n\nPrint a single integer\u00a0\u2014 the sum of Hamming distances between a and all contiguous substrings of b of length |a|.\n\nFor the first sample case, there are four contiguous substrings of b of length |a|: \"00\", \"01\", \"11\", and \"11\". The distance between \"01\" and \"00\" is |0\u2009-\u20090|\u2009+\u2009|1\u2009-\u20090|\u2009=\u20091. The distance between \"01\" and \"01\" is |0\u2009-\u20090|\u2009+\u2009|1\u2009-\u20091|\u2009=\u20090. The distance between \"01\" and \"11\" is |0\u2009-\u20091|\u2009+\u2009|1\u2009-\u20091|\u2009=\u20091. Last distance counts twice, as there are two occurrences of string \"11\". The sum of these edit distances is 1\u2009+\u20090\u2009+\u20091\u2009+\u20091\u2009=\u20093.\n\nThe second sample case is described in the statement."}, {"role": "assistant", "content": "combinatorics, strings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "There are n beacons located at distinct positions on a number line. The i-th beacon has position ai and power level bi. When the i-th beacon is activated, it destroys all beacons to its left (direction of decreasing coordinates) within distance bi inclusive. The beacon itself is not destroyed however. Saitama will activate the beacons one at a time from right to left. If a beacon is destroyed, it cannot be activated.\n\nSaitama wants Genos to add a beacon strictly to the right of all the existing beacons, with any position and any power level, such that the least possible number of beacons are destroyed. Note that Genos's placement of the beacon means it will be the first beacon activated. Help Genos by finding the minimum number of beacons that could be destroyed.\n\nThe first line of input contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000) \u2014 the initial number of beacons.\n\nThe i-th of next n lines contains two integers ai and bi (0\u2009\u2264\u2009ai\u2009\u2264\u20091\u2009000\u2009000, 1\u2009\u2264\u2009bi\u2009\u2264\u20091\u2009000\u2009000)\u00a0\u2014 the position and power level of the i-th beacon respectively. No two beacons will have the same position, so ai\u2009\u2260\u2009aj if i\u2009\u2260\u2009j.\n\nPrint a single integer\u00a0\u2014 the minimum number of beacons that could be destroyed if exactly one beacon is added.\n\nFor the first sample case, the minimum number of beacons destroyed is 1. One way to achieve this is to place a beacon at position 9 with power level 2.\n\nFor the second sample case, the minimum number of beacons destroyed is 3. One way to achieve this is to place a beacon at position 1337 with power level 42."}, {"role": "assistant", "content": "dp"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Genos recently installed the game Zuma on his phone. In Zuma there exists a line of n gemstones, the i-th of which has color ci. The goal of the game is to destroy all the gemstones in the line as quickly as possible.\n\nIn one second, Genos is able to choose exactly one continuous substring of colored gemstones that is a palindrome and remove it from the line. After the substring is removed, the remaining gemstones shift to form a solid line again. What is the minimum number of seconds needed to destroy the entire line?\n\nLet us remind, that the string (or substring) is called palindrome, if it reads same backwards or forward. In our case this means the color of the first gemstone is equal to the color of the last one, the color of the second gemstone is equal to the color of the next to last and so on.\n\nThe first line of input contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009500)\u00a0\u2014 the number of gemstones.\n\nThe second line contains n space-separated integers, the i-th of which is ci (1\u2009\u2264\u2009ci\u2009\u2264\u2009n)\u00a0\u2014 the color of the i-th gemstone in a line.\n\nPrint a single integer\u00a0\u2014 the minimum number of seconds needed to destroy the entire line.\n\nIn the first sample, Genos can destroy the entire line in one second.\n\nIn the second sample, Genos can only destroy one gemstone at a time, so destroying three gemstones takes three seconds.\n\nIn the third sample, to achieve the optimal time of two seconds, destroy palindrome 4 4 first and then destroy palindrome 1 2 3 2 1."}, {"role": "assistant", "content": "dp"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "In the spirit of the holidays, Saitama has given Genos two grid paths of length n (a weird gift even by Saitama's standards). A grid path is an ordered sequence of neighbouring squares in an infinite grid. Two squares are neighbouring if they share a side.\n\nOne example of a grid path is (0,\u20090)\u2009\u2192\u2009(0,\u20091)\u2009\u2192\u2009(0,\u20092)\u2009\u2192\u2009(1,\u20092)\u2009\u2192\u2009(1,\u20091)\u2009\u2192\u2009(0,\u20091)\u2009\u2192\u2009(\u2009-\u20091,\u20091). Note that squares in this sequence might be repeated, i.e. path has self intersections.\n\nMovement within a grid path is restricted to adjacent squares within the sequence. That is, from the i-th square, one can only move to the (i\u2009-\u20091)-th or (i\u2009+\u20091)-th squares of this path. Note that there is only a single valid move from the first and last squares of a grid path. Also note, that even if there is some j-th square of the path that coincides with the i-th square, only moves to (i\u2009-\u20091)-th and (i\u2009+\u20091)-th squares are available. For example, from the second square in the above sequence, one can only move to either the first or third squares.\n\nTo ensure that movement is not ambiguous, the two grid paths will not have an alternating sequence of three squares. For example, a contiguous subsequence (0,\u20090)\u2009\u2192\u2009(0,\u20091)\u2009\u2192\u2009(0,\u20090) cannot occur in a valid grid path.\n\nOne marble is placed on the first square of each grid path. Genos wants to get both marbles to the last square of each grid path. However, there is a catch. Whenever he moves one marble, the other marble will copy its movement if possible. For instance, if one marble moves east, then the other marble will try and move east as well. By try, we mean if moving east is a valid move, then the marble will move east.\n\nMoving north increases the second coordinate by 1, while moving south decreases it by 1. Similarly, moving east increases first coordinate by 1, while moving west decreases it.\n\nGiven these two valid grid paths, Genos wants to know if it is possible to move both marbles to the ends of their respective paths. That is, if it is possible to move the marbles such that both marbles rest on the last square of their respective paths.\n\nThe first line of the input contains a single integer n (2\u2009\u2264\u2009n\u2009\u2264\u20091\u2009000\u2009000)\u00a0\u2014 the length of the paths.\n\nThe second line of the input contains a string consisting of n\u2009-\u20091 characters (each of which is either 'N', 'E', 'S', or 'W')\u00a0\u2014 the first grid path. The characters can be thought of as the sequence of moves needed to traverse the grid path. For example, the example path in the problem statement can be expressed by the string \"NNESWW\".\n\nThe third line of the input contains a string of n\u2009-\u20091 characters (each of which is either 'N', 'E', 'S', or 'W')\u00a0\u2014 the second grid path.\n\nPrint \"YES\" (without quotes) if it is possible for both marbles to be at the end position at the same time. Print \"NO\" (without quotes) otherwise. In both cases, the answer is case-insensitive.\n\nIn the first sample, the first grid path is the one described in the statement. Moreover, the following sequence of moves will get both marbles to the end: NNESWWSWSW.\n\nIn the second sample, no sequence of moves can get both marbles to the end."}, {"role": "assistant", "content": "strings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Sean is trying to save a large file to a USB flash drive. He has n USB flash drives with capacities equal to a1,\u2009a2,\u2009...,\u2009an megabytes. The file size is equal to m megabytes. \n\nFind the minimum number of USB flash drives needed to write Sean's file, if he can split the file between drives.\n\nThe first line contains positive integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100) \u2014 the number of USB flash drives.\n\nThe second line contains positive integer m (1\u2009\u2264\u2009m\u2009\u2264\u2009105) \u2014 the size of Sean's file.\n\nEach of the next n lines contains positive integer ai (1\u2009\u2264\u2009ai\u2009\u2264\u20091000) \u2014 the sizes of USB flash drives in megabytes.\n\nIt is guaranteed that the answer exists, i. e. the sum of all ai is not less than m.\n\nPrint the minimum number of USB flash drives to write Sean's file, if he can split the file between drives.\n\nIn the first example Sean needs only two USB flash drives \u2014 the first and the third.\n\nIn the second example Sean needs all three USB flash drives.\n\nIn the third example Sean needs only one USB flash drive and he can use any available USB flash drive \u2014 the first or the second."}, {"role": "assistant", "content": "greedy, implementation, sortings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Emily's birthday is next week and Jack has decided to buy a present for her. He knows she loves books so he goes to the local bookshop, where there are n books on sale from one of m genres.\n\nIn the bookshop, Jack decides to buy two books of different genres.\n\nBased on the genre of books on sale in the shop, find the number of options available to Jack for choosing two books of different genres for Emily. Options are considered different if they differ in at least one book.\n\nThe books are given by indices of their genres. The genres are numbered from 1 to m.\n\nThe first line contains two positive integers n and m (2\u2009\u2264\u2009n\u2009\u2264\u20092\u00b7105,\u20092\u2009\u2264\u2009m\u2009\u2264\u200910) \u2014 the number of books in the bookstore and the number of genres.\n\nThe second line contains a sequence a1,\u2009a2,\u2009...,\u2009an, where ai (1\u2009\u2264\u2009ai\u2009\u2264\u2009m) equals the genre of the i-th book.\n\nIt is guaranteed that for each genre there is at least one book of that genre.\n\nPrint the only integer \u2014 the number of ways in which Jack can choose books.\n\nIt is guaranteed that the answer doesn't exceed the value 2\u00b7109.\n\nThe answer to the first test sample equals 5 as Sasha can choose:"}, {"role": "assistant", "content": "constructivealgorithms, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "In the school computer room there are n servers which are responsible for processing several computing tasks. You know the number of scheduled tasks for each server: there are mi tasks assigned to the i-th server.\n\nIn order to balance the load for each server, you want to reassign some tasks to make the difference between the most loaded server and the least loaded server as small as possible. In other words you want to minimize expression ma\u2009-\u2009mb, where a is the most loaded server and b is the least loaded one.\n\nIn one second you can reassign a single task. Thus in one second you can choose any pair of servers and move a single task from one server to another.\n\nWrite a program to find the minimum number of seconds needed to balance the load of servers.\n\nThe first line contains positive number n (1\u2009\u2264\u2009n\u2009\u2264\u2009105) \u2014 the number of the servers. \n\nThe second line contains the sequence of non-negative integers m1,\u2009m2,\u2009...,\u2009mn (0\u2009\u2264\u2009mi\u2009\u2264\u20092\u00b7104), where mi is the number of tasks assigned to the i-th server.\n\nPrint the minimum number of seconds required to balance the load.\n\nIn the first example two seconds are needed. In each second, a single task from server #2 should be moved to server #1. After two seconds there should be 3 tasks on server #1 and 4 tasks on server #2.\n\nIn the second example the load is already balanced.\n\nA possible sequence of task movements for the third example is:\n\nThe above sequence is one of several possible ways to balance the load of servers in three seconds."}, {"role": "assistant", "content": "implementation, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Nura wants to buy k gadgets. She has only s burles for that. She can buy each gadget for dollars or for pounds. So each gadget is selling only for some type of currency. The type of currency and the cost in that currency are not changing.\n\nNura can buy gadgets for n days. For each day you know the exchange rates of dollar and pound, so you know the cost of conversion burles to dollars or to pounds.\n\nEach day (from 1 to n) Nura can buy some gadgets by current exchange rate. Each day she can buy any gadgets she wants, but each gadget can be bought no more than once during n days.\n\nHelp Nura to find the minimum day index when she will have k gadgets. Nura always pays with burles, which are converted according to the exchange rate of the purchase day. Nura can't buy dollars or pounds, she always stores only burles. Gadgets are numbered with integers from 1 to m in order of their appearing in input.\n\nFirst line contains four integers n,\u2009m,\u2009k,\u2009s (1\u2009\u2264\u2009n\u2009\u2264\u20092\u00b7105,\u20091\u2009\u2264\u2009k\u2009\u2264\u2009m\u2009\u2264\u20092\u00b7105,\u20091\u2009\u2264\u2009s\u2009\u2264\u2009109) \u2014 number of days, total number and required number of gadgets, number of burles Nura has.\n\nSecond line contains n integers ai (1\u2009\u2264\u2009ai\u2009\u2264\u2009106) \u2014 the cost of one dollar in burles on i-th day.\n\nThird line contains n integers bi (1\u2009\u2264\u2009bi\u2009\u2264\u2009106) \u2014 the cost of one pound in burles on i-th day.\n\nEach of the next m lines contains two integers ti,\u2009ci (1\u2009\u2264\u2009ti\u2009\u2264\u20092,\u20091\u2009\u2264\u2009ci\u2009\u2264\u2009106) \u2014 type of the gadget and it's cost. For the gadgets of the first type cost is specified in dollars. For the gadgets of the second type cost is specified in pounds.\n\nIf Nura can't buy k gadgets print the only line with the number -1.\n\nOtherwise the first line should contain integer d \u2014 the minimum day index, when Nura will have k gadgets. On each of the next k lines print two integers qi,\u2009di \u2014 the number of gadget and the day gadget should be bought. All values qi should be different, but the values di can coincide (so Nura can buy several gadgets at one day). The days are numbered from 1 to n.\n\nIn case there are multiple possible solutions, print any of them."}, {"role": "assistant", "content": "binarysearch, greedy, twopointers"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Connected undirected weighted graph without self-loops and multiple edges is given. Graph contains n vertices and m edges.\n\nFor each edge (u,\u2009v) find the minimal possible weight of the spanning tree that contains the edge (u,\u2009v).\n\nThe weight of the spanning tree is the sum of weights of all edges included in spanning tree.\n\nFirst line contains two integers n and m (1\u2009\u2264\u2009n\u2009\u2264\u20092\u00b7105,\u2009n\u2009-\u20091\u2009\u2264\u2009m\u2009\u2264\u20092\u00b7105) \u2014 the number of vertices and edges in graph.\n\nEach of the next m lines contains three integers ui,\u2009vi,\u2009wi (1\u2009\u2264\u2009ui,\u2009vi\u2009\u2264\u2009n,\u2009ui\u2009\u2260\u2009vi,\u20091\u2009\u2264\u2009wi\u2009\u2264\u2009109) \u2014 the endpoints of the i-th edge and its weight.\n\nPrint m lines. i-th line should contain the minimal possible weight of the spanning tree that contains i-th edge.\n\nThe edges are numbered from 1 to m in order of their appearing in input."}, {"role": "assistant", "content": "datastructures, dfsandsimilar, dsu, graphs, trees"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "There are n frogs sitting on the coordinate axis Ox. For each frog two values xi,\u2009ti are known \u2014 the position and the initial length of the tongue of the i-th frog (it is guaranteed that all positions xi are different). m mosquitoes one by one are landing to the coordinate axis. For each mosquito two values are known pj \u2014 the coordinate of the position where the j-th mosquito lands and bj \u2014 the size of the j-th mosquito. Frogs and mosquitoes are represented as points on the coordinate axis.\n\nThe frog can eat mosquito if mosquito is in the same position with the frog or to the right, and the distance between them is not greater than the length of the tongue of the frog.\n\nIf at some moment several frogs can eat a mosquito the leftmost frog will eat it (with minimal xi). After eating a mosquito the length of the tongue of a frog increases with the value of the size of eaten mosquito. It's possible that after it the frog will be able to eat some other mosquitoes (the frog should eat them in this case).\n\nFor each frog print two values \u2014 the number of eaten mosquitoes and the length of the tongue after landing all mosquitoes and after eating all possible mosquitoes by frogs.\n\nEach mosquito is landing to the coordinate axis only after frogs eat all possible mosquitoes landed before. Mosquitoes are given in order of their landing to the coordinate axis.\n\nFirst line contains two integers n,\u2009m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u20092\u00b7105) \u2014 the number of frogs and mosquitoes.\n\nEach of the next n lines contains two integers xi,\u2009ti (0\u2009\u2264\u2009xi,\u2009ti\u2009\u2264\u2009109) \u2014 the position and the initial length of the tongue of the i-th frog. It is guaranteed that all xi are different.\n\nNext m lines contain two integers each pj,\u2009bj (0\u2009\u2264\u2009pj,\u2009bj\u2009\u2264\u2009109) \u2014 the position and the size of the j-th mosquito.\n\nPrint n lines. The i-th line should contain two integer values ci,\u2009li \u2014 the number of mosquitoes eaten by the i-th frog and the length of the tongue of the i-th frog."}, {"role": "assistant", "content": "datastructures, greedy"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Shapur was an extremely gifted student. He was great at everything including Combinatorics, Algebra, Number Theory, Geometry, Calculus, etc. He was not only smart but extraordinarily fast! He could manage to sum 1018 numbers in a single second.\n\nOne day in 230 AD Shapur was trying to find out if any one can possibly do calculations faster than him. As a result he made a very great contest and asked every one to come and take part.\n\nIn his contest he gave the contestants many different pairs of numbers. Each number is made from digits 0 or 1. The contestants should write a new number corresponding to the given pair of numbers. The rule is simple: The i-th digit of the answer is 1 if and only if the i-th digit of the two given numbers differ. In the other case the i-th digit of the answer is 0.\n\nShapur made many numbers and first tried his own speed. He saw that he can perform these operations on numbers of length \u221e (length of a number is number of digits in it) in a glance! He always gives correct answers so he expects the contestants to give correct answers, too. He is a good fellow so he won't give anyone very big numbers and he always gives one person numbers of same length.\n\nNow you are going to take part in Shapur's contest. See if you are faster and more accurate.\n\nThere are two lines in each input. Each of them contains a single number. It is guaranteed that the numbers are made from 0 and 1 only and that their length is same. The numbers may start with 0. The length of each number doesn't exceed 100.\n\nWrite one line \u2014 the corresponding answer. Do not omit the leading 0s."}, {"role": "assistant", "content": "implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "After the contest in comparing numbers, Shapur's teacher found out that he is a real genius and that no one could possibly do the calculations faster than him even using a super computer!\n\nSome days before the contest, the teacher took a very simple-looking exam and all his n students took part in the exam. The teacher gave them 3 strings and asked them to concatenate them. Concatenating strings means to put them in some arbitrary order one after the other. For example from concatenating Alireza and Amir we can get to AlirezaAmir or AmirAlireza depending on the order of concatenation.\n\nUnfortunately enough, the teacher forgot to ask students to concatenate their strings in a pre-defined order so each student did it the way he/she liked.\n\nNow the teacher knows that Shapur is such a fast-calculating genius boy and asks him to correct the students' papers.\n\nShapur is not good at doing such a time-taking task. He rather likes to finish up with it as soon as possible and take his time to solve 3-SAT in polynomial time. Moreover, the teacher has given some advice that Shapur has to follow. Here's what the teacher said: \n\nThe first three lines contain a string each. These are the initial strings. They consists only of lowercase and uppercase Latin letters and signs (\"-\", \";\" and \"_\"). All the initial strings have length from 1 to 100, inclusively.\n\nIn the fourth line there is a single integer n (0\u2009\u2264\u2009n\u2009\u2264\u20091000), the number of students.\n\nNext n lines contain a student's answer each. It is guaranteed that the answer meets what the teacher said. Each answer iconsists only of lowercase and uppercase Latin letters and signs (\"-\", \";\" and \"_\"). Length is from 1 to 600, inclusively.\n\nFor each student write in a different line. Print \"WA\" if his answer is wrong or \"ACC\" if his answer is OK."}, {"role": "assistant", "content": "strings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "It's now 260 AD. Shapur, being extremely smart, became the King of Persia. He is now called Shapur, His majesty King of kings of Iran and Aniran.\n\nRecently the Romans declared war on Persia. They dreamed to occupy Armenia. In the recent war, the Romans were badly defeated. Now their senior army general, Philip is captured by Shapur and Shapur is now going to capture Valerian, the Roman emperor.\n\nBeing defeated, the cowardly Valerian hid in a room at the top of one of his castles. To capture him, Shapur has to open many doors. Fortunately Valerian was too scared to make impenetrable locks for the doors.\n\nEach door has 4 parts. The first part is an integer number a. The second part is either an integer number b or some really odd sign which looks like R. The third one is an integer c and the fourth part is empty! As if it was laid for writing something. Being extremely gifted, after opening the first few doors, Shapur found out the secret behind the locks.\n\nc is an integer written in base a, to open the door we should write it in base b. The only bad news is that this R is some sort of special numbering system that is used only in Roman empire, so opening the doors is not just a piece of cake!\n\nHere's an explanation of this really weird number system that even doesn't have zero:\n\nRoman numerals are based on seven symbols: a stroke (identified with the letter I) for a unit, a chevron (identified with the letter V) for a five, a cross-stroke (identified with the letter X) for a ten, a C (identified as an abbreviation of Centum) for a hundred, etc.:\n\nSymbols are iterated to produce multiples of the decimal (1, 10, 100, 1,\u2009000) values, with V, L, D substituted for a multiple of five, and the iteration continuing: I 1, II 2, III 3, V 5, VI 6, VII 7, etc., and the same for other bases: X 10, XX 20, XXX 30, L 50, LXXX 80; CC 200, DCC 700, etc. At the fourth and ninth iteration, a subtractive principle must be employed, with the base placed before the higher base: IV 4, IX 9, XL 40, XC 90, CD 400, CM 900.\n\nAlso in bases greater than 10 we use A for 10, B for 11, etc.\n\nHelp Shapur capture Valerian and bring peace back to Persia, especially Armenia.\n\nThe first line contains two integers a and b (2\u2009\u2264\u2009a,\u2009b\u2009\u2264\u200925). Only b may be replaced by an R which indicates Roman numbering system.\n\nThe next line contains a single non-negative integer c in base a which may contain leading zeros but its length doesn't exceed 103. \n\nIt is guaranteed that if we have Roman numerals included the number would be less than or equal to 300010 and it won't be 0. In any other case the number won't be greater than 101510.\n\nWrite a single line that contains integer c in base b. You must omit leading zeros.\n\nYou can find more information about roman numerals here: http://en.wikipedia.org/wiki/Roman_numerals"}, {"role": "assistant", "content": "math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Valerian was captured by Shapur. The victory was such a great one that Shapur decided to carve a scene of Valerian's defeat on a mountain. So he had to find the best place to make his victory eternal!\n\nHe decided to visit all n cities of Persia to find the best available mountain, but after the recent war he was too tired and didn't want to traverse a lot. So he wanted to visit each of these n cities at least once with smallest possible traverse. Persian cities are connected with bidirectional roads. You can go from any city to any other one using these roads and there is a unique path between each two cities.\n\nAll cities are numbered 1 to n. Shapur is currently in the city 1 and he wants to visit all other cities with minimum possible traverse. He can finish his travels in any city.\n\nHelp Shapur find how much He should travel.\n\nFirst line contains a single natural number n (1\u2009\u2264\u2009n\u2009\u2264\u2009105) \u2014 the amount of cities.\n\nNext n\u2009-\u20091 lines contain 3 integer numbers each xi, yi and wi (1\u2009\u2264\u2009xi,\u2009yi\u2009\u2264\u2009n,\u20090\u2009\u2264\u2009wi\u2009\u2264\u20092\u2009\u00d7\u2009104). xi and yi are two ends of a road and wi is the length of that road.\n\nA single integer number, the minimal length of Shapur's travel.\n\nPlease, do not use %lld specificator to read or write 64-bit integers in C++. It is preffered to use cout (also you may use %I64d)."}, {"role": "assistant", "content": "dfsandsimilar, graphs, greedy, shortestpaths, trees"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The Romans have attacked again. This time they are much more than the Persians but Shapur is ready to defeat them. He says: \"A lion is never afraid of a hundred sheep\". \n\nNevertheless Shapur has to find weaknesses in the Roman army to defeat them. So he gives the army a weakness number.\n\nIn Shapur's opinion the weakness of an army is equal to the number of triplets i,\u2009j,\u2009k such that i\u2009<\u2009j\u2009<\u2009k and ai\u2009>\u2009aj\u2009>\u2009ak where ax is the power of man standing at position x. The Roman army has one special trait \u2014 powers of all the people in it are distinct.\n\nHelp Shapur find out how weak the Romans are.\n\nThe first line of input contains a single number n (3\u2009\u2264\u2009n\u2009\u2264\u2009106) \u2014 the number of men in Roman army. Next line contains n different positive integers ai (1\u2009\u2264\u2009i\u2009\u2264\u2009n,\u20091\u2009\u2264\u2009ai\u2009\u2264\u2009109) \u2014 powers of men in the Roman army. \n\nA single integer number, the weakness of the Roman army. \n\nPlease, do not use %lld specificator to read or write 64-bit integers in C++. It is preffered to use cout (also you may use %I64d)."}, {"role": "assistant", "content": "datastructures, trees"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Pasha has a wooden stick of some positive integer length n. He wants to perform exactly three cuts to get four parts of the stick. Each part must have some positive integer length and the sum of these lengths will obviously be n. \n\nPasha likes rectangles but hates squares, so he wonders, how many ways are there to split a stick into four parts so that it's possible to form a rectangle using these parts, but is impossible to form a square.\n\nYour task is to help Pasha and count the number of such ways. Two ways to cut the stick are considered distinct if there exists some integer x, such that the number of parts of length x in the first way differ from the number of parts of length x in the second way.\n\nThe first line of the input contains a positive integer n (1\u2009\u2264\u2009n\u2009\u2264\u20092\u00b7109) \u2014 the length of Pasha's stick.\n\nThe output should contain a single integer\u00a0\u2014 the number of ways to split Pasha's stick into four parts of positive integer length so that it's possible to make a rectangle by connecting the ends of these parts, but is impossible to form a square. \n\nThere is only one way to divide the stick in the first sample {1, 1, 2, 2}.\n\nFour ways to divide the stick in the second sample are {1, 1, 9, 9}, {2, 2, 8, 8}, {3, 3, 7, 7} and {4, 4, 6, 6}. Note that {5, 5, 5, 5} doesn't work."}, {"role": "assistant", "content": "combinatorics, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Vika has n jars with paints of distinct colors. All the jars are numbered from 1 to n and the i-th jar contains ai liters of paint of color i.\n\nVika also has an infinitely long rectangular piece of paper of width 1, consisting of squares of size 1\u2009\u00d7\u20091. Squares are numbered 1, 2, 3 and so on. Vika decided that she will start painting squares one by one from left to right, starting from the square number 1 and some arbitrary color. If the square was painted in color x, then the next square will be painted in color x\u2009+\u20091. In case of x\u2009=\u2009n, next square is painted in color 1. If there is no more paint of the color Vika wants to use now, then she stops.\n\nSquare is always painted in only one color, and it takes exactly 1 liter of paint. Your task is to calculate the maximum number of squares that might be painted, if Vika chooses right color to paint the first square.\n\nThe first line of the input contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009200\u2009000)\u00a0\u2014 the number of jars with colors Vika has.\n\nThe second line of the input contains a sequence of integers a1,\u2009a2,\u2009...,\u2009an (1\u2009\u2264\u2009ai\u2009\u2264\u2009109), where ai is equal to the number of liters of paint in the i-th jar, i.e. the number of liters of color i that Vika has.\n\nThe only line of the output should contain a single integer\u00a0\u2014 the maximum number of squares that Vika can paint if she follows the rules described above.\n\nIn the first sample the best strategy is to start painting using color 4. Then the squares will be painted in the following colors (from left to right): 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5.\n\nIn the second sample Vika can start to paint using any color.\n\nIn the third sample Vika should start painting using color number 5."}, {"role": "assistant", "content": "constructivealgorithms, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The semester is already ending, so Danil made an effort and decided to visit a lesson on harmony analysis to know how does the professor look like, at least. Danil was very bored on this lesson until the teacher gave the group a simple task: find 4 vectors in 4-dimensional space, such that every coordinate of every vector is 1 or \u2009-\u20091 and any two vectors are orthogonal. Just as a reminder, two vectors in n-dimensional space are considered to be orthogonal if and only if their scalar product is equal to zero, that is: \n\nDanil quickly managed to come up with the solution for this problem and the teacher noticed that the problem can be solved in a more general case for 2k vectors in 2k-dimensinoal space. When Danil came home, he quickly came up with the solution for this problem. Can you cope with it?\n\nThe only line of the input contains a single integer k (0\u2009\u2264\u2009k\u2009\u2264\u20099).\n\nPrint 2k lines consisting of 2k characters each. The j-th character of the i-th line must be equal to '\u2009*\u2009' if the j-th coordinate of the i-th vector is equal to \u2009-\u20091, and must be equal to '\u2009+\u2009' if it's equal to \u2009+\u20091. It's guaranteed that the answer always exists.\n\nIf there are many correct answers, print any.\n\nConsider all scalar products in example:"}, {"role": "assistant", "content": "constructivealgorithms"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Vika has an infinite sheet of squared paper. Initially all squares are white. She introduced a two-dimensional coordinate system on this sheet and drew n black horizontal and vertical segments parallel to the coordinate axes. All segments have width equal to 1 square, that means every segment occupy some set of neighbouring squares situated in one row or one column.\n\nYour task is to calculate the number of painted cells. If a cell was painted more than once, it should be calculated exactly once.\n\nThe first line of the input contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000)\u00a0\u2014 the number of segments drawn by Vika.\n\nEach of the next n lines contains four integers x1, y1, x2 and y2 (\u2009-\u2009109\u2009\u2264\u2009x1,\u2009y1,\u2009x2,\u2009y2\u2009\u2264\u2009109)\u00a0\u2014 the coordinates of the endpoints of the segments drawn by Vika. It is guaranteed that all the segments are parallel to coordinate axes. Segments may touch, overlap and even completely coincide.\n\nPrint the number of cells painted by Vika. If a cell was painted more than once, it should be calculated exactly once in the answer.\n\nIn the first sample Vika will paint squares (0,\u20091), (1,\u20091), (2,\u20091), (1,\u20092), (1,\u20093), (1,\u20094), (0,\u20093) and (2,\u20093)."}, {"role": "assistant", "content": "constructivealgorithms, datastructures, geometry, twopointers"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given a string s of length n, consisting of first k lowercase English letters.\n\nWe define a c-repeat of some string q as a string, consisting of c copies of the string q. For example, string \"acbacbacbacb\" is a 4-repeat of the string \"acb\".\n\nLet's say that string a contains string b as a subsequence, if string b can be obtained from a by erasing some symbols.\n\nLet p be a string that represents some permutation of the first k lowercase English letters. We define function d(p) as the smallest integer such that a d(p)-repeat of the string p contains string s as a subsequence.\n\nThere are m operations of one of two types that can be applied to string s:\n\nAll operations are performed sequentially, in the order they appear in the input. Your task is to determine the values of function d(p) for all operations of the second type.\n\nThe first line contains three positive integers n, m and k (1\u2009\u2264\u2009n\u2009\u2264\u2009200\u2009000,\u20091\u2009\u2264\u2009m\u2009\u2264\u200920000,\u20091\u2009\u2264\u2009k\u2009\u2264\u200910)\u00a0\u2014 the length of the string s, the number of operations and the size of the alphabet respectively. The second line contains the string s itself.\n\nEach of the following lines m contains a description of some operation: \n\nFor each query of the second type the value of function d(p).\n\nAfter the first operation the string s will be abbbbba.\n\nIn the second operation the answer is 6-repeat of abc: ABcaBcaBcaBcaBcAbc.\n\nAfter the third operation the string s will be abbcbba.\n\nIn the fourth operation the answer is 5-repeat of cba: cbAcBacBaCBacBA.\n\nUppercase letters means the occurrences of symbols from the string s."}, {"role": "assistant", "content": "datastructures, strings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Today is Wednesday, the third day of the week. What's more interesting is that tomorrow is the last day of the year 2015.\n\nLimak is a little polar bear. He enjoyed this year a lot. Now, he is so eager to the coming year 2016.\n\nLimak wants to prove how responsible a bear he is. He is going to regularly save candies for the entire year 2016! He considers various saving plans. He can save one candy either on some fixed day of the week or on some fixed day of the month.\n\nLimak chose one particular plan. He isn't sure how many candies he will save in the 2016 with his plan. Please, calculate it and tell him.\n\nThe only line of the input is in one of the following two formats: \n\nPrint one integer\u00a0\u2014 the number of candies Limak will save in the year 2016.\n\nPolar bears use the Gregorian calendar. It is the most common calendar and you likely use it too. You can read about it on Wikipedia if you want to \u2013 https://en.wikipedia.org/wiki/Gregorian_calendar. The week starts with Monday.\n\nIn the first sample Limak wants to save one candy on each Thursday (the 4-th day of the week). There are 52 Thursdays in the 2016. Thus, he will save 52 candies in total.\n\nIn the second sample Limak wants to save one candy on the 30-th day of each month. There is the 30-th day in exactly 11 months in the 2016\u00a0\u2014 all months but February. It means that Limak will save 11 candies in total."}, {"role": "assistant", "content": "implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The year 2015 is almost over.\n\nLimak is a little polar bear. He has recently learnt about the binary system. He noticed that the passing year has exactly one zero in its representation in the binary system\u00a0\u2014 201510\u2009=\u2009111110111112. Note that he doesn't care about the number of zeros in the decimal representation.\n\nLimak chose some interval of years. He is going to count all years from this interval that have exactly one zero in the binary representation. Can you do it faster?\n\nAssume that all positive integers are always written without leading zeros.\n\nThe only line of the input contains two integers a and b (1\u2009\u2264\u2009a\u2009\u2264\u2009b\u2009\u2264\u20091018)\u00a0\u2014 the first year and the last year in Limak's interval respectively.\n\nPrint one integer\u00a0\u2013 the number of years Limak will count in his chosen interval.\n\nIn the first sample Limak's interval contains numbers 510\u2009=\u20091012, 610\u2009=\u20091102, 710\u2009=\u20091112, 810\u2009=\u200910002, 910\u2009=\u200910012 and 1010\u2009=\u200910102. Two of them (1012 and 1102) have the described property."}, {"role": "assistant", "content": "bitmasks, bruteforce, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "They say \"years are like dominoes, tumbling one after the other\". But would a year fit into a grid? I don't think so.\n\nLimak is a little polar bear who loves to play. He has recently got a rectangular grid with h rows and w columns. Each cell is a square, either empty (denoted by '.') or forbidden (denoted by '#'). Rows are numbered 1 through h from top to bottom. Columns are numbered 1 through w from left to right.\n\nAlso, Limak has a single domino. He wants to put it somewhere in a grid. A domino will occupy exactly two adjacent cells, located either in one row or in one column. Both adjacent cells must be empty and must be inside a grid.\n\nLimak needs more fun and thus he is going to consider some queries. In each query he chooses some rectangle and wonders, how many way are there to put a single domino inside of the chosen rectangle?\n\nThe first line of the input contains two integers h and w (1\u2009\u2264\u2009h,\u2009w\u2009\u2264\u2009500)\u00a0\u2013 the number of rows and the number of columns, respectively.\n\nThe next h lines describe a grid. Each line contains a string of the length w. Each character is either '.' or '#'\u00a0\u2014 denoting an empty or forbidden cell, respectively.\n\nThe next line contains a single integer q (1\u2009\u2264\u2009q\u2009\u2264\u2009100\u2009000)\u00a0\u2014 the number of queries.\n\nEach of the next q lines contains four integers r1i, c1i, r2i, c2i (1\u2009\u2264\u2009r1i\u2009\u2264\u2009r2i\u2009\u2264\u2009h,\u20091\u2009\u2264\u2009c1i\u2009\u2264\u2009c2i\u2009\u2264\u2009w)\u00a0\u2014 the i-th query. Numbers r1i and c1i denote the row and the column (respectively) of the upper left cell of the rectangle. Numbers r2i and c2i denote the row and the column (respectively) of the bottom right cell of the rectangle.\n\nPrint q integers, i-th should be equal to the number of ways to put a single domino inside the i-th rectangle.\n\nA red frame below corresponds to the first query of the first sample. A domino can be placed in 4 possible ways."}, {"role": "assistant", "content": "dp, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Limak is a little polar bear. In the snow he found a scroll with the ancient prophecy. Limak doesn't know any ancient languages and thus is unable to understand the prophecy. But he knows digits!\n\nOne fragment of the prophecy is a sequence of n digits. The first digit isn't zero. Limak thinks that it's a list of some special years. It's hard to see any commas or spaces, so maybe ancient people didn't use them. Now Limak wonders what years are listed there.\n\nLimak assumes three things:\n\nLimak is going to consider all possible ways to split a sequence into numbers (years), satisfying the conditions above. He will do it without any help. However, he asked you to tell him the number of ways to do so. Since this number may be very large, you are only asked to calculate it modulo 109\u2009+\u20097.\n\nThe first line of the input contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u20095000)\u00a0\u2014 the number of digits.\n\nThe second line contains a string of digits and has length equal to n. It's guaranteed that the first digit is not '0'.\n\nPrint the number of ways to correctly split the given sequence modulo 109\u2009+\u20097.\n\nIn the first sample there are 8 ways to split the sequence:\n\nNote that we don't count a split \"123434\" = \"12\" + \"34\" + \"34\" because numbers have to be strictly increasing.\n\nIn the second sample there are 4 ways:"}, {"role": "assistant", "content": "dp, hashing, strings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Do you know the story about the three musketeers? Anyway, you must help them now.\n\nRichelimakieu is a cardinal in the city of Bearis. He found three brave warriors and called them the three musketeers. Athos has strength a, Borthos strength b, and Caramis has strength c.\n\nThe year 2015 is almost over and there are still n criminals to be defeated. The i-th criminal has strength ti. It's hard to defeat strong criminals\u00a0\u2014 maybe musketeers will have to fight together to achieve it.\n\nRichelimakieu will coordinate musketeers' actions. In each hour each musketeer can either do nothing or be assigned to one criminal. Two or three musketeers can be assigned to the same criminal and then their strengths are summed up. A criminal can be defeated in exactly one hour (also if two or three musketeers fight him). Richelimakieu can't allow the situation where a criminal has strength bigger than the sum of strengths of musketeers fighting him\u00a0\u2014 a criminal would win then!\n\nIn other words, there are three ways to defeat a criminal.\n\nRichelimakieu doesn't want musketeers to fight during the New Year's Eve. Thus, he must coordinate their actions in order to minimize the number of hours till all criminals will be defeated.\n\nFind the minimum number of hours to defeat all criminals. If musketeers can't defeat them all then print \"-1\" (without the quotes) instead.\n\nThe first line of the input contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009200\u2009000)\u00a0\u2014 the number of criminals.\n\nThe second line contains three integers a, b and c (1\u2009\u2264\u2009a,\u2009b,\u2009c\u2009\u2264\u2009108)\u00a0\u2014 strengths of musketeers.\n\nThe third line contains n integers t1,\u2009t2,\u2009...,\u2009tn (1\u2009\u2264\u2009ti\u2009\u2264\u2009108)\u00a0\u2014 strengths of criminals.\n\nPrint one line with the answer.\n\nIf it's impossible to defeat all criminals, print \"-1\" (without the quotes). Otherwise, print the minimum number of hours the three musketeers will spend on defeating all criminals.\n\nIn the first sample Athos has strength 10, Borthos 20, and Caramis 30. They can defeat all criminals in two hours:\n\nIn the second sample all three musketeers must together fight a criminal with strength 51. It takes one hour. In the second hour they can fight separately, each with one criminal. In the third hour one criminal is left and any of musketeers can fight him."}, {"role": "assistant", "content": "datastructures, greedy, sortings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Limak is a little polar bear. His parents told him to clean a house before the New Year's Eve. Their house is a rectangular grid with h rows and w columns. Each cell is an empty square.\n\nHe is a little bear and thus he can't clean a house by himself. Instead, he is going to use a cleaning robot.\n\nA cleaning robot has a built-in pattern of n moves, defined by a string of the length n. A single move (character) moves a robot to one of four adjacent cells. Each character is one of the following four: 'U' (up), 'D' (down), 'L' (left), 'R' (right). One move takes one minute.\n\nA cleaning robot must be placed and started in some cell. Then it repeats its pattern of moves till it hits a wall (one of four borders of a house). After hitting a wall it can be placed and used again.\n\nLimak isn't sure if placing a cleaning robot in one cell will be enough. Thus, he is going to start it w\u00b7h times, one time in each cell. Maybe some cells will be cleaned more than once but who cares?\n\nLimak asks you one question. How much time will it take to clean a house? Find and print the number of minutes modulo 109\u2009+\u20097. It's also possible that a cleaning robot will never stop\u00a0\u2014 then print \"-1\" (without the quotes) instead.\n\nPlacing and starting a robot takes no time, however, you must count a move when robot hits a wall. Take a look into samples for further clarification.\n\nThe first line contains three integers n, h and w (1\u2009\u2264\u2009n,\u2009h,\u2009w\u2009\u2264\u2009500\u2009000)\u00a0\u2014 the length of the pattern, the number of rows and the number of columns, respectively.\n\nThe second line contains a string of length n\u00a0\u2014 the pattern of n moves. Each character is one of uppercase letters 'U', 'D', 'L' or 'R'.\n\nPrint one line with the answer.\n\nIf a cleaning robot will never stop, print \"-1\" (without the quotes). Otherwise, print the number of minutes it will take to clean a house modulo 109\u2009+\u20097.\n\nIn the first sample house is a grid with 10 rows and 2 columns. Starting a robot anywhere in the second column will result in only one move (thus, one minute of cleaning) in which robot will hit a wall\u00a0\u2014 he tried to go right but there is no third column. Starting a robot anywhere in the first column will result in two moves. The total number of minutes is 10\u00b71\u2009+\u200910\u00b72\u2009=\u200930.\n\nIn the second sample a started robot will try to move \"RULRULRULR...\" For example, for the leftmost cell in the second row robot will make 5 moves before it stops because of hitting an upper wall."}, {"role": "assistant", "content": "binarysearch, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Limak is a little polar bear. According to some old traditions, his bear family prepared a New Year cake. And Limak likes cakes.\n\nAs you may know, a New Year cake is a strictly convex polygon with n vertices.\n\nParents won't allow Limak to eat more than half of a cake because he would get sick. After some thinking they decided to cut a cake along one of n\u00b7(n\u2009-\u20093)\u2009/\u20092 diagonals. Then Limak will get a non-greater piece.\n\nLimak understands rules but he won't be happy if the second piece happens to be much bigger. Limak's disappointment will be equal to the difference between pieces' areas, multiplied by two. It can be proved that it will be integer for the given constraints.\n\nThere are n\u00b7(n\u2009-\u20093)\u2009/\u20092 possible scenarios. Consider them all and find the sum of values of Limak's disappointment, modulo 109\u2009+\u20097.\n\nThe first line of the input contains a single integer n (4\u2009\u2264\u2009n\u2009\u2264\u2009500\u2009000)\u00a0\u2014 the number of vertices in the polygon denoting the cake.\n\nEach of the next n lines contains two integers xi and yi (|xi|,\u2009|yi|\u2009\u2264\u2009109)\u00a0\u2014 coordinates of the i-th point.\n\nIt's guaranteed that all points are distinct, polygon is strictly convex and points are given in the clockwise order.\n\nPrint the sum of values of Limak's disappointment over all possible scenarios modulo 109\u2009+\u20097.\n\nIn the first sample possible values of Limak's disappointment are 0,\u200918,\u200918,\u200924,\u200930."}, {"role": "assistant", "content": "geometry, twopointers"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "A tree is a connected undirected graph with n\u2009-\u20091 edges, where n denotes the number of vertices. Vertices are numbered 1 through n.\n\nLimak is a little polar bear. His bear family prepares a New Year tree every year. One year ago their tree was more awesome than usually. Thus, they decided to prepare the same tree in the next year. Limak was responsible for remembering that tree.\n\nIt would be hard to remember a whole tree. Limak decided to describe it in his notebook instead. He took a pen and wrote n\u2009-\u20091 lines, each with two integers\u00a0\u2014 indices of two vertices connected by an edge.\n\nNow, the New Year is just around the corner and Limak is asked to reconstruct that tree. Of course, there is a problem. He was a very little bear a year ago, and he didn't know digits and the alphabet, so he just replaced each digit with a question mark\u00a0\u2014 the only character he knew. That means, for any vertex index in his notes he knows only the number of digits in it. At least he knows there were no leading zeroes.\n\nLimak doesn't want to disappoint everyone. Please, take his notes and reconstruct a New Year tree. Find any tree matching Limak's records and print its edges in any order. It's also possible that Limak made a mistake and there is no suitable tree\u00a0\u2013 in this case print \"-1\" (without the quotes).\n\nThe first line contains a single integer n (2\u2009\u2264\u2009n\u2009\u2264\u2009200\u2009000)\u00a0\u2014 the number of vertices.\n\nEach of the next n\u2009-\u20091 lines contains two space-separated non-empty strings, both consisting of questions marks only. No string has more characters than the number of digits in n.\n\nIf there is no tree matching Limak's records, print the only line with \"-1\" (without the quotes).\n\nOtherwise, describe any tree matching Limak's notes. Print n\u2009-\u20091 lines, each with two space-separated integers\u00a0\u2013 indices of vertices connected by an edge. You can print edges in any order."}, {"role": "assistant", "content": "constructivealgorithms, flows, graphs"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given the string s of length n and the numbers p,\u2009q. Split the string s to pieces of length p and q.\n\nFor example, the string \"Hello\" for p\u2009=\u20092, q\u2009=\u20093 can be split to the two strings \"Hel\" and \"lo\" or to the two strings \"He\" and \"llo\".\n\nNote it is allowed to split the string s to the strings only of length p or to the strings only of length q (see the second sample test).\n\nThe first line contains three positive integers n,\u2009p,\u2009q (1\u2009\u2264\u2009p,\u2009q\u2009\u2264\u2009n\u2009\u2264\u2009100).\n\nThe second line contains the string s consists of lowercase and uppercase latin letters and digits.\n\nIf it's impossible to split the string s to the strings of length p and q print the only number \"-1\".\n\nOtherwise in the first line print integer k \u2014 the number of strings in partition of s.\n\nEach of the next k lines should contain the strings in partition. Each string should be of the length p or q. The string should be in order of their appearing in string s \u2014 from left to right.\n\nIf there are several solutions print any of them."}, {"role": "assistant", "content": "bruteforce, implementation, strings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "HDD hard drives group data by sectors. All files are split to fragments and each of them are written in some sector of hard drive. Note the fragments can be written in sectors in arbitrary order.\n\nOne of the problems of HDD hard drives is the following: the magnetic head should move from one sector to another to read some file.\n\nFind the time need to read file split to n fragments. The i-th sector contains the fi-th fragment of the file (1\u2009\u2264\u2009fi\u2009\u2264\u2009n). Note different sectors contains the different fragments. At the start the magnetic head is in the position that contains the first fragment. The file are reading in the following manner: at first the first fragment is read, then the magnetic head moves to the sector that contains the second fragment, then the second fragment is read and so on until the n-th fragment is read. The fragments are read in the order from the first to the n-th.\n\nIt takes |a\u2009-\u2009b| time units to move the magnetic head from the sector a to the sector b. Reading a fragment takes no time.\n\nThe first line contains a positive integer n (1\u2009\u2264\u2009n\u2009\u2264\u20092\u00b7105) \u2014 the number of fragments.\n\nThe second line contains n different integers fi (1\u2009\u2264\u2009fi\u2009\u2264\u2009n) \u2014 the number of the fragment written in the i-th sector.\n\nPrint the only integer \u2014 the number of time units needed to read the file.\n\nIn the second example the head moves in the following way:\n\nSo the answer to the second example is 4\u2009+\u20093\u2009+\u20092\u2009+\u20091\u2009=\u200910."}, {"role": "assistant", "content": "implementation, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given string s consists of opening and closing brackets of four kinds <>, {}, [], (). There are two types of brackets: opening and closing. You can replace any bracket by another of the same type. For example, you can replace < by the bracket {, but you can't replace it by ) or >.\n\nThe following definition of a regular bracket sequence is well-known, so you can be familiar with it.\n\nLet's define a regular bracket sequence (RBS). Empty string is RBS. Let s1 and s2 be a RBS then the strings <s1>s2, {s1}s2, [s1]s2, (s1)s2 are also RBS.\n\nFor example the string \"[[(){}]<>]\" is RBS, but the strings \"[)()\" and \"][()()\" are not.\n\nDetermine the least number of replaces to make the string s RBS.\n\nThe only line contains a non empty string s, consisting of only opening and closing brackets of four kinds. The length of s does not exceed 106.\n\nIf it's impossible to get RBS from s print Impossible.\n\nOtherwise print the least number of replaces needed to get RBS from s."}, {"role": "assistant", "content": "datastructures, expressionparsing, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given n segments on the coordinate axis Ox and the number k. The point is satisfied if it belongs to at least k segments. Find the smallest (by the number of segments) set of segments on the coordinate axis Ox which contains all satisfied points and no others.\n\nThe first line contains two integers n and k (1\u2009\u2264\u2009k\u2009\u2264\u2009n\u2009\u2264\u2009106) \u2014 the number of segments and the value of k.\n\nThe next n lines contain two integers li,\u2009ri (\u2009-\u2009109\u2009\u2264\u2009li\u2009\u2264\u2009ri\u2009\u2264\u2009109) each \u2014 the endpoints of the i-th segment. The segments can degenerate and intersect each other. The segments are given in arbitrary order.\n\nFirst line contains integer m \u2014 the smallest number of segments.\n\nNext m lines contain two integers aj,\u2009bj (aj\u2009\u2264\u2009bj) \u2014 the ends of j-th segment in the answer. The segments should be listed in the order from left to right."}, {"role": "assistant", "content": "greedy, sortings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "A permutation of length n is an array containing each integer from 1 to n exactly once. For example, q\u2009=\u2009[4,\u20095,\u20091,\u20092,\u20093] is a permutation. For the permutation q the square of permutation is the permutation p that p[i]\u2009=\u2009q[q[i]] for each i\u2009=\u20091... n. For example, the square of q\u2009=\u2009[4,\u20095,\u20091,\u20092,\u20093] is p\u2009=\u2009q2\u2009=\u2009[2,\u20093,\u20094,\u20095,\u20091].\n\nThis problem is about the inverse operation: given the permutation p you task is to find such permutation q that q2\u2009=\u2009p. If there are several such q find any of them.\n\nThe first line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009106) \u2014 the number of elements in permutation p.\n\nThe second line contains n distinct integers p1,\u2009p2,\u2009...,\u2009pn (1\u2009\u2264\u2009pi\u2009\u2264\u2009n) \u2014 the elements of permutation p.\n\nIf there is no permutation q such that q2\u2009=\u2009p print the number \"-1\".\n\nIf the answer exists print it. The only line should contain n different integers qi (1\u2009\u2264\u2009qi\u2009\u2264\u2009n) \u2014 the elements of the permutation q. If there are several solutions print any of them."}, {"role": "assistant", "content": "combinatorics, constructivealgorithms, dfsandsimilar, graphs, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given a circular array with n elements. The elements are numbered from some element with values from 1 to n in clockwise order. The i-th cell contains the value ai. The robot Simba is in cell s.\n\nEach moment of time the robot is in some of the n cells (at the begin he is in s). In one turn the robot can write out the number written in current cell or move to the adjacent cell in clockwise or counterclockwise direction. To write out the number from the cell Simba doesn't spend any time, but to move to adjacent cell Simba spends one unit of time.\n\nSimba wants to write the number from each cell one time, so the numbers will be written in a non decreasing order. Find the least number of time units to write out all numbers.\n\nThe first line contains two integers n and s (1\u2009\u2264\u2009s\u2009\u2264\u2009n\u2009\u2264\u20092000) \u2014 the number of cells in the circular array and the starting position of Simba.\n\nThe second line contains n integers ai (\u2009-\u2009109\u2009\u2264\u2009ai\u2009\u2264\u2009109) \u2014 the number written in the i-th cell. The numbers are given for cells in order from 1 to n. Some of numbers ai can be equal.\n\nIn the first line print the number t \u2014 the least number of time units.\n\nEach of the next n lines should contain the direction of robot movement and the number of cells to move in that direction. After that movement the robot writes out the number from the cell in which it turns out. The direction and the number of cells should be printed in the form of +x in case of clockwise movement and -x in case of counterclockwise movement to x cells (0\u2009\u2264\u2009x\u2009\u2264\u2009n\u2009-\u20091).\n\nNote that the sum of absolute values of x should be equal to t."}, {"role": "assistant", "content": "dp"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Peter got a new snow blower as a New Year present. Of course, Peter decided to try it immediately. After reading the instructions he realized that it does not work like regular snow blowing machines. In order to make it work, you need to tie it to some point that it does not cover, and then switch it on. As a result it will go along a circle around this point and will remove all the snow from its path.\n\nFormally, we assume that Peter's machine is a polygon on a plane. Then, after the machine is switched on, it will make a circle around the point to which Peter tied it (this point lies strictly outside the polygon). That is, each of the points lying within or on the border of the polygon will move along the circular trajectory, with the center of the circle at the point to which Peter tied his machine.\n\nPeter decided to tie his car to point P and now he is wondering what is the area of \u200b\u200bthe region that will be cleared from snow. Help him.\n\nThe first line of the input contains three integers\u00a0\u2014 the number of vertices of the polygon n (), and coordinates of point P.\n\nEach of the next n lines contains two integers\u00a0\u2014 coordinates of the vertices of the polygon in the clockwise or counterclockwise order. It is guaranteed that no three consecutive vertices lie on a common straight line.\n\nAll the numbers in the input are integers that do not exceed 1\u2009000\u2009000 in their absolute value.\n\nPrint a single real value number\u00a0\u2014 the area of the region that will be cleared. Your answer will be considered correct if its absolute or relative error does not exceed 10\u2009-\u20096. \n\nNamely: let's assume that your answer is a, and the answer of the jury is b. The checker program will consider your answer correct, if .\n\nIn the first sample snow will be removed from that area:"}, {"role": "assistant", "content": "binarysearch, geometry, ternarysearch"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Lesha plays the recently published new version of the legendary game hacknet. In this version character skill mechanism was introduced. Now, each player character has exactly n skills. Each skill is represented by a non-negative integer ai\u00a0\u2014 the current skill level. All skills have the same maximum level A.\n\nAlong with the skills, global ranking of all players was added. Players are ranked according to the so-called Force. The Force of a player is the sum of the following values:\n\nNow Lesha has m hacknetian currency units, which he is willing to spend. Each currency unit can increase the current level of any skill by 1 (if it's not equal to A yet). Help him spend his money in order to achieve the maximum possible value of the Force.\n\nThe first line of the input contains five space-separated integers n, A, cf, cm and m (1\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000, 1\u2009\u2264\u2009A\u2009\u2264\u2009109, 0\u2009\u2264\u2009cf,\u2009cm\u2009\u2264\u20091000, 0\u2009\u2264\u2009m\u2009\u2264\u20091015).\n\nThe second line contains exactly n integers ai (0\u2009\u2264\u2009ai\u2009\u2264\u2009A), separated by spaces,\u00a0\u2014 the current levels of skills.\n\nOn the first line print the maximum value of the Force that the character can achieve using no more than m currency units.\n\nOn the second line print n integers a'i (ai\u2009\u2264\u2009a'i\u2009\u2264\u2009A), skill levels which one must achieve in order to reach the specified value of the Force, while using no more than m currency units. Numbers should be separated by spaces.\n\nIn the first test the optimal strategy is to increase the second skill to its maximum, and increase the two others by 1.\n\nIn the second test one should increase all skills to maximum."}, {"role": "assistant", "content": "binarysearch, bruteforce, dp, greedy, sortings, twopointers"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Ivan wants to make a necklace as a present to his beloved girl. A necklace is a cyclic sequence of beads of different colors. Ivan says that necklace is beautiful relative to the cut point between two adjacent beads, if the chain of beads remaining after this cut is a palindrome (reads the same forward and backward).\n\nIvan has beads of n colors. He wants to make a necklace, such that it's beautiful relative to as many cuts as possible. He certainly wants to use all the beads. Help him to make the most beautiful necklace.\n\nThe first line of the input contains a single number n (1\u2009\u2264\u2009n\u2009\u2264\u200926) \u2014 the number of colors of beads. The second line contains after n positive integers ai \u00a0 \u2014 the quantity of beads of i-th color. It is guaranteed that the sum of ai is at least 2 and does not exceed 100\u2009000.\n\nIn the first line print a single number\u00a0\u2014 the maximum number of beautiful cuts that a necklace composed from given beads may have. In the second line print any example of such necklace.\n\nEach color of the beads should be represented by the corresponding lowercase English letter (starting with a). As the necklace is cyclic, print it starting from any point.\n\nIn the first sample a necklace can have at most one beautiful cut. The example of such a necklace is shown on the picture.\n\nIn the second sample there is only one way to compose a necklace."}, {"role": "assistant", "content": "constructivealgorithms, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Meanwhile, the kingdom of K is getting ready for the marriage of the King's daughter. However, in order not to lose face in front of the relatives, the King should first finish reforms in his kingdom. As the King can not wait for his daughter's marriage, reforms must be finished as soon as possible.\n\nThe kingdom currently consists of n cities. Cities are connected by n\u2009-\u20091 bidirectional road, such that one can get from any city to any other city. As the King had to save a lot, there is only one path between any two cities.\n\nWhat is the point of the reform? The key ministries of the state should be relocated to distinct cities (we call such cities important). However, due to the fact that there is a high risk of an attack by barbarians it must be done carefully. The King has made several plans, each of which is described by a set of important cities, and now wonders what is the best plan.\n\nBarbarians can capture some of the cities that are not important (the important ones will have enough protection for sure), after that the captured city becomes impassable. In particular, an interesting feature of the plan is the minimum number of cities that the barbarians need to capture in order to make all the important cities isolated, that is, from all important cities it would be impossible to reach any other important city.\n\nHelp the King to calculate this characteristic for each of his plan.\n\nThe first line of the input contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000)\u00a0\u2014 the number of cities in the kingdom.\n\nEach of the next n\u2009-\u20091 lines contains two distinct integers ui, vi (1\u2009\u2264\u2009ui,\u2009vi\u2009\u2264\u2009n)\u00a0\u2014 the indices of the cities connected by the i-th road. It is guaranteed that you can get from any city to any other one moving only along the existing roads.\n\nThe next line contains a single integer q (1\u2009\u2264\u2009q\u2009\u2264\u2009100\u2009000)\u00a0\u2014 the number of King's plans.\n\nEach of the next q lines looks as follows: first goes number ki\u00a0\u2014 the number of important cities in the King's plan, (1\u2009\u2264\u2009ki\u2009\u2264\u2009n), then follow exactly ki space-separated pairwise distinct numbers from 1 to n\u00a0\u2014 the numbers of important cities in this plan.\n\nThe sum of all ki's does't exceed 100\u2009000.\n\nFor each plan print a single integer \u2014 the minimum number of cities that the barbarians need to capture, or print \u2009-\u20091 if all the barbarians' attempts to isolate important cities will not be effective.\n\nIn the first sample, in the first and the third King's plan barbarians can capture the city 3, and that will be enough. In the second and the fourth plans all their attempts will not be effective.\n\nIn the second sample the cities to capture are 3 and 5."}, {"role": "assistant", "content": "dfsandsimilar, divideandconquer, dp, graphs, sortings, trees"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Oleg Petrov loves crossword puzzles and every Thursday he buys his favorite magazine with crosswords and other word puzzles. In the last magazine Oleg found a curious puzzle, and the magazine promised a valuable prize for it's solution. We give a formal description of the problem below.\n\nThe puzzle field consists of two rows, each row contains n cells. Each cell contains exactly one small English letter. You also are given a word w, which consists of k small English letters. A solution of the puzzle is a sequence of field cells c1, ..., ck, such that:\n\nOleg Petrov quickly found a solution for the puzzle. Now he wonders, how many distinct solutions are there for this puzzle. Oleg Petrov doesn't like too large numbers, so calculate the answer modulo 109\u2009+\u20097.\n\nTwo solutions ci and c'i are considered distinct if the sequences of cells do not match in at least one position, that is there is such j in range from 1 to k, such that cj\u2009\u2260\u2009c'j.\n\nThe first two lines contain the state of the field for the puzzle. Each of these non-empty lines contains exactly n small English letters.\n\nThe next line is left empty.\n\nThe next line is non-empty and contains word w, consisting of small English letters.\n\nThe length of each line doesn't exceed 2\u2009000.\n\nPrint a single integer \u2014 the number of distinct solutions for the puzzle modulo 109\u2009+\u20097."}, {"role": "assistant", "content": "dp, hashing, strings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Programmer Rostislav got seriously interested in the Link/Cut Tree data structure, which is based on Splay trees. Specifically, he is now studying the expose procedure.\n\nUnfortunately, Rostislav is unable to understand the definition of this procedure, so he decided to ask programmer Serezha to help him. Serezha agreed to help if Rostislav solves a simple task (and if he doesn't, then why would he need Splay trees anyway?)\n\nGiven integers l, r and k, you need to print all powers of number k within range from l to r inclusive. However, Rostislav doesn't want to spent time doing this, as he got interested in playing a network game called Agar with Gleb. Help him!\n\nThe first line of the input contains three space-separated integers l, r and k (1\u2009\u2264\u2009l\u2009\u2264\u2009r\u2009\u2264\u20091018, 2\u2009\u2264\u2009k\u2009\u2264\u2009109).\n\nPrint all powers of number k, that lie within range from l to r in the increasing order. If there are no such numbers, print \"-1\" (without the quotes).\n\nNote to the first sample: numbers 20\u2009=\u20091, 21\u2009=\u20092, 22\u2009=\u20094, 23\u2009=\u20098 lie within the specified range. The number 24\u2009=\u200916 is greater then 10, thus it shouldn't be printed."}, {"role": "assistant", "content": "bruteforce, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "It's the year 4527 and the tanks game that we all know and love still exists. There also exists Great Gena's code, written in 2016. The problem this code solves is: given the number of tanks that go into the battle from each country, find their product. If it is turns to be too large, then the servers might have not enough time to assign tanks into teams and the whole game will collapse!\n\nThere are exactly n distinct countries in the world and the i-th country added ai tanks to the game. As the developers of the game are perfectionists, the number of tanks from each country is beautiful. A beautiful number, according to the developers, is such number that its decimal representation consists only of digits '1' and '0', moreover it contains at most one digit '1'. However, due to complaints from players, some number of tanks of one country was removed from the game, hence the number of tanks of this country may not remain beautiful.\n\nYour task is to write the program that solves exactly the same problem in order to verify Gena's code correctness. Just in case.\n\nThe first line of the input contains the number of countries n (1\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000). The second line contains n non-negative integers ai without leading zeroes\u00a0\u2014 the number of tanks of the i-th country.\n\nIt is guaranteed that the second line contains at least n\u2009-\u20091 beautiful numbers and the total length of all these number's representations doesn't exceed 100\u2009000.\n\nPrint a single number without leading zeroes\u00a0\u2014 the product of the number of tanks presented by each country.\n\nIn sample 1 numbers 10 and 1 are beautiful, number 5 is not not.\n\nIn sample 2 number 11 is not beautiful (contains two '1's), all others are beautiful.\n\nIn sample 3 number 3 is not beautiful, all others are beautiful."}, {"role": "assistant", "content": "implementation, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Peter got a new snow blower as a New Year present. Of course, Peter decided to try it immediately. After reading the instructions he realized that it does not work like regular snow blowing machines. In order to make it work, you need to tie it to some point that it does not cover, and then switch it on. As a result it will go along a circle around this point and will remove all the snow from its path.\n\nFormally, we assume that Peter's machine is a polygon on a plane. Then, after the machine is switched on, it will make a circle around the point to which Peter tied it (this point lies strictly outside the polygon). That is, each of the points lying within or on the border of the polygon will move along the circular trajectory, with the center of the circle at the point to which Peter tied his machine.\n\nPeter decided to tie his car to point P and now he is wondering what is the area of \u200b\u200bthe region that will be cleared from snow. Help him.\n\nThe first line of the input contains three integers\u00a0\u2014 the number of vertices of the polygon n (), and coordinates of point P.\n\nEach of the next n lines contains two integers\u00a0\u2014 coordinates of the vertices of the polygon in the clockwise or counterclockwise order. It is guaranteed that no three consecutive vertices lie on a common straight line.\n\nAll the numbers in the input are integers that do not exceed 1\u2009000\u2009000 in their absolute value.\n\nPrint a single real value number\u00a0\u2014 the area of the region that will be cleared. Your answer will be considered correct if its absolute or relative error does not exceed 10\u2009-\u20096. \n\nNamely: let's assume that your answer is a, and the answer of the jury is b. The checker program will consider your answer correct, if .\n\nIn the first sample snow will be removed from that area:"}, {"role": "assistant", "content": "geometry"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Lesha plays the recently published new version of the legendary game hacknet. In this version character skill mechanism was introduced. Now, each player character has exactly n skills. Each skill is represented by a non-negative integer ai\u00a0\u2014 the current skill level. All skills have the same maximum level A.\n\nAlong with the skills, global ranking of all players was added. Players are ranked according to the so-called Force. The Force of a player is the sum of the following values:\n\nNow Lesha has m hacknetian currency units, which he is willing to spend. Each currency unit can increase the current level of any skill by 1 (if it's not equal to A yet). Help him spend his money in order to achieve the maximum possible value of the Force.\n\nThe first line of the input contains five space-separated integers n, A, cf, cm and m (1\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000, 1\u2009\u2264\u2009A\u2009\u2264\u2009109, 0\u2009\u2264\u2009cf,\u2009cm\u2009\u2264\u20091000, 0\u2009\u2264\u2009m\u2009\u2264\u20091015).\n\nThe second line contains exactly n integers ai (0\u2009\u2264\u2009ai\u2009\u2264\u2009A), separated by spaces,\u00a0\u2014 the current levels of skills.\n\nOn the first line print the maximum value of the Force that the character can achieve using no more than m currency units.\n\nOn the second line print n integers a'i (ai\u2009\u2264\u2009a'i\u2009\u2264\u2009A), skill levels which one must achieve in order to reach the specified value of the Force, while using no more than m currency units. Numbers should be separated by spaces.\n\nIn the first test the optimal strategy is to increase the second skill to its maximum, and increase the two others by 1.\n\nIn the second test one should increase all skills to maximum."}, {"role": "assistant", "content": "dp, greedy, sortings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Ivan wants to make a necklace as a present to his beloved girl. A necklace is a cyclic sequence of beads of different colors. Ivan says that necklace is beautiful relative to the cut point between two adjacent beads, if the chain of beads remaining after this cut is a palindrome (reads the same forward and backward).\n\nIvan has beads of n colors. He wants to make a necklace, such that it's beautiful relative to as many cuts as possible. He certainly wants to use all the beads. Help him to make the most beautiful necklace.\n\nThe first line of the input contains a single number n (1\u2009\u2264\u2009n\u2009\u2264\u200926) \u2014 the number of colors of beads. The second line contains after n positive integers ai \u00a0 \u2014 the quantity of beads of i-th color. It is guaranteed that the sum of ai is at least 2 and does not exceed 100\u2009000.\n\nIn the first line print a single number\u00a0\u2014 the maximum number of beautiful cuts that a necklace composed from given beads may have. In the second line print any example of such necklace.\n\nEach color of the beads should be represented by the corresponding lowercase English letter (starting with a). As the necklace is cyclic, print it starting from any point.\n\nIn the first sample a necklace can have at most one beautiful cut. The example of such a necklace is shown on the picture.\n\nIn the second sample there is only one way to compose a necklace."}, {"role": "assistant", "content": "constructivealgorithms, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Vasya wants to turn on Christmas lights consisting of m bulbs. Initially, all bulbs are turned off. There are n buttons, each of them is connected to some set of bulbs. Vasya can press any of these buttons. When the button is pressed, it turns on all the bulbs it's connected to. Can Vasya light up all the bulbs?\n\nIf Vasya presses the button such that some bulbs connected to it are already turned on, they do not change their state, i.e. remain turned on.\n\nThe first line of the input contains integers n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009100)\u00a0\u2014 the number of buttons and the number of bulbs respectively. \n\nEach of the next n lines contains xi (0\u2009\u2264\u2009xi\u2009\u2264\u2009m)\u00a0\u2014 the number of bulbs that are turned on by the i-th button, and then xi numbers yij (1\u2009\u2264\u2009yij\u2009\u2264\u2009m)\u00a0\u2014 the numbers of these bulbs.\n\nIf it's possible to turn on all m bulbs print \"YES\", otherwise print \"NO\".\n\nIn the first sample you can press each button once and turn on all the bulbs. In the 2 sample it is impossible to turn on the 3-rd lamp."}, {"role": "assistant", "content": "implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "This Christmas Santa gave Masha a magic picture and a pencil. The picture consists of n points connected by m segments (they might cross in any way, that doesn't matter). No two segments connect the same pair of points, and no segment connects the point to itself. Masha wants to color some segments in order paint a hedgehog. In Mashas mind every hedgehog consists of a tail and some spines. She wants to paint the tail that satisfies the following conditions: \n\nMasha defines the length of the tail as the number of points in it. Also, she wants to paint some spines. To do so, Masha will paint all the segments, such that one of their ends is the endpoint of the tail. Masha defines the beauty of a hedgehog as the length of the tail multiplied by the number of spines. Masha wants to color the most beautiful hedgehog. Help her calculate what result she may hope to get.\n\nNote that according to Masha's definition of a hedgehog, one segment may simultaneously serve as a spine and a part of the tail (she is a little girl after all). Take a look at the picture for further clarifications.\n\nFirst line of the input contains two integers n and m(2\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000, 1\u2009\u2264\u2009m\u2009\u2264\u2009200\u2009000)\u00a0\u2014 the number of points and the number segments on the picture respectively. \n\nThen follow m lines, each containing two integers ui and vi (1\u2009\u2264\u2009ui,\u2009vi\u2009\u2264\u2009n, ui\u2009\u2260\u2009vi)\u00a0\u2014 the numbers of points connected by corresponding segment. It's guaranteed that no two segments connect the same pair of points.\n\nPrint the maximum possible value of the hedgehog's beauty.\n\nThe picture below corresponds to the first sample. Segments that form the hedgehog are painted red. The tail consists of a sequence of points with numbers 1, 2 and 5. The following segments are spines: (2, 5), (3, 5) and (4, 5). Therefore, the beauty of the hedgehog is equal to 3\u00b73\u2009=\u20099.\n"}, {"role": "assistant", "content": "dp, graphs"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "A boy named Ayrat lives on planet AMI-1511. Each inhabitant of this planet has a talent. Specifically, Ayrat loves running, moreover, just running is not enough for him. He is dreaming of making running a real art.\n\nFirst, he wants to construct the running track with coating t. On planet AMI-1511 the coating of the track is the sequence of colored blocks, where each block is denoted as the small English letter. Therefore, every coating can be treated as a string.\n\nUnfortunately, blocks aren't freely sold to non-business customers, but Ayrat found an infinite number of coatings s. Also, he has scissors and glue. Ayrat is going to buy some coatings s, then cut out from each of them exactly one continuous piece (substring) and glue it to the end of his track coating. Moreover, he may choose to flip this block before glueing it. Ayrat want's to know the minimum number of coating s he needs to buy in order to get the coating t for his running track. Of course, he also want's to know some way to achieve the answer.\n\nFirst line of the input contains the string s\u00a0\u2014 the coating that is present in the shop. Second line contains the string t\u00a0\u2014 the coating Ayrat wants to obtain. Both strings are non-empty, consist of only small English letters and their length doesn't exceed 2100.\n\nThe first line should contain the minimum needed number of coatings n or -1 if it's impossible to create the desired coating.\n\nIf the answer is not -1, then the following n lines should contain two integers xi and yi\u00a0\u2014 numbers of ending blocks in the corresponding piece. If xi\u2009\u2264\u2009yi then this piece is used in the regular order, and if xi\u2009>\u2009yi piece is used in the reversed order. Print the pieces in the order they should be glued to get the string t.\n\nIn the first sample string \"cbaabc\" = \"cba\" + \"abc\".\n\nIn the second sample: \"ayrat\" = \"a\" + \"yr\" + \"at\"."}, {"role": "assistant", "content": "dp, greedy, strings, trees"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Ayrat has number n, represented as it's prime factorization pi of size m, i.e. n\u2009=\u2009p1\u00b7p2\u00b7...\u00b7pm. Ayrat got secret information that that the product of all divisors of n taken modulo 109\u2009+\u20097 is the password to the secret data base. Now he wants to calculate this value.\n\nThe first line of the input contains a single integer m (1\u2009\u2264\u2009m\u2009\u2264\u2009200\u2009000)\u00a0\u2014 the number of primes in factorization of n. \n\nThe second line contains m primes numbers pi (2\u2009\u2264\u2009pi\u2009\u2264\u2009200\u2009000).\n\nPrint one integer\u00a0\u2014 the product of all divisors of n modulo 109\u2009+\u20097.\n\nIn the first sample n\u2009=\u20092\u00b73\u2009=\u20096. The divisors of 6 are 1, 2, 3 and 6, their product is equal to 1\u00b72\u00b73\u00b76\u2009=\u200936.\n\nIn the second sample 2\u00b73\u00b72\u2009=\u200912. The divisors of 12 are 1, 2, 3, 4, 6 and 12. 1\u00b72\u00b73\u00b74\u00b76\u00b712\u2009=\u20091728."}, {"role": "assistant", "content": "math, numbertheory"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Ayrat is looking for the perfect code. He decided to start his search from an infinite field tiled by hexagons. For convenience the coordinate system is introduced, take a look at the picture to see how the coordinates of hexagon are defined: \n\n  Ayrat is searching through the field. He started at point (0,\u20090) and is moving along the spiral (see second picture). Sometimes he forgets where he is now. Help Ayrat determine his location after n moves.\n\nThe only line of the input contains integer n (0\u2009\u2264\u2009n\u2009\u2264\u20091018)\u00a0\u2014 the number of Ayrat's moves.\n\nPrint two integers x and y\u00a0\u2014 current coordinates of Ayrat coordinates."}, {"role": "assistant", "content": "binarysearch, implementation, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given two very long integers a,\u2009b (leading zeroes are allowed). You should check what number a or b is greater or determine that they are equal.\n\nThe input size is very large so don't use the reading of symbols one by one. Instead of that use the reading of a whole line or token.\n\nAs input/output can reach huge size it is recommended to use fast input/output methods: for example, prefer to use scanf/printf instead of cin/cout in C++, prefer to use BufferedReader/PrintWriter instead of Scanner/System.out in Java. Don't use the function input() in Python2 instead of it use the function raw_input().\n\nThe first line contains a non-negative integer a.\n\nThe second line contains a non-negative integer b.\n\nThe numbers a,\u2009b may contain leading zeroes. Each of them contains no more than 106 digits.\n\nPrint the symbol \"<\" if a\u2009<\u2009b and the symbol \">\" if a\u2009>\u2009b. If the numbers are equal print the symbol \"=\"."}, {"role": "assistant", "content": "implementation, strings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Jack decides to invite Emma out for a dinner. Jack is a modest student, he doesn't want to go to an expensive restaurant. Emma is a girl with high taste, she prefers elite places.\n\nMunhattan consists of n streets and m avenues. There is exactly one restaurant on the intersection of each street and avenue. The streets are numbered with integers from 1 to n and the avenues are numbered with integers from 1 to m. The cost of dinner in the restaurant at the intersection of the i-th street and the j-th avenue is cij.\n\nJack and Emma decide to choose the restaurant in the following way. Firstly Emma chooses the street to dinner and then Jack chooses the avenue. Emma and Jack makes their choice optimally: Emma wants to maximize the cost of the dinner, Jack wants to minimize it. Emma takes into account that Jack wants to minimize the cost of the dinner. Find the cost of the dinner for the couple in love.\n\nThe first line contains two integers n,\u2009m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009100) \u2014 the number of streets and avenues in Munhattan.\n\nEach of the next n lines contains m integers cij (1\u2009\u2264\u2009cij\u2009\u2264\u2009109) \u2014 the cost of the dinner in the restaurant on the intersection of the i-th street and the j-th avenue.\n\nPrint the only integer a \u2014 the cost of the dinner for Jack and Emma.\n\nIn the first example if Emma chooses the first or the third streets Jack can choose an avenue with the cost of the dinner 1. So she chooses the second street and Jack chooses any avenue. The cost of the dinner is 2.\n\nIn the second example regardless of Emma's choice Jack can choose a restaurant with the cost of the dinner 1."}, {"role": "assistant", "content": "games, greedy"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given a rectangular field of n\u2009\u00d7\u2009m cells. Each cell is either empty or impassable (contains an obstacle). Empty cells are marked with '.', impassable cells are marked with '*'. Let's call two empty cells adjacent if they share a side.\n\nLet's call a connected component any non-extendible set of cells such that any two of them are connected by the path of adjacent cells. It is a typical well-known definition of a connected component.\n\nFor each impassable cell (x,\u2009y) imagine that it is an empty cell (all other cells remain unchanged) and find the size (the number of cells) of the connected component which contains (x,\u2009y). You should do it for each impassable cell independently.\n\nThe answer should be printed as a matrix with n rows and m columns. The j-th symbol of the i-th row should be \".\" if the cell is empty at the start. Otherwise the j-th symbol of the i-th row should contain the only digit \u2014- the answer modulo 10. The matrix should be printed without any spaces.\n\nTo make your output faster it is recommended to build the output as an array of n strings having length m and print it as a sequence of lines. It will be much faster than writing character-by-character.\n\nAs input/output can reach huge size it is recommended to use fast input/output methods: for example, prefer to use scanf/printf instead of cin/cout in C++, prefer to use BufferedReader/PrintWriter instead of Scanner/System.out in Java.\n\nThe first line contains two integers n,\u2009m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u20091000) \u2014 the number of rows and columns in the field.\n\nEach of the next n lines contains m symbols: \".\" for empty cells, \"*\" for impassable cells.\n\nPrint the answer as a matrix as described above. See the examples to precise the format of the output.\n\nIn first example, if we imagine that the central cell is empty then it will be included to component of size 5 (cross). If any of the corner cell will be empty then it will be included to component of size 3 (corner)."}, {"role": "assistant", "content": "dfsandsimilar"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The array a with n integers is given. Let's call the sequence of one or more consecutive elements in a segment. Also let's call the segment k-good if it contains no more than k different values.\n\nFind any longest k-good segment.\n\nAs the input/output can reach huge size it is recommended to use fast input/output methods: for example, prefer to use scanf/printf instead of cin/cout in C++, prefer to use BufferedReader/PrintWriter instead of Scanner/System.out in Java.\n\nThe first line contains two integers n,\u2009k (1\u2009\u2264\u2009k\u2009\u2264\u2009n\u2009\u2264\u20095\u00b7105) \u2014 the number of elements in a and the parameter k.\n\nThe second line contains n integers ai (0\u2009\u2264\u2009ai\u2009\u2264\u2009106) \u2014 the elements of the array a.\n\nPrint two integers l,\u2009r (1\u2009\u2264\u2009l\u2009\u2264\u2009r\u2009\u2264\u2009n) \u2014 the index of the left and the index of the right ends of some k-good longest segment. If there are several longest segments you can print any of them. The elements in a are numbered from 1 to n from left to right."}, {"role": "assistant", "content": "binarysearch, datastructures, twopointers"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Calculate the value of the sum: n mod 1 + n mod 2 + n mod 3 + ... + n mod m. As the result can be very large, you should print the value modulo 109\u2009+\u20097 (the remainder when divided by 109\u2009+\u20097).\n\nThe modulo operator a mod b stands for the remainder after dividing a by b. For example 10 mod 3 = 1.\n\nThe only line contains two integers n,\u2009m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u20091013) \u2014 the parameters of the sum.\n\nPrint integer s \u2014 the value of the required sum modulo 109\u2009+\u20097."}, {"role": "assistant", "content": "implementation, math, numbertheory"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given n strings ti. Each string has cost ci.\n\nLet's define the function of string , where ps,\u2009i is the number of occurrences of s in ti, |s| is the length of the string s. Find the maximal value of function f(s) over all strings.\n\nNote that the string s is not necessarily some string from t.\n\nThe first line contains the only integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105) \u2014 the number of strings in t.\n\nEach of the next n lines contains contains a non-empty string ti. ti contains only lowercase English letters.\n\nIt is guaranteed that the sum of lengths of all strings in t is not greater than 5\u00b7105.\n\nThe last line contains n integers ci (\u2009-\u2009107\u2009\u2264\u2009ci\u2009\u2264\u2009107) \u2014 the cost of the i-th string.\n\nPrint the only integer a \u2014 the maximal value of the function f(s) over all strings s. Note one more time that the string s is not necessarily from t."}, {"role": "assistant", "content": "stringsuffixstructures, strings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "An elephant decided to visit his friend. It turned out that the elephant's house is located at point 0 and his friend's house is located at point x(x\u2009>\u20090) of the coordinate line. In one step the elephant can move 1, 2, 3, 4 or 5 positions forward. Determine, what is the minimum number of steps he need to make in order to get to his friend's house.\n\nThe first line of the input contains an integer x (1\u2009\u2264\u2009x\u2009\u2264\u20091\u2009000\u2009000)\u00a0\u2014 The coordinate of the friend's house.\n\nPrint the minimum number of steps that elephant needs to make to get from point 0 to point x.\n\nIn the first sample the elephant needs to make one step of length 5 to reach the point x.\n\nIn the second sample the elephant can get to point x if he moves by 3, 5 and 4. There are other ways to get the optimal answer but the elephant cannot reach x in less than three moves."}, {"role": "assistant", "content": "math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Bob loves everything sweet. His favorite chocolate bar consists of pieces, each piece may contain a nut. Bob wants to break the bar of chocolate into multiple pieces so that each part would contain exactly one nut and any break line goes between two adjacent pieces.\n\nYou are asked to calculate the number of ways he can do it. Two ways to break chocolate are considered distinct if one of them contains a break between some two adjacent pieces and the other one doesn't. \n\nPlease note, that if Bob doesn't make any breaks, all the bar will form one piece and it still has to have exactly one nut.\n\nThe first line of the input contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100)\u00a0\u2014 the number of pieces in the chocolate bar.\n\nThe second line contains n integers ai (0\u2009\u2264\u2009ai\u2009\u2264\u20091), where 0 represents a piece without the nut and 1 stands for a piece with the nut.\n\nPrint the number of ways to break the chocolate into multiple parts so that each part would contain exactly one nut.\n\nIn the first sample there is exactly one nut, so the number of ways equals 1\u00a0\u2014 Bob shouldn't make any breaks.\n\nIn the second sample you can break the bar in four ways:\n\n10|10|1\n\n1|010|1\n\n10|1|01\n\n1|01|01"}, {"role": "assistant", "content": "combinatorics"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "A flowerbed has many flowers and two fountains.\n\nYou can adjust the water pressure and set any values r1(r1\u2009\u2265\u20090) and r2(r2\u2009\u2265\u20090), giving the distances at which the water is spread from the first and second fountain respectively. You have to set such r1 and r2 that all the flowers are watered, that is, for each flower, the distance between the flower and the first fountain doesn't exceed r1, or the distance to the second fountain doesn't exceed r2. It's OK if some flowers are watered by both fountains.\n\nYou need to decrease the amount of water you need, that is set such r1 and r2 that all the flowers are watered and the r12\u2009+\u2009r22 is minimum possible. Find this minimum value.\n\nThe first line of the input contains integers n, x1, y1, x2, y2 (1\u2009\u2264\u2009n\u2009\u2264\u20092000, \u2009-\u2009107\u2009\u2264\u2009x1,\u2009y1,\u2009x2,\u2009y2\u2009\u2264\u2009107)\u00a0\u2014 the number of flowers, the coordinates of the first and the second fountain.\n\nNext follow n lines. The i-th of these lines contains integers xi and yi (\u2009-\u2009107\u2009\u2264\u2009xi,\u2009yi\u2009\u2264\u2009107)\u00a0\u2014 the coordinates of the i-th flower.\n\nIt is guaranteed that all n\u2009+\u20092 points in the input are distinct.\n\nPrint the minimum possible value r12\u2009+\u2009r22. Note, that in this problem optimal answer is always integer.\n\nThe first sample is (r12\u2009=\u20095, r22\u2009=\u20091):  The second sample is (r12\u2009=\u20091, r22\u2009=\u200932): "}, {"role": "assistant", "content": "implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "There are three points marked on the coordinate plane. The goal is to make a simple polyline, without self-intersections and self-touches, such that it passes through all these points. Also, the polyline must consist of only segments parallel to the coordinate axes. You are to find the minimum number of segments this polyline may consist of.\n\nEach of the three lines of the input contains two integers. The i-th line contains integers xi and yi (\u2009-\u2009109\u2009\u2264\u2009xi,\u2009yi\u2009\u2264\u2009109)\u00a0\u2014 the coordinates of the i-th point. It is guaranteed that all points are distinct.\n\nPrint a single number\u00a0\u2014 the minimum possible number of segments of the polyline.\n\nThe variant of the polyline in the first sample:  The variant of the polyline in the second sample:  The variant of the polyline in the third sample: "}, {"role": "assistant", "content": "constructivealgorithms, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Bob has a favorite number k and ai of length n. Now he asks you to answer m queries. Each query is given by a pair li and ri and asks you to count the number of pairs of integers i and j, such that l\u2009\u2264\u2009i\u2009\u2264\u2009j\u2009\u2264\u2009r and the xor of the numbers ai,\u2009ai\u2009+\u20091,\u2009...,\u2009aj is equal to k.\n\nThe first line of the input contains integers n, m and k (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009100\u2009000, 0\u2009\u2264\u2009k\u2009\u2264\u20091\u2009000\u2009000)\u00a0\u2014 the length of the array, the number of queries and Bob's favorite number respectively.\n\nThe second line contains n integers ai (0\u2009\u2264\u2009ai\u2009\u2264\u20091\u2009000\u2009000)\u00a0\u2014 Bob's array.\n\nThen m lines follow. The i-th line contains integers li and ri (1\u2009\u2264\u2009li\u2009\u2264\u2009ri\u2009\u2264\u2009n)\u00a0\u2014 the parameters of the i-th query.\n\nPrint m lines, answer the queries in the order they appear in the input. \n\nIn the first sample the suitable pairs of i and j for the first query are: (1, 2), (1, 4), (1, 5), (2, 3), (3, 6), (5, 6), (6, 6). Not a single of these pairs is suitable for the second query.\n\nIn the second sample xor equals 1 for all subarrays of an odd length."}, {"role": "assistant", "content": "datastructures"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Your friend recently gave you some slimes for your birthday. You have n slimes all initially with value 1.\n\nYou are going to play a game with these slimes. Initially, you put a single slime by itself in a row. Then, you will add the other n\u2009-\u20091 slimes one by one. When you add a slime, you place it at the right of all already placed slimes. Then, while the last two slimes in the row have the same value v, you combine them together to create a slime with value v\u2009+\u20091.\n\nYou would like to see what the final state of the row is after you've added all n slimes. Please print the values of the slimes in the row from left to right.\n\nThe first line of the input will contain a single integer, n (1\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000).\n\nOutput a single line with k integers, where k is the number of slimes in the row after you've finished the procedure described in the problem statement. The i-th of these numbers should be the value of the i-th slime from the left.\n\nIn the first sample, we only have a single slime with value 1. The final state of the board is just a single slime with value 1.\n\nIn the second sample, we perform the following steps:\n\nInitially we place a single slime in a row by itself. Thus, row is initially 1.\n\nThen, we will add another slime. The row is now 1 1. Since two rightmost slimes have the same values, we should replace these slimes with one with value 2. Thus, the final state of the board is 2.\n\nIn the third sample, after adding the first two slimes, our row is 2. After adding one more slime, the row becomes 2 1.\n\nIn the last sample, the steps look as follows: "}, {"role": "assistant", "content": "implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Bob has a permutation of integers from 1 to n. Denote this permutation as p. The i-th element of p will be denoted as pi. For all pairs of distinct integers i,\u2009j between 1 and n, he wrote the number ai,\u2009j\u2009=\u2009min(pi,\u2009pj). He writes ai,\u2009i\u2009=\u20090 for all integer i from 1 to n.\n\nBob gave you all the values of ai,\u2009j that he wrote down. Your job is to reconstruct any permutation that could have generated these values. The input will be formed so that it is guaranteed that there is at least one solution that is consistent with the information given.\n\nThe first line of the input will contain a single integer n (2\u2009\u2264\u2009n\u2009\u2264\u200950).\n\nThe next n lines will contain the values of ai,\u2009j. The j-th number on the i-th line will represent ai,\u2009j. The i-th number on the i-th line will be 0. It's guaranteed that ai,\u2009j\u2009=\u2009aj,\u2009i and there is at least one solution consistent with the information given.\n\nPrint n space separated integers, which represents a permutation that could have generated these values. If there are multiple possible solutions, print any of them.\n\nIn the first case, the answer can be {1,\u20092} or {2,\u20091}.\n\nIn the second case, another possible answer is {2,\u20094,\u20095,\u20091,\u20093}."}, {"role": "assistant", "content": "constructivealgorithms"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Cat Noku has obtained a map of the night sky. On this map, he found a constellation with n stars numbered from 1 to n. For each i, the i-th star is located at coordinates (xi,\u2009yi). No two stars are located at the same position.\n\nIn the evening Noku is going to take a look at the night sky. He would like to find three distinct stars and form a triangle. The triangle must have positive area. In addition, all other stars must lie strictly outside of this triangle. He is having trouble finding the answer and would like your help. Your job is to find the indices of three stars that would form a triangle that satisfies all the conditions. \n\nIt is guaranteed that there is no line such that all stars lie on that line. It can be proven that if the previous condition is satisfied, there exists a solution to this problem.\n\nThe first line of the input contains a single integer n (3\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000).\n\nEach of the next n lines contains two integers xi and yi (\u2009-\u2009109\u2009\u2264\u2009xi,\u2009yi\u2009\u2264\u2009109).\n\nIt is guaranteed that no two stars lie at the same point, and there does not exist a line such that all stars lie on that line.\n\nPrint three distinct integers on a single line\u00a0\u2014 the indices of the three points that form a triangle that satisfies the conditions stated in the problem.\n\nIf there are multiple possible answers, you may print any of them.\n\nIn the first sample, we can print the three indices in any order.\n\nIn the second sample, we have the following picture. \n\nNote that the triangle formed by starts 1, 4 and 3 doesn't satisfy the conditions stated in the problem, as point 5 is not strictly outside of this triangle (it lies on it's border)."}, {"role": "assistant", "content": "geometry, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "A group of n cities is connected by a network of roads. There is an undirected road between every pair of cities, so there are  roads in total. It takes exactly y seconds to traverse any single road.\n\nA spanning tree is a set of roads containing exactly n\u2009-\u20091 roads such that it's possible to travel between any two cities using only these roads.\n\nSome spanning tree of the initial network was chosen. For every road in this tree the time one needs to traverse this road was changed from y to x seconds. Note that it's not guaranteed that x is smaller than y.\n\nYou would like to travel through all the cities using the shortest path possible. Given n, x, y and a description of the spanning tree that was chosen, find the cost of the shortest path that starts in any city, ends in any city and visits all cities exactly once.\n\nThe first line of the input contains three integers n, x and y (2\u2009\u2264\u2009n\u2009\u2264\u2009200\u2009000,\u20091\u2009\u2264\u2009x,\u2009y\u2009\u2264\u2009109).\n\nEach of the next n\u2009-\u20091 lines contains a description of a road in the spanning tree. The i-th of these lines contains two integers ui and vi (1\u2009\u2264\u2009ui,\u2009vi\u2009\u2264\u2009n)\u00a0\u2014 indices of the cities connected by the i-th road. It is guaranteed that these roads form a spanning tree.\n\nPrint a single integer\u00a0\u2014 the minimum number of seconds one needs to spend in order to visit all the cities exactly once.\n\nIn the first sample, roads of the spanning tree have cost 2, while other roads have cost 3. One example of an optimal path is .\n\nIn the second sample, we have the same spanning tree, but roads in the spanning tree cost 3, while other roads cost 2. One example of an optimal path is ."}, {"role": "assistant", "content": "dfsandsimilar, dp, graphmatchings, greedy, trees"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Roger is a robot. He has an arm that is a series of n segments connected to each other. The endpoints of the i-th segment are initially located at points (i\u2009-\u20091,\u20090) and (i,\u20090). The endpoint at (i\u2009-\u20091,\u20090) is colored red and the endpoint at (i,\u20090) is colored blue for all segments. Thus, the blue endpoint of the i-th segment is touching the red endpoint of the (i\u2009+\u20091)-th segment for all valid i.\n\nRoger can move his arm in two different ways: \n\nIn this picture, the red point labeled A and segments before A stay in place, while the blue point labeled B and segments after B gets translated.\n\nIn this picture, the red point labeled A and segments before A stay in place, while the blue point labeled B and segments after B get rotated around point A. \n\nRoger will move his arm m times. These transformations are a bit complicated, and Roger easily loses track of where the blue endpoint of the last segment is. Help him compute the coordinates of the blue endpoint of the last segment after applying each operation. Note that these operations are cumulative, and Roger's arm may intersect itself arbitrarily during the moves.\n\nThe first line of the input will contain two integers n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u2009300\u2009000)\u00a0\u2014 the number of segments and the number of operations to perform.\n\nEach of the next m lines contains three integers xi, yi and zi describing a move. If xi\u2009=\u20091, this line describes a move of type 1, where yi denotes the segment number and zi denotes the increase in the length. If xi\u2009=\u20092, this describes a move of type 2, where yi denotes the segment number, and zi denotes the angle in degrees. (1\u2009\u2264\u2009xi\u2009\u2264\u20092,\u20091\u2009\u2264\u2009yi\u2009\u2264\u2009n,\u20091\u2009\u2264\u2009zi\u2009\u2264\u2009359)\n\nPrint m lines. The i-th line should contain two real values, denoting the coordinates of the blue endpoint of the last segment after applying operations 1,\u2009...,\u2009i. Your answer will be considered correct if its absolute or relative error does not exceed 10\u2009-\u20094.\n\nNamely, let's assume that your answer for a particular value of a coordinate is a and the answer of the jury is b. The checker program will consider your answer correct if  for all coordinates.\n\nThe following pictures shows the state of the arm after each operation. The coordinates of point F are printed after applying each operation. For simplicity, we only show the blue endpoints of a segment (with the exception for the red endpoint of the first segment). For instance, the point labeled B is the blue endpoint for segment 1 and also the red endpoint for segment 2.\n\nInitial state: "}, {"role": "assistant", "content": "datastructures, geometry"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given two multisets A and B. Each multiset has exactly n integers each between 1 and n inclusive. Multisets may contain multiple copies of the same number.\n\nYou would like to find a nonempty subset of A and a nonempty subset of B such that the sum of elements in these subsets are equal. Subsets are also multisets, i.e. they can contain elements with equal values.\n\nIf no solution exists, print \u2009-\u20091. Otherwise, print the indices of elements in any such subsets of A and B that have the same sum.\n\nThe first line of the input contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u20091\u2009000\u2009000)\u00a0\u2014 the size of both multisets.\n\nThe second line contains n integers, denoting the elements of A. Each element will be between 1 and n inclusive.\n\nThe third line contains n integers, denoting the elements of B. Each element will be between 1 and n inclusive.\n\nIf there is no solution, print a single integer \u2009-\u20091. Otherwise, your solution should be printed on four lines.\n\nThe first line should contain a single integer ka, the size of the corresponding subset of A. The second line should contain ka distinct integers, the indices of the subset of A.\n\nThe third line should contain a single integer kb, the size of the corresponding subset of B. The fourth line should contain kb distinct integers, the indices of the subset of B.\n\nElements in both sets are numbered from 1 to n. If there are multiple possible solutions, print any of them."}, {"role": "assistant", "content": "constructivealgorithms, twopointers"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Your friend recently gave you some slimes for your birthday. You have a very large amount of slimes with value 1 and 2, and you decide to invent a game using these slimes.\n\nYou initialize a row with n empty spaces. You also choose a number p to be used in the game. Then, you will perform the following steps while the last space is empty. \n\nYou have played the game a few times, but have gotten bored of it. You are now wondering, what is the expected sum of all values of the slimes on the board after you finish the game.\n\nThe first line of the input will contain two integers n,\u2009p (1\u2009\u2264\u2009n\u2009\u2264\u2009109,\u20091\u2009\u2264\u2009p\u2009<\u2009109).\n\nPrint the expected sum of all slimes on the board after the game finishes. Your answer will be considered correct if its absolute or relative error does not exceed 10\u2009-\u20094.\n\nNamely, let's assume that your answer is a and the answer of the jury is b. The checker program will consider your answer correct, if .\n\nIn the first sample, we have a board with two squares, and there is a 0.5 probability of a 1 appearing and a 0.5 probability of a 2 appearing.\n\nOur final board states can be 1 2 with probability 0.25, 2 1 with probability 0.375, 3 2 with probability 0.1875, 3 1 with probability 0.1875. The expected value is thus (1\u2009+\u20092)\u00b70.25\u2009+\u2009(2\u2009+\u20091)\u00b70.375\u2009+\u2009(3\u2009+\u20092)\u00b70.1875\u2009+\u2009(3\u2009+\u20091)\u00b70.1875\u2009=\u20093.5625."}, {"role": "assistant", "content": "dp, math, matrices, probabilities"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Statistics claims that students sleep no more than three hours a day. But even in the world of their dreams, while they are snoring peacefully, the sense of impending doom is still upon them.\n\nA poor student is dreaming that he is sitting the mathematical analysis exam. And he is examined by the most formidable professor of all times, a three times Soviet Union Hero, a Noble Prize laureate in student expulsion, venerable Petr Palych.\n\nThe poor student couldn't answer a single question. Thus, instead of a large spacious office he is going to apply for a job to thorium mines. But wait a minute! Petr Palych decided to give the student the last chance! Yes, that is possible only in dreams. \n\nSo the professor began: \"Once a Venusian girl and a Marsian boy met on the Earth and decided to take a walk holding hands. But the problem is the girl has al fingers on her left hand and ar fingers on the right one. The boy correspondingly has bl and br fingers. They can only feel comfortable when holding hands, when no pair of the girl's fingers will touch each other. That is, they are comfortable when between any two girl's fingers there is a boy's finger. And in addition, no three fingers of the boy should touch each other. Determine if they can hold hands so that the both were comfortable.\"\n\nThe boy any the girl don't care who goes to the left and who goes to the right. The difference is only that if the boy goes to the left of the girl, he will take her left hand with his right one, and if he goes to the right of the girl, then it is vice versa.\n\nThe first line contains two positive integers not exceeding 100. They are the number of fingers on the Venusian girl's left and right hand correspondingly. The second line contains two integers not exceeding 100. They are the number of fingers on the Marsian boy's left and right hands correspondingly.\n\nPrint YES or NO, that is, the answer to Petr Palych's question.\n\nThe boy and the girl don't really care who goes to the left."}, {"role": "assistant", "content": "greedy, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Tyndex is again well ahead of the rivals! The reaction to the release of Zoozle Chrome browser was the release of a new browser Tyndex.Brome!\n\nThe popularity of the new browser is growing daily. And the secret is not even the Tyndex.Bar installed (the Tyndex.Bar automatically fills the glass with the finest 1664 cognac after you buy Tyndex.Bottles and insert in into a USB port). It is highly popular due to the well-thought interaction with the user.\n\nLet us take, for example, the system of automatic address correction. Have you entered codehorses instead of codeforces? The gloomy Zoozle Chrome will sadly say that the address does not exist. Tyndex.Brome at the same time will automatically find the closest address and sent you there. That's brilliant!\n\nHow does this splendid function work? That's simple! For each potential address a function of the F error is calculated by the following rules:\n\nAfter the values of the error function have been calculated for all the potential addresses the most suitable one is found. \n\nTo understand the special features of the above described method better, it is recommended to realize the algorithm of calculating the F function for an address given by the user and some set of potential addresses. Good luck!\n\nThe first line contains two integers n and k (1\u2009\u2264\u2009n\u2009\u2264\u2009105,\u20091\u2009\u2264\u2009k\u2009\u2264\u2009105). They are the number of potential addresses and the length of the address entered by the user. The next line contains k lowercase Latin letters. They are the address entered by the user (s). Each next i-th (1\u2009\u2264\u2009i\u2009\u2264\u2009n) line contains a non-empty sequence of lowercase Latin letters. They are the potential address. It is guaranteed that the total length of all the lines does not exceed 2\u00b7105.\n\nOn each n line of the output file print a single number: the value of the error function when the current potential address is chosen.\n\nPlease, do not use %lld specificator to read or write 64-bit integers in C++. It is preffered to use cout (also you may use %I64d)."}, {"role": "assistant", "content": "binarysearch, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "In Medieval times existed the tradition of burning witches at steaks together with their pets, black cats. By the end of the 15-th century the population of black cats ceased to exist. The difficulty of the situation led to creating the EIC - the Emergency Inquisitory Commission.\n\nThe resolution #666 says that a white cat is considered black when and only when the perimeter of its black spots exceeds the acceptable norm. But what does the acceptable norm equal to? Every inquisitor will choose it himself depending on the situation. And your task is to find the perimeter of black spots on the cat's fur.\n\nThe very same resolution says that the cat's fur is a white square with the length of 105. During the measurement of spots it is customary to put the lower left corner of the fur into the origin of axes (0;0) and the upper right one \u2014 to the point with coordinates (105;105). The cats' spots are nondegenerate triangles. The spots can intersect and overlap with each other, but it is guaranteed that each pair of the triangular spots' sides have no more than one common point.\n\nWe'll regard the perimeter in this problem as the total length of the boarders where a cat's fur changes color.\n\nThe first input line contains a single integer n (0\u2009\u2264\u2009n\u2009\u2264\u2009100). It is the number of spots on the cat's fur. The i-th of the last n lines contains 6 integers: x1i, y1i, x2i, y2i, x3i, y3i. They are the coordinates of the i-th triangular spot (0\u2009<\u2009xji,\u2009yji\u2009<\u2009105).\n\nPrint a single number, the answer to the problem, perimeter of the union of triangles. Your answer should differ from the correct one in no more than 10\u2009-\u20096."}, {"role": "assistant", "content": "geometry, implementation, sortings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Arnie the Worm has finished eating an apple house yet again and decided to move. He made up his mind on the plan, the way the rooms are located and how they are joined by corridors. He numbered all the rooms from 1 to n. All the corridors are bidirectional.\n\nArnie wants the new house to look just like the previous one. That is, it should have exactly n rooms and, if a corridor from room i to room j existed in the old house, it should be built in the new one. \n\nWe know that during the house constructing process Arnie starts to eat an apple starting from some room and only stops when he eats his way through all the corridors and returns to the starting room. It is also known that Arnie eats without stopping. That is, until Arnie finishes constructing the house, he is busy every moment of his time gnawing a new corridor. Arnie doesn't move along the already built corridors.\n\nHowever, gnawing out corridors in one and the same order any time you change a house is a very difficult activity. That's why Arnie, knowing the order in which the corridors were located in the previous house, wants to gnaw corridors in another order. It is represented as a list of rooms in the order in which they should be visited. The new list should be lexicographically smallest, but it also should be strictly lexicographically greater than the previous one. Help the worm. \n\nThe first line contains two integers n and m (3\u2009\u2264\u2009n\u2009\u2264\u2009100,\u20093\u2009\u2264\u2009m\u2009\u2264\u20092000). It is the number of rooms and corridors in Arnie's house correspondingly. The next line contains m\u2009+\u20091 positive integers that do not exceed n. They are the description of Arnie's old path represented as a list of rooms he visited during the gnawing. It is guaranteed that the last number in the list coincides with the first one.\n\nThe first room described in the list is the main entrance, that's why Arnie should begin gnawing from it.\n\nYou may assume that there is no room which is connected to itself and there is at most one corridor between any pair of rooms. However, it is possible to find some isolated rooms which are disconnected from others.\n\nPrint m\u2009+\u20091 positive integers that do not exceed n. Those numbers are the description of the new path, according to which Arnie should gnaw out his new house. If it is impossible to find new path you should print out No solution. The first number in your answer should be equal to the last one. Also it should be equal to the main entrance."}, {"role": "assistant", "content": "dfsandsimilar, graphs"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "As a result of Pinky and Brain's mysterious experiments in the Large Hadron Collider some portals or black holes opened to the parallel dimension. And the World Evil has crept to the veil between their world and ours. Brain quickly evaluated the situation and he understood that the more evil tentacles creep out and become free, the higher is the possibility that Brain will rule the world.\n\nThe collider's constriction is a rectangular grid rolled into a cylinder and consisting of n rows and m columns such as is shown in the picture below:\n\nIn this example n\u2009=\u20094, m\u2009=\u20095. Dotted lines are corridores that close each column to a ring, i. e. connect the n-th and the 1-th rows of the grid.\n\nIn the leftmost column of the grid the portals are situated and the tentacles of the World Evil are ready to creep out from there. In the rightmost column the exit doors are located. The tentacles can only get out through those doors. The segments joining the nodes of the grid are corridors.\n\nBrain would be glad to let all the tentacles out but he faces a problem: the infinite number of tentacles can creep out of the portals, every tentacle possesses infinite length and some width and the volume of the corridors are, unfortunately, quite limited. Brain could approximately evaluate the maximal number of tentacles that will be able to crawl through every corridor.\n\nNow help the mice to determine the maximal number of tentacles of the World Evil that will crawl out of the Large Hadron Collider.\n\nThe first line of the input file contains two integers n and m (2\u2009\u2264\u2009n\u2009\u2264\u20095, 2\u2009\u2264\u2009m\u2009\u2264\u2009105). They are the sizes of the Large Hadron Collider grid. The next m\u2009-\u20091 lines contain n numbers each. They are the horizontal corridors' capacities. The next m lines contain n numbers each. They are the vertical corridors' capacities. Corridors are described from left to right and from top to bottom. Every n-th vertical corridor connects nodes of the n-th and 1-th rows. A corridor's capacity is a non-negative integer that does not exceed 109.\n\nPrint a single number, the number of the World Evil tentacles Pinky and Brain will command.\n\nPlease, do not use %lld specificator to read or write 64-bit integers in C++. It is preffered to use cout (also you may use %I64d)."}, {"role": "assistant", "content": "dp, flows"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Professor GukiZ makes a new robot. The robot are in the point with coordinates (x1,\u2009y1) and should go to the point (x2,\u2009y2). In a single step the robot can change any of its coordinates (maybe both of them) by one (decrease or increase). So the robot can move in one of the 8 directions. Find the minimal number of steps the robot should make to get the finish position.\n\nThe first line contains two integers x1,\u2009y1 (\u2009-\u2009109\u2009\u2264\u2009x1,\u2009y1\u2009\u2264\u2009109) \u2014 the start position of the robot.\n\nThe second line contains two integers x2,\u2009y2 (\u2009-\u2009109\u2009\u2264\u2009x2,\u2009y2\u2009\u2264\u2009109) \u2014 the finish position of the robot.\n\nPrint the only integer d \u2014 the minimal number of steps to get the finish position.\n\nIn the first example robot should increase both of its coordinates by one four times, so it will be in position (4,\u20094). After that robot should simply increase its y coordinate and get the finish position.\n\nIn the second example robot should simultaneously increase x coordinate and decrease y coordinate by one three times."}, {"role": "assistant", "content": "implementation, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Once Max found an electronic calculator from his grandfather Dovlet's chest. He noticed that the numbers were written with seven-segment indicators (https://en.wikipedia.org/wiki/Seven-segment_display).\n\nMax starts to type all the values from a to b. After typing each number Max resets the calculator. Find the total number of segments printed on the calculator.\n\nFor example if a\u2009=\u20091 and b\u2009=\u20093 then at first the calculator will print 2 segments, then \u2014 5 segments and at last it will print 5 segments. So the total number of printed segments is 12.\n\nThe only line contains two integers a,\u2009b (1\u2009\u2264\u2009a\u2009\u2264\u2009b\u2009\u2264\u2009106) \u2014 the first and the last number typed by Max.\n\nPrint the only integer a \u2014 the total number of printed segments."}, {"role": "assistant", "content": "implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "There are n pearls in a row. Let's enumerate them with integers from 1 to n from the left to the right. The pearl number i has the type ai.\n\nLet's call a sequence of consecutive pearls a segment. Let's call a segment good if it contains two pearls of the same type.\n\nSplit the row of the pearls to the maximal number of good segments. Note that each pearl should appear in exactly one segment of the partition.\n\nAs input/output can reach huge size it is recommended to use fast input/output methods: for example, prefer to use scanf/printf instead of cin/cout in C++, prefer to use BufferedReader/PrintWriter instead of Scanner/System.out in Java.\n\nThe first line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u20093\u00b7105) \u2014 the number of pearls in a row.\n\nThe second line contains n integers ai (1\u2009\u2264\u2009ai\u2009\u2264\u2009109) \u2013 the type of the i-th pearl.\n\nOn the first line print integer k \u2014 the maximal number of segments in a partition of the row.\n\nEach of the next k lines should contain two integers lj,\u2009rj (1\u2009\u2264\u2009lj\u2009\u2264\u2009rj\u2009\u2264\u2009n) \u2014 the number of the leftmost and the rightmost pearls in the j-th segment.\n\nNote you should print the correct partition of the row of the pearls, so each pearl should be in exactly one segment and all segments should contain two pearls of the same type.\n\nIf there are several optimal solutions print any of them. You can print the segments in any order.\n\nIf there are no correct partitions of the row print the number \"-1\"."}, {"role": "assistant", "content": "greedy"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Professor GukiZ has two arrays of integers, a and b. Professor wants to make the sum of the elements in the array a sa as close as possible to the sum of the elements in the array b sb. So he wants to minimize the value v\u2009=\u2009|sa\u2009-\u2009sb|.\n\nIn one operation professor can swap some element from the array a and some element from the array b. For example if the array a is [5,\u20091,\u20093,\u20092,\u20094] and the array b is [3,\u20093,\u20092] professor can swap the element 5 from the array a and the element 2 from the array b and get the new array a [2,\u20091,\u20093,\u20092,\u20094] and the new array b [3,\u20093,\u20095].\n\nProfessor doesn't want to make more than two swaps. Find the minimal value v and some sequence of no more than two swaps that will lead to the such value v. Professor makes swaps one by one, each new swap he makes with the new arrays a and b.\n\nThe first line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u20092000) \u2014 the number of elements in the array a.\n\nThe second line contains n integers ai (\u2009-\u2009109\u2009\u2264\u2009ai\u2009\u2264\u2009109) \u2014 the elements of the array a.\n\nThe third line contains integer m (1\u2009\u2264\u2009m\u2009\u2264\u20092000) \u2014 the number of elements in the array b.\n\nThe fourth line contains m integers bj (\u2009-\u2009109\u2009\u2264\u2009bj\u2009\u2264\u2009109) \u2014 the elements of the array b.\n\nIn the first line print the minimal value v\u2009=\u2009|sa\u2009-\u2009sb| that can be got with no more than two swaps.\n\nThe second line should contain the number of swaps k (0\u2009\u2264\u2009k\u2009\u2264\u20092).\n\nEach of the next k lines should contain two integers xp,\u2009yp (1\u2009\u2264\u2009xp\u2009\u2264\u2009n,\u20091\u2009\u2264\u2009yp\u2009\u2264\u2009m) \u2014 the index of the element in the array a and the index of the element in the array b in the p-th swap.\n\nIf there are several optimal solutions print any of them. Print the swaps in order the professor did them."}, {"role": "assistant", "content": "binarysearch, twopointers"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The New Year holidays are over, but Resha doesn't want to throw away the New Year tree. He invited his best friends Kerim and Gural to help him to redecorate the New Year tree.\n\nThe New Year tree is an undirected tree with n vertices and root in the vertex 1.\n\nYou should process the queries of the two types:\n\nThe first line contains two integers n,\u2009m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u20094\u00b7105) \u2014 the number of vertices in the tree and the number of the queries.\n\nThe second line contains n integers ci (1\u2009\u2264\u2009ci\u2009\u2264\u200960) \u2014 the colour of the i-th vertex.\n\nEach of the next n\u2009-\u20091 lines contains two integers xj,\u2009yj (1\u2009\u2264\u2009xj,\u2009yj\u2009\u2264\u2009n) \u2014 the vertices of the j-th edge. It is guaranteed that you are given correct undirected tree.\n\nThe last m lines contains the description of the queries. Each description starts with the integer tk (1\u2009\u2264\u2009tk\u2009\u2264\u20092) \u2014 the type of the k-th query. For the queries of the first type then follows two integers vk,\u2009ck (1\u2009\u2264\u2009vk\u2009\u2264\u2009n,\u20091\u2009\u2264\u2009ck\u2009\u2264\u200960) \u2014 the number of the vertex whose subtree will be recoloured with the colour ck. For the queries of the second type then follows integer vk (1\u2009\u2264\u2009vk\u2009\u2264\u2009n) \u2014 the number of the vertex for which subtree you should find the number of different colours.\n\nFor each query of the second type print the integer a \u2014 the number of different colours in the subtree of the vertex given in the query.\n\nEach of the numbers should be printed on a separate line in order of query appearing in the input."}, {"role": "assistant", "content": "bitmasks, datastructures, trees"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given an array with n integers ai and m queries. Each query is described by two integers (lj,\u2009rj).\n\nLet's define the function . The function is defined for only u\u2009\u2264\u2009v.\n\nFor each query print the maximal value of the function f(ax,\u2009ay) over all lj\u2009\u2264\u2009x,\u2009y\u2009\u2264\u2009rj,\u2009 ax\u2009\u2264\u2009ay.\n\nThe first line contains two integers n,\u2009m (1\u2009\u2264\u2009n\u2009\u2264\u20095\u00b7104,\u2009 1\u2009\u2264\u2009m\u2009\u2264\u20095\u00b7103) \u2014 the size of the array and the number of the queries.\n\nThe second line contains n integers ai (1\u2009\u2264\u2009ai\u2009\u2264\u2009106) \u2014 the elements of the array a.\n\nEach of the next m lines contains two integers lj,\u2009rj (1\u2009\u2264\u2009lj\u2009\u2264\u2009rj\u2009\u2264\u2009n) \u2013 the parameters of the j-th query.\n\nFor each query print the value aj on a separate line \u2014 the maximal value of the function f(ax,\u2009ay) over all lj\u2009\u2264\u2009x,\u2009y\u2009\u2264\u2009rj,\u2009 ax\u2009\u2264\u2009ay."}, {"role": "assistant", "content": "datastructures, strings, trees"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Today, Wet Shark is given n integers. Using any of these integers no more than once, Wet Shark wants to get maximum possible even (divisible by 2) sum. Please, calculate this value for Wet Shark. \n\nNote, that if Wet Shark uses no integers from the n integers, the sum is an even integer 0.\n\nThe first line of the input contains one integer, n (1\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000). The next line contains n space separated integers given to Wet Shark. Each of these integers is in range from 1 to 109, inclusive. \n\nPrint the maximum possible even sum that can be obtained if we use some of the given integers. \n\nIn the first sample, we can simply take all three integers for a total sum of 6.\n\nIn the second sample Wet Shark should take any four out of five integers 999\u2009999\u2009999."}, {"role": "assistant", "content": "implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Today, Wet Shark is given n bishops on a 1000 by 1000 grid. Both rows and columns of the grid are numbered from 1 to 1000. Rows are numbered from top to bottom, while columns are numbered from left to right.\n\nWet Shark thinks that two bishops attack each other if they share the same diagonal. Note, that this is the only criteria, so two bishops may attack each other (according to Wet Shark) even if there is another bishop located between them. Now Wet Shark wants to count the number of pairs of bishops that attack each other.\n\nThe first line of the input contains n (1\u2009\u2264\u2009n\u2009\u2264\u2009200\u2009000)\u00a0\u2014 the number of bishops.\n\nEach of next n lines contains two space separated integers xi and yi (1\u2009\u2264\u2009xi,\u2009yi\u2009\u2264\u20091000)\u00a0\u2014 the number of row and the number of column where i-th bishop is positioned. It's guaranteed that no two bishops share the same position.\n\nOutput one integer\u00a0\u2014 the number of pairs of bishops which attack each other. \n\nIn the first sample following pairs of bishops attack each other: (1,\u20093), (1,\u20095), (2,\u20093), (2,\u20094), (3,\u20094) and (3,\u20095). Pairs (1,\u20092), (1,\u20094), (2,\u20095) and (4,\u20095) do not attack each other because they do not share the same diagonal."}, {"role": "assistant", "content": "combinatorics, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "There are n sharks who grow flowers for Wet Shark. They are all sitting around the table, such that sharks i and i\u2009+\u20091 are neighbours for all i from 1 to n\u2009-\u20091. Sharks n and 1 are neighbours too.\n\nEach shark will grow some number of flowers si. For i-th shark value si is random integer equiprobably chosen in range from li to ri. Wet Shark has it's favourite prime number p, and he really likes it! If for any pair of neighbouring sharks i and j the product si\u00b7sj is divisible by p, then Wet Shark becomes happy and gives 1000 dollars to each of these sharks.\n\nAt the end of the day sharks sum all the money Wet Shark granted to them. Find the expectation of this value.\n\nThe first line of the input contains two space-separated integers n and p (3\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000,\u20092\u2009\u2264\u2009p\u2009\u2264\u2009109)\u00a0\u2014 the number of sharks and Wet Shark's favourite prime number. It is guaranteed that p is prime.\n\nThe i-th of the following n lines contains information about i-th shark\u00a0\u2014 two space-separated integers li and ri (1\u2009\u2264\u2009li\u2009\u2264\u2009ri\u2009\u2264\u2009109), the range of flowers shark i can produce. Remember that si is chosen equiprobably among all integers from li to ri, inclusive.\n\nPrint a single real number \u2014 the expected number of dollars that the sharks receive in total. You answer will be considered correct if its absolute or relative error does not exceed 10\u2009-\u20096. \n\nNamely: let's assume that your answer is a, and the answer of the jury is b. The checker program will consider your answer correct, if .\n\nA prime number is a positive integer number that is divisible only by 1 and itself. 1 is not considered to be prime.\n\nConsider the first sample. First shark grows some number of flowers from 1 to 2, second sharks grows from 420 to 421 flowers and third from 420420 to 420421. There are eight cases for the quantities of flowers (s0,\u2009s1,\u2009s2) each shark grows:\n\nThe expected value is .\n\nIn the second sample, no combination of quantities will garner the sharks any money."}, {"role": "assistant", "content": "combinatorics, math, numbertheory, probabilities"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Wet Shark asked Rat Kwesh to generate three positive real numbers x, y and z, from 0.1 to 200.0, inclusive. Wet Krash wants to impress Wet Shark, so all generated numbers will have exactly one digit after the decimal point.\n\nWet Shark knows Rat Kwesh will want a lot of cheese. So he will give the Rat an opportunity to earn a lot of cheese. He will hand the three numbers x, y and z to Rat Kwesh, and Rat Kwesh will pick one of the these twelve options:\n\nLet m be the maximum of all the ai, and c be the smallest index (from 1 to 12) such that ac\u2009=\u2009m. Rat's goal is to find that c, and he asks you to help him. Rat Kwesh wants to see how much cheese he gets, so he you will have to print the expression corresponding to that ac.\n\n \n\nThe only line of the input contains three space-separated real numbers x, y and z (0.1\u2009\u2264\u2009x,\u2009y,\u2009z\u2009\u2264\u2009200.0). Each of x, y and z is given with exactly one digit after the decimal point.\n\nFind the maximum value of expression among xyz, xzy, (xy)z, (xz)y, yxz, yzx, (yx)z, (yz)x, zxy, zyx, (zx)y, (zy)x and print the corresponding expression. If there are many maximums, print the one that comes first in the list. \n\nxyz should be outputted as x^y^z (without brackets), and (xy)z should be outputted as (x^y)^z (quotes for clarity). "}, {"role": "assistant", "content": "bruteforce, constructivealgorithms, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "There are b blocks of digits. Each one consisting of the same n digits, which are given to you in the input. Wet Shark must choose exactly one digit from each block and concatenate all of those digits together to form one large integer. For example, if he chooses digit 1 from the first block and digit 2 from the second block, he gets the integer 12. \n\nWet Shark then takes this number modulo x. Please, tell him how many ways he can choose one digit from each block so that he gets exactly k as the final result. As this number may be too large, print it modulo 109\u2009+\u20097.\n\nNote, that the number of ways to choose some digit in the block is equal to the number of it's occurrences. For example, there are 3 ways to choose digit 5 from block 3 5 6 7 8 9 5 1 1 1 1 5.\n\nThe first line of the input contains four space-separated integers, n, b, k and x (2\u2009\u2264\u2009n\u2009\u2264\u200950\u2009000,\u20091\u2009\u2264\u2009b\u2009\u2264\u2009109,\u20090\u2009\u2264\u2009k\u2009<\u2009x\u2009\u2264\u2009100,\u2009x\u2009\u2265\u20092)\u00a0\u2014 the number of digits in one block, the number of blocks, interesting remainder modulo x and modulo x itself.\n\nThe next line contains n space separated integers ai (1\u2009\u2264\u2009ai\u2009\u2264\u20099), that give the digits contained in each block.\n\nPrint the number of ways to pick exactly one digit from each blocks, such that the resulting integer equals k modulo x.\n\nIn the second sample possible integers are 22, 26, 62 and 66. None of them gives the remainder 1 modulo 2.\n\nIn the third sample integers 11, 13, 21, 23, 31 and 33 have remainder 1 modulo 2. There is exactly one way to obtain each of these integers, so the total answer is 6."}, {"role": "assistant", "content": "dp, matrices"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Consider the infinite sequence of integers: 1,\u20091,\u20092,\u20091,\u20092,\u20093,\u20091,\u20092,\u20093,\u20094,\u20091,\u20092,\u20093,\u20094,\u20095.... The sequence is built in the following way: at first the number 1 is written out, then the numbers from 1 to 2, then the numbers from 1 to 3, then the numbers from 1 to 4 and so on. Note that the sequence contains numbers, not digits. For example number 10 first appears in the sequence in position 55 (the elements are numerated from one).\n\nFind the number on the n-th position of the sequence.\n\nThe only line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u20091014) \u2014 the position of the number to find.\n\nNote that the given number is too large, so you should use 64-bit integer type to store it. In C++ you can use the long long integer type and in Java you can use long integer type.\n\nPrint the element in the n-th position of the sequence (the elements are numerated from one)."}, {"role": "assistant", "content": "implementation, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given the current time in 24-hour format hh:mm. Find and print the time after a minutes.\n\nNote that you should find only the time after a minutes, see the examples to clarify the problem statement.\n\nYou can read more about 24-hour format here https://en.wikipedia.org/wiki/24-hour_clock.\n\nThe first line contains the current time in the format hh:mm (0\u2009\u2264\u2009hh\u2009<\u200924,\u20090\u2009\u2264\u2009mm\u2009<\u200960). The hours and the minutes are given with two digits (the hours or the minutes less than 10 are given with the leading zeroes).\n\nThe second line contains integer a (0\u2009\u2264\u2009a\u2009\u2264\u2009104) \u2014 the number of the minutes passed.\n\nThe only line should contain the time after a minutes in the format described in the input. Note that you should print exactly two digits for the hours and the minutes (add leading zeroes to the numbers if needed).\n\nSee the examples to check the input/output format."}, {"role": "assistant", "content": "implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given array a with n integers and m queries. The i-th query is given with three integers li,\u2009ri,\u2009xi.\n\nFor the i-th query find any position pi (li\u2009\u2264\u2009pi\u2009\u2264\u2009ri) so that api\u2009\u2260\u2009xi.\n\nThe first line contains two integers n,\u2009m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u20092\u00b7105) \u2014 the number of elements in a and the number of queries.\n\nThe second line contains n integers ai (1\u2009\u2264\u2009ai\u2009\u2264\u2009106) \u2014 the elements of the array a.\n\nEach of the next m lines contains three integers li,\u2009ri,\u2009xi (1\u2009\u2264\u2009li\u2009\u2264\u2009ri\u2009\u2264\u2009n,\u20091\u2009\u2264\u2009xi\u2009\u2264\u2009106) \u2014 the parameters of the i-th query.\n\nPrint m lines. On the i-th line print integer pi \u2014 the position of any number not equal to xi in segment [li,\u2009ri] or the value \u2009-\u20091 if there is no such number."}, {"role": "assistant", "content": "datastructures, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You have array a that contains all integers from 1 to n twice. You can arbitrary permute any numbers in a.\n\nLet number i be in positions xi,\u2009yi (xi\u2009<\u2009yi) in the permuted array a. Let's define the value di\u2009=\u2009yi\u2009-\u2009xi \u2014 the distance between the positions of the number i. Permute the numbers in array a to minimize the value of the sum .\n\nThe only line contains integer n (1\u2009\u2264\u2009n\u2009\u2264\u20095\u00b7105).\n\nPrint 2n integers \u2014 the permuted array a that minimizes the value of the sum s."}, {"role": "assistant", "content": "constructivealgorithms"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Tree is a connected graph without cycles. A leaf of a tree is any vertex connected with exactly one other vertex.\n\nYou are given a tree with n vertices and a root in the vertex 1. There is an ant in each leaf of the tree. In one second some ants can simultaneously go to the parent vertex from the vertex they were in. No two ants can be in the same vertex simultaneously except for the root of the tree.\n\nFind the minimal time required for all ants to be in the root of the tree. Note that at start the ants are only in the leaves of the tree.\n\nThe first line contains integer n (2\u2009\u2264\u2009n\u2009\u2264\u20095\u00b7105) \u2014 the number of vertices in the tree.\n\nEach of the next n\u2009-\u20091 lines contains two integers xi,\u2009yi (1\u2009\u2264\u2009xi,\u2009yi\u2009\u2264\u2009n) \u2014 the ends of the i-th edge. It is guaranteed that you are given the correct undirected tree.\n\nPrint the only integer t \u2014 the minimal time required for all ants to be in the root of the tree."}, {"role": "assistant", "content": "dfsandsimilar, greedy, sortings, trees"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "There are well-known formulas: , , . Also mathematicians found similar formulas for higher degrees.\n\nFind the value of the sum  modulo 109\u2009+\u20097 (so you should find the remainder after dividing the answer by the value 109\u2009+\u20097).\n\nThe only line contains two integers n,\u2009k (1\u2009\u2264\u2009n\u2009\u2264\u2009109,\u20090\u2009\u2264\u2009k\u2009\u2264\u2009106).\n\nPrint the only integer a \u2014 the remainder after dividing the value of the sum by the value 109\u2009+\u20097."}, {"role": "assistant", "content": "math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "One day student Vasya was sitting on a lecture and mentioned a string s1s2... sn, consisting of letters \"a\", \"b\" and \"c\" that was written on his desk. As the lecture was boring, Vasya decided to complete the picture by composing a graph G with the following properties: \n\nVasya painted the resulting graph near the string and then erased the string. Next day Vasya's friend Petya came to a lecture and found some graph at his desk. He had heard of Vasya's adventure and now he wants to find out whether it could be the original graph G, painted by Vasya. In order to verify this, Petya needs to know whether there exists a string s, such that if Vasya used this s he would produce the given graph G.\n\nThe first line of the input contains two integers n and m \u00a0\u2014 the number of vertices and edges in the graph found by Petya, respectively.\n\nEach of the next m lines contains two integers ui and vi (1\u2009\u2264\u2009ui,\u2009vi\u2009\u2264\u2009n,\u2009ui\u2009\u2260\u2009vi)\u00a0\u2014 the edges of the graph G. It is guaranteed, that there are no multiple edges, that is any pair of vertexes appear in this list no more than once.\n\nIn the first line print \"Yes\" (without the quotes), if the string s Petya is interested in really exists and \"No\" (without the quotes) otherwise.\n\nIf the string s exists, then print it on the second line of the output. The length of s must be exactly n, it must consist of only letters \"a\", \"b\" and \"c\" only, and the graph built using this string must coincide with G. If there are multiple possible answers, you may print any of them.\n\nIn the first sample you are given a graph made of two vertices with an edge between them. So, these vertices can correspond to both the same and adjacent letters. Any of the following strings \"aa\", \"ab\", \"ba\", \"bb\", \"bc\", \"cb\", \"cc\" meets the graph's conditions. \n\nIn the second sample the first vertex is connected to all three other vertices, but these three vertices are not connected with each other. That means that they must correspond to distinct letters that are not adjacent, but that is impossible as there are only two such letters: a and c."}, {"role": "assistant", "content": "constructivealgorithms, graphs"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given array ai of length n. You may consecutively apply two operations to this array:\n\nPlease note that each of operations may be applied at most once (and may be not applied at all) so you can remove only one segment and each number may be changed (increased or decreased) by at most 1. Also note, that you are not allowed to delete the whole array.\n\nYour goal is to calculate the minimum number of coins that you need to spend in order to make the greatest common divisor of the elements of the resulting array be greater than 1.\n\nThe first line of the input contains integers n, a and b (1\u2009\u2264\u2009n\u2009\u2264\u20091\u2009000\u2009000,\u20090\u2009\u2264\u2009a,\u2009b\u2009\u2264\u2009109)\u00a0\u2014 the length of the array, the cost of removing a single element in the first operation and the cost of changing an element, respectively.\n\nThe second line contains n integers ai (2\u2009\u2264\u2009ai\u2009\u2264\u2009109)\u00a0\u2014 elements of the array.\n\nPrint a single number\u00a0\u2014 the minimum cost of changes needed to obtain an array, such that the greatest common divisor of all its elements is greater than 1.\n\nIn the first sample the optimal way is to remove number 3 and pay 1 coin for it.\n\nIn the second sample you need to remove a segment [17,\u200913] and then decrease number 6. The cost of these changes is equal to 2\u00b73\u2009+\u20092\u2009=\u20098 coins."}, {"role": "assistant", "content": "dp, greedy, numbertheory"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Programmer Sasha is a student at MIPT (Moscow Institute of Physics and Technology) and he needs to make a laboratory work to pass his finals.\n\nA laboratory unit is a plane with standard coordinate axes marked on it. Physicists from Moscow Institute of Physics and Technology charged the axes by large electric charges: axis X is positive and axis Y is negative.\n\nExperienced laboratory worker marked n points with integer coordinates (xi,\u2009yi) on the plane and stopped the time. Sasha should use \"atomic tweezers\" to place elementary particles in these points. He has an unlimited number of electrons (negatively charged elementary particles) and protons (positively charged elementary particles). He can put either an electron or a proton at each marked point. As soon as all marked points are filled with particles, laboratory worker will turn on the time again and the particles will come in motion and after some time they will stabilize in equilibrium. The objective of the laboratory work is to arrange the particles in such a way, that the diameter of the resulting state (the maximum distance between the pairs of points of the set) is as small as possible.\n\nSince Sasha is a programmer, he naively thinks that all the particles will simply \"fall\" into their projections on the corresponding axes: electrons will fall on axis X, while protons will fall on axis Y. As we are programmers too, we will consider the same model as Sasha. That is, a particle gets from point (x,\u2009y) to point (x,\u20090) if it is an electron and to point (0,\u2009y) if it is a proton.\n\nAs the laboratory has high background radiation and Sasha takes care of his laptop, he did not take it with him, and now he can't write a program that computes the minimum possible diameter of the resulting set. Therefore, you will have to do it for him.\n\nPrint a square of the minimum possible diameter of the set.\n\nThe first line of the input contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000)\u00a0\u2014 the number of points marked on the plane.\n\nEach of the next n lines contains two integers xi and yi (\u2009-\u2009108\u2009\u2264\u2009xi,\u2009yi\u2009\u2264\u2009108)\u00a0\u2014 the coordinates of the i-th point. It is guaranteed that no two points coincide.\n\nPrint a single integer\u00a0\u2014 the square of the minimum possible diameter of the set.\n\nIn the first sample Sasha puts electrons at all points, all particles eventually fall at a single point (1,\u20090).\n\nIn the second sample Sasha puts an electron at point (1,\u200910), and a proton at point (10,\u20091). The result is a set of two points (1,\u20090) and (0,\u20091), which has a diameter of ."}, {"role": "assistant", "content": "binarysearch, dp"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "A MIPT student named Misha has a birthday today, and he decided to celebrate it in his country house in suburban Moscow. n friends came by, and after a typical party they decided to play blind man's buff.\n\nThe birthday boy gets blindfolded and the other players scatter around the house. The game is played in several rounds. In each round, Misha catches exactly one of his friends and has to guess who it is. The probability of catching the i-th friend does not change between rounds and is equal to pi percent (as we know, it is directly proportional to the amount of alcohol consumed by the i-th friend) and p1\u2009+\u2009p2\u2009+\u2009...\u2009+\u2009pn\u2009=\u2009100 holds. Misha has no information about who he caught. After Misha makes an attempt to guess the caught person, the round ends. Even then, Misha isn't told whether he guessed correctly, and a new round begins.\n\nThe game ends when Misha guesses every friend at least once, that is, there exists such set of rounds k1,\u2009k2,\u2009...,\u2009kn, that during round number ki Misha caught the i-th friend and guessed him. Misha wants to minimize the expectation of the number of rounds of the game. Despite the fact that at any point in the game Misha has no information about who he has already guessed, his friends are honest, and if they see that the condition for the end of the game is fulfilled, the game ends immediately. Find the expectation of the number of rounds in the game if Misha plays optimally.\n\nThe first line of the input contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100)\u00a0\u2014 the number of Misha's friends.\n\nThe second line contains n integers pi (), giving the probability to catch the i-th friend in one particular round in percent.\n\nPrint a single real value\u00a0\u2014 the expectation of the number of rounds provided that Misha plays optimally. Your answer will be considered correct if its absolute or relative error does not exceed 10\u2009-\u20096. \n\nNamely: let's assume that your answer is a, and the answer of the jury is b. The checker program will consider your answer correct, if .\n\nThe optimal strategy in the first sample is to guess friends alternately."}, {"role": "assistant", "content": "greedy, math, probabilities"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Let's define the transformation P of a sequence of integers a1,\u2009a2,\u2009...,\u2009an as b1,\u2009b2,\u2009...,\u2009bn, where bi\u2009=\u2009a1\u00a0|\u00a0a2\u00a0|\u00a0...\u00a0|\u00a0ai for all i\u2009=\u20091,\u20092,\u2009...,\u2009n, where | is the bitwise OR operation.\n\nVasya consequently applies the transformation P to all sequences of length n consisting of integers from 1 to 2k\u2009-\u20091 inclusive. He wants to know how many of these sequences have such property that their transformation is a strictly increasing sequence. Help him to calculate this number modulo 109\u2009+\u20097.\n\nThe only line of the input contains two integers n and k (1\u2009\u2264\u2009n\u2009\u2264\u20091018,\u20091\u2009\u2264\u2009k\u2009\u2264\u200930\u2009000).\n\nPrint a single integer\u00a0\u2014 the answer to the problem modulo 109\u2009+\u20097."}, {"role": "assistant", "content": "combinatorics, dp, fft, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Luke Skywalker got locked up in a rubbish shredder between two presses. R2D2 is already working on his rescue, but Luke needs to stay alive as long as possible. For simplicity we will assume that everything happens on a straight line, the presses are initially at coordinates 0 and L, and they move towards each other with speed v1 and v2, respectively. Luke has width d and is able to choose any position between the presses. Luke dies as soon as the distance between the presses is less than his width. Your task is to determine for how long Luke can stay alive.\n\nThe first line of the input contains four integers d, L, v1, v2 (1\u2009\u2264\u2009d,\u2009L,\u2009v1,\u2009v2\u2009\u2264\u200910\u2009000,\u2009d\u2009<\u2009L)\u00a0\u2014 Luke's width, the initial position of the second press and the speed of the first and second presses, respectively.\n\nPrint a single real value\u00a0\u2014 the maximum period of time Luke can stay alive for. Your answer will be considered correct if its absolute or relative error does not exceed 10\u2009-\u20096. \n\nNamely: let's assume that your answer is a, and the answer of the jury is b. The checker program will consider your answer correct, if .\n\nIn the first sample Luke should stay exactly in the middle of the segment, that is at coordinates [2;4], as the presses move with the same speed.\n\nIn the second sample he needs to occupy the position . In this case both presses move to his edges at the same time."}, {"role": "assistant", "content": "math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given an alphabet consisting of n letters, your task is to make a string of the maximum possible length so that the following conditions are satisfied: \n\nThe first line of the input contains a single integer n (2\u2009\u2009\u2264\u2009\u2009n\u2009\u2009\u2264\u2009\u200926)\u00a0\u2014 the number of letters in the alphabet.\n\nThe next line contains n integers ai (1\u2009\u2264\u2009ai\u2009\u2264\u2009109)\u00a0\u2014 i-th of these integers gives the limitation on the number of occurrences of the i-th character in the string.\n\nPrint a single integer \u2014 the maximum length of the string that meets all the requirements.\n\nFor convenience let's consider an alphabet consisting of three letters: \"a\", \"b\", \"c\". In the first sample, some of the optimal strings are: \"cccaabbccbb\", \"aabcbcbcbcb\". In the second sample some of the optimal strings are: \"acc\", \"cbc\"."}, {"role": "assistant", "content": "greedy, sortings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "One day student Vasya was sitting on a lecture and mentioned a string s1s2... sn, consisting of letters \"a\", \"b\" and \"c\" that was written on his desk. As the lecture was boring, Vasya decided to complete the picture by composing a graph G with the following properties: \n\nVasya painted the resulting graph near the string and then erased the string. Next day Vasya's friend Petya came to a lecture and found some graph at his desk. He had heard of Vasya's adventure and now he wants to find out whether it could be the original graph G, painted by Vasya. In order to verify this, Petya needs to know whether there exists a string s, such that if Vasya used this s he would produce the given graph G.\n\nThe first line of the input contains two integers n and m \u00a0\u2014 the number of vertices and edges in the graph found by Petya, respectively.\n\nEach of the next m lines contains two integers ui and vi (1\u2009\u2264\u2009ui,\u2009vi\u2009\u2264\u2009n,\u2009ui\u2009\u2260\u2009vi)\u00a0\u2014 the edges of the graph G. It is guaranteed, that there are no multiple edges, that is any pair of vertexes appear in this list no more than once.\n\nIn the first line print \"Yes\" (without the quotes), if the string s Petya is interested in really exists and \"No\" (without the quotes) otherwise.\n\nIf the string s exists, then print it on the second line of the output. The length of s must be exactly n, it must consist of only letters \"a\", \"b\" and \"c\" only, and the graph built using this string must coincide with G. If there are multiple possible answers, you may print any of them.\n\nIn the first sample you are given a graph made of two vertices with an edge between them. So, these vertices can correspond to both the same and adjacent letters. Any of the following strings \"aa\", \"ab\", \"ba\", \"bb\", \"bc\", \"cb\", \"cc\" meets the graph's conditions. \n\nIn the second sample the first vertex is connected to all three other vertices, but these three vertices are not connected with each other. That means that they must correspond to distinct letters that are not adjacent, but that is impossible as there are only two such letters: a and c."}, {"role": "assistant", "content": "constructivealgorithms, dfsandsimilar, graphs"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given array ai of length n. You may consecutively apply two operations to this array:\n\nPlease note that each of operations may be applied at most once (and may be not applied at all) so you can remove only one segment and each number may be changed (increased or decreased) by at most 1. Also note, that you are not allowed to delete the whole array.\n\nYour goal is to calculate the minimum number of coins that you need to spend in order to make the greatest common divisor of the elements of the resulting array be greater than 1.\n\nThe first line of the input contains integers n, a and b (1\u2009\u2264\u2009n\u2009\u2264\u20091\u2009000\u2009000,\u20090\u2009\u2264\u2009a,\u2009b\u2009\u2264\u2009109)\u00a0\u2014 the length of the array, the cost of removing a single element in the first operation and the cost of changing an element, respectively.\n\nThe second line contains n integers ai (2\u2009\u2264\u2009ai\u2009\u2264\u2009109)\u00a0\u2014 elements of the array.\n\nPrint a single number\u00a0\u2014 the minimum cost of changes needed to obtain an array, such that the greatest common divisor of all its elements is greater than 1.\n\nIn the first sample the optimal way is to remove number 3 and pay 1 coin for it.\n\nIn the second sample you need to remove a segment [17,\u200913] and then decrease number 6. The cost of these changes is equal to 2\u00b73\u2009+\u20092\u2009=\u20098 coins."}, {"role": "assistant", "content": "dp, greedy, numbertheory"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Programmer Sasha is a student at MIPT (Moscow Institute of Physics and Technology) and he needs to make a laboratory work to pass his finals.\n\nA laboratory unit is a plane with standard coordinate axes marked on it. Physicists from Moscow Institute of Physics and Technology charged the axes by large electric charges: axis X is positive and axis Y is negative.\n\nExperienced laboratory worker marked n points with integer coordinates (xi,\u2009yi) on the plane and stopped the time. Sasha should use \"atomic tweezers\" to place elementary particles in these points. He has an unlimited number of electrons (negatively charged elementary particles) and protons (positively charged elementary particles). He can put either an electron or a proton at each marked point. As soon as all marked points are filled with particles, laboratory worker will turn on the time again and the particles will come in motion and after some time they will stabilize in equilibrium. The objective of the laboratory work is to arrange the particles in such a way, that the diameter of the resulting state (the maximum distance between the pairs of points of the set) is as small as possible.\n\nSince Sasha is a programmer, he naively thinks that all the particles will simply \"fall\" into their projections on the corresponding axes: electrons will fall on axis X, while protons will fall on axis Y. As we are programmers too, we will consider the same model as Sasha. That is, a particle gets from point (x,\u2009y) to point (x,\u20090) if it is an electron and to point (0,\u2009y) if it is a proton.\n\nAs the laboratory has high background radiation and Sasha takes care of his laptop, he did not take it with him, and now he can't write a program that computes the minimum possible diameter of the resulting set. Therefore, you will have to do it for him.\n\nPrint a square of the minimum possible diameter of the set.\n\nThe first line of the input contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009100\u2009000)\u00a0\u2014 the number of points marked on the plane.\n\nEach of the next n lines contains two integers xi and yi (\u2009-\u2009108\u2009\u2264\u2009xi,\u2009yi\u2009\u2264\u2009108)\u00a0\u2014 the coordinates of the i-th point. It is guaranteed that no two points coincide.\n\nPrint a single integer\u00a0\u2014 the square of the minimum possible diameter of the set.\n\nIn the first sample Sasha puts electrons at all points, all particles eventually fall at a single point (1,\u20090).\n\nIn the second sample Sasha puts an electron at point (1,\u200910), and a proton at point (10,\u20091). The result is a set of two points (1,\u20090) and (0,\u20091), which has a diameter of ."}, {"role": "assistant", "content": "*2900"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Kolya Gerasimov loves kefir very much. He lives in year 1984 and knows all the details of buying this delicious drink. One day, as you probably know, he found himself in year 2084, and buying kefir there is much more complicated.\n\nKolya is hungry, so he went to the nearest milk shop. In 2084 you may buy kefir in a plastic liter bottle, that costs a rubles, or in glass liter bottle, that costs b rubles. Also, you may return empty glass bottle and get c (c\u2009<\u2009b) rubles back, but you cannot return plastic bottles.\n\nKolya has n rubles and he is really hungry, so he wants to drink as much kefir as possible. There were no plastic bottles in his 1984, so Kolya doesn't know how to act optimally and asks for your help.\n\nFirst line of the input contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u20091018)\u00a0\u2014 the number of rubles Kolya has at the beginning.\n\nThen follow three lines containing integers a, b and c (1\u2009\u2264\u2009a\u2009\u2264\u20091018, 1\u2009\u2264\u2009c\u2009<\u2009b\u2009\u2264\u20091018)\u00a0\u2014 the cost of one plastic liter bottle, the cost of one glass liter bottle and the money one can get back by returning an empty glass bottle, respectively.\n\nPrint the only integer\u00a0\u2014 maximum number of liters of kefir, that Kolya can drink.\n\nIn the first sample, Kolya can buy one glass bottle, then return it and buy one more glass bottle. Thus he will drink 2 liters of kefir.\n\nIn the second sample, Kolya can buy two plastic bottle and get two liters of kefir, or he can buy one liter glass bottle, then return it and buy one plastic bottle. In both cases he will drink two liters of kefir."}, {"role": "assistant", "content": "implementation, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "A long time ago, in a galaxy far far away two giant IT-corporations Pineapple and Gogol continue their fierce competition. Crucial moment is just around the corner: Gogol is ready to release it's new tablet Lastus 3000.\n\nThis new device is equipped with specially designed artificial intelligence (AI). Employees of Pineapple did their best to postpone the release of Lastus 3000 as long as possible. Finally, they found out, that the name of the new artificial intelligence is similar to the name of the phone, that Pineapple released 200 years ago. As all rights on its name belong to Pineapple, they stand on changing the name of Gogol's artificial intelligence.\n\nPineapple insists, that the name of their phone occurs in the name of AI as a substring. Because the name of technology was already printed on all devices, the Gogol's director decided to replace some characters in AI name with \"#\". As this operation is pretty expensive, you should find the minimum number of characters to replace with \"#\", such that the name of AI doesn't contain the name of the phone as a substring.\n\nSubstring is a continuous subsequence of a string.\n\nThe first line of the input contains the name of AI designed by Gogol, its length doesn't exceed 100\u2009000 characters. Second line contains the name of the phone released by Pineapple 200 years ago, its length doesn't exceed 30. Both string are non-empty and consist of only small English letters.\n\nPrint the minimum number of characters that must be replaced with \"#\" in order to obtain that the name of the phone doesn't occur in the name of AI as a substring.\n\nIn the first sample AI's name may be replaced with \"int#llect\".\n\nIn the second sample Gogol can just keep things as they are.\n\nIn the third sample one of the new possible names of AI may be \"s#ris#ri\"."}, {"role": "assistant", "content": "constructivealgorithms, greedy, strings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "People do many crazy things to stand out in a crowd. Some of them dance, some learn by heart rules of Russian language, some try to become an outstanding competitive programmers, while others collect funny math objects.\n\nAlis is among these collectors. Right now she wants to get one of k-special tables. In case you forget, the table n\u2009\u00d7\u2009n is called k-special if the following three conditions are satisfied:\n\nYour goal is to help Alice and find at least one k-special table of size n\u2009\u00d7\u2009n. Both rows and columns are numbered from 1 to n, with rows numbered from top to bottom and columns numbered from left to right.\n\nThe first line of the input contains two integers n and k (1\u2009\u2264\u2009n\u2009\u2264\u2009500,\u20091\u2009\u2264\u2009k\u2009\u2264\u2009n)\u00a0\u2014 the size of the table Alice is looking for and the column that should have maximum possible sum.\n\nFirst print the sum of the integers in the k-th column of the required table.\n\nNext n lines should contain the description of the table itself: first line should contains n elements of the first row, second line should contain n elements of the second row and so on.\n\nIf there are multiple suitable table, you are allowed to print any."}, {"role": "assistant", "content": "constructivealgorithms, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Vitya is studying in the third grade. During the last math lesson all the pupils wrote on arithmetic quiz. Vitya is a clever boy, so he managed to finish all the tasks pretty fast and Oksana Fillipovna gave him a new one, that is much harder.\n\nLet's denote a flip operation of an integer as follows: number is considered in decimal notation and then reverted. If there are any leading zeroes afterwards, they are thrown away. For example, if we flip 123 the result is the integer 321, but flipping 130 we obtain 31, and by flipping 31 we come to 13.\n\nOksana Fillipovna picked some number a without leading zeroes, and flipped it to get number ar. Then she summed a and ar, and told Vitya the resulting value n. His goal is to find any valid a.\n\nAs Oksana Fillipovna picked some small integers as a and ar, Vitya managed to find the answer pretty fast and became interested in finding some general algorithm to deal with this problem. Now, he wants you to write the program that for given n finds any a without leading zeroes, such that a\u2009+\u2009ar\u2009=\u2009n or determine that such a doesn't exist.\n\nThe first line of the input contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u200910100\u2009000).\n\nIf there is no such positive integer a without leading zeroes that a\u2009+\u2009ar\u2009=\u2009n then print 0. Otherwise, print any valid a. If there are many possible answers, you are allowed to pick any.\n\nIn the first sample 4\u2009=\u20092\u2009+\u20092, a\u2009=\u20092 is the only possibility.\n\nIn the second sample 11\u2009=\u200910\u2009+\u20091, a\u2009=\u200910\u00a0\u2014 the only valid solution. Note, that a\u2009=\u200901 is incorrect, because a can't have leading zeroes.\n\nIt's easy to check that there is no suitable a in the third sample.\n\nIn the fourth sample 33\u2009=\u200930\u2009+\u20093\u2009=\u200912\u2009+\u200921, so there are three possibilities for a: a\u2009=\u200930, a\u2009=\u200912, a\u2009=\u200921. Any of these is considered to be correct answer."}, {"role": "assistant", "content": "constructivealgorithms, implementation, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Ostap Bender recently visited frog farm and was inspired to create his own frog game.\n\nNumber of frogs are places on a cyclic gameboard, divided into m cells. Cells are numbered from 1 to m, but the board is cyclic, so cell number 1 goes right after the cell number m in the direction of movement. i-th frog during its turn can jump for ai cells.\n\nFrogs move in turns, game starts with a move by frog 1. On its turn i-th frog moves ai cells forward, knocking out all the frogs on its way. If there is a frog in the last cell of the path of the i-th frog, that frog is also knocked out. After this the value ai is decreased by the number of frogs that were knocked out during this turn. If ai is zero or goes negative, then i-th frog doesn't make moves anymore.\n\nAfter frog number 1 finishes its turn, frog number 2 starts to move, then frog number 3 and so on. After the frog number n makes its move, frog 1 starts to move again, then frog 2 and so on this process goes forever. If some frog was already knocked out from the board, we consider that it skips all its moves.\n\nHelp Ostap to identify, what frogs will stay on the board at the end of a game?\n\nFirst line of the input contains two integers n and m (1\u2009\u2264\u2009n\u2009\u2264\u2009100000,\u20091\u2009\u2264\u2009m\u2009\u2264\u2009109,\u2009n\u2009\u2264\u2009m)\u00a0\u2014 number of frogs and gameboard size, respectively.\n\nFollowing n lines contains frogs descriptions\u00a0\u2014 two integers pi and ai (1\u2009\u2264\u2009pi,\u2009ai\u2009\u2264\u2009m)\u00a0\u2014 the number of cell occupied by i-th frog initially and initial jump length. All pi are guaranteed to be distinct.\n\nIn the first line output number of frogs on the final gameboard. In the second line output their numbers in any order.\n\nIn the first sample first frog jumps 1 cell and finishes in cell number 3. Second frog jumps for 3 cells and finishes on cell number 3, knocking out frog number 1. Current jump length for frog number 2 is now 2. Third frog jumps to cell 2, then second frog jumps to cell 5. Third frog in turn finishes in cell 5 and removes frog 2 from the gameboard. Now, it's the only remaining frog in the game.\n\nIn the second sample first frog jumps 2 cells and knocks out frogs in cells 2 and 3. Its value ai is now 0. Then fourth frog jumps and knocks out fifth frog and its ai is now 0 too. These two frogs will remains on the gameboard forever."}, {"role": "assistant", "content": "datastructures, greedy"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Phoenix has $$$n$$$ coins with weights $$$2^1, 2^2, \\dots, 2^n$$$. He knows that $$$n$$$ is even.\n\nHe wants to split the coins into two piles such that each pile has exactly $$$\\frac{n}{2}$$$ coins and the difference of weights between the two piles is minimized. Formally, let $$$a$$$ denote the sum of weights in the first pile, and $$$b$$$ denote the sum of weights in the second pile. Help Phoenix minimize $$$|a-b|$$$, the absolute value of $$$a-b$$$.\n\nThe input consists of multiple test cases. The first line contains an integer $$$t$$$ ($$$1 \\le t \\le 100$$$)\u00a0\u2014 the number of test cases.\n\nThe first line of each test case contains an integer $$$n$$$ ($$$2 \\le n \\le 30$$$; $$$n$$$ is even)\u00a0\u2014 the number of coins that Phoenix has. \n\nFor each test case, output one integer\u00a0\u2014 the minimum possible difference of weights between the two piles.\n\nIn the first test case, Phoenix has two coins with weights $$$2$$$ and $$$4$$$. No matter how he divides the coins, the difference will be $$$4-2=2$$$.\n\nIn the second test case, Phoenix has four coins of weight $$$2$$$, $$$4$$$, $$$8$$$, and $$$16$$$. It is optimal for Phoenix to place coins with weights $$$2$$$ and $$$16$$$ in one pile, and coins with weights $$$4$$$ and $$$8$$$ in another pile. The difference is $$$(2+16)-(4+8)=6$$$."}, {"role": "assistant", "content": "greedy, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Phoenix loves beautiful arrays. An array is beautiful if all its subarrays of length\u00a0$$$k$$$ have the same sum. A subarray of an array is any sequence of consecutive elements.\n\nPhoenix currently has an array $$$a$$$ of length $$$n$$$. He wants to insert some number of integers, possibly zero, into his array such that it becomes beautiful. The inserted integers must be between $$$1$$$ and $$$n$$$ inclusive. Integers may be inserted anywhere (even before the first or after the last element), and he is not trying to minimize the number of inserted integers.\n\nThe input consists of multiple test cases. The first line contains an integer $$$t$$$ ($$$1 \\le t \\le 50$$$)\u00a0\u2014 the number of test cases.\n\nThe first line of each test case contains two integers $$$n$$$ and $$$k$$$ ($$$1 \\le k \\le n \\le 100$$$).\n\nThe second line of each test case contains $$$n$$$ space-separated integers ($$$1 \\le a_i \\le n$$$)\u00a0\u2014 the array that Phoenix currently has. This array may or may not be already beautiful.\n\nFor each test case, if it is impossible to create a beautiful array, print -1. Otherwise, print two lines.\n\nThe first line should contain the length of the beautiful array $$$m$$$ ($$$n \\le m \\le 10^4$$$). You don't need to minimize $$$m$$$.\n\nThe second line should contain $$$m$$$ space-separated integers ($$$1 \\le b_i \\le n$$$)\u00a0\u2014 a beautiful array that Phoenix can obtain after inserting some, possibly zero, integers into his array $$$a$$$. You may print integers that weren't originally in array $$$a$$$.\n\nIf there are multiple solutions, print any. It's guaranteed that if we can make array $$$a$$$ beautiful, we can always make it with resulting length no more than $$$10^4$$$.\n\nIn the first test case, we can make array $$$a$$$ beautiful by inserting the integer $$$1$$$ at index $$$3$$$ (in between the two existing $$$2$$$s). Now, all subarrays of length $$$k=2$$$ have the same sum $$$3$$$. There exists many other possible solutions, for example: \n\nIn the second test case, the array is already beautiful: all subarrays of length $$$k=3$$$ have the same sum $$$5$$$.\n\nIn the third test case, it can be shown that we cannot insert numbers to make array $$$a$$$ beautiful.\n\nIn the fourth test case, the array $$$b$$$ shown is beautiful and all subarrays of length $$$k=4$$$ have the same sum $$$10$$$. There exist other solutions also."}, {"role": "assistant", "content": "constructivealgorithms, datastructures, greedy, sortings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Phoenix has a string $$$s$$$ consisting of lowercase Latin letters. He wants to distribute all the letters of his string into $$$k$$$ non-empty strings $$$a_1, a_2, \\dots, a_k$$$ such that every letter of $$$s$$$ goes to exactly one of the strings $$$a_i$$$. The strings $$$a_i$$$ do not need to be substrings of $$$s$$$. Phoenix can distribute letters of $$$s$$$ and rearrange the letters within each string $$$a_i$$$ however he wants.\n\nFor example, if $$$s = $$$ baba and $$$k=2$$$, Phoenix may distribute the letters of his string in many ways, such as: \n\nBut these ways are invalid: \n\nPhoenix wants to distribute the letters of his string $$$s$$$ into $$$k$$$ strings $$$a_1, a_2, \\dots, a_k$$$ to minimize the lexicographically maximum string among them, i.\u00a0e. minimize $$$max(a_1, a_2, \\dots, a_k)$$$. Help him find the optimal distribution and print the minimal possible value of $$$max(a_1, a_2, \\dots, a_k)$$$.\n\nString $$$x$$$ is lexicographically less than string $$$y$$$ if either $$$x$$$ is a prefix of $$$y$$$ and $$$x \\ne y$$$, or there exists an index $$$i$$$ ($$$1 \\le i \\le min(|x|, |y|))$$$ such that $$$x_i$$$ < $$$y_i$$$ and for every $$$j$$$ $$$(1 \\le j < i)$$$ $$$x_j = y_j$$$. Here $$$|x|$$$ denotes the length of the string $$$x$$$.\n\nThe input consists of multiple test cases. The first line contains an integer $$$t$$$ ($$$1 \\le t \\le 1000$$$)\u00a0\u2014 the number of test cases. Each test case consists of two lines.\n\nThe first line of each test case consists of two integers $$$n$$$ and $$$k$$$ ($$$1 \\le k \\le n \\le 10^5$$$)\u00a0\u2014 the length of string $$$s$$$ and the number of non-empty strings, into which Phoenix wants to distribute letters of $$$s$$$, respectively.\n\nThe second line of each test case contains a string $$$s$$$ of length $$$n$$$ consisting only of lowercase Latin letters.\n\nIt is guaranteed that the sum of $$$n$$$ over all test cases is $$$\\le 10^5$$$.\n\nPrint $$$t$$$ answers\u00a0\u2014 one per test case. The $$$i$$$-th answer should be the minimal possible value of $$$max(a_1, a_2, \\dots, a_k)$$$ in the $$$i$$$-th test case.\n\nIn the first test case, one optimal solution is to distribute baba into ab and ab. \n\nIn the second test case, one optimal solution is to distribute baacb into abbc and a.\n\nIn the third test case, one optimal solution is to distribute baacb into ac, ab, and b.\n\nIn the fourth test case, one optimal solution is to distribute aaaaa into aa, aa, and a.\n\nIn the fifth test case, one optimal solution is to distribute aaxxzz into az, az, x, and x.\n\nIn the sixth test case, one optimal solution is to distribute phoenix into ehinopx."}, {"role": "assistant", "content": "constructivealgorithms, greedy, sortings, strings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Phoenix has decided to become a scientist! He is currently investigating the growth of bacteria.\n\nInitially, on day $$$1$$$, there is one bacterium with mass $$$1$$$.\n\nEvery day, some number of bacteria will split (possibly zero or all). When a bacterium of mass $$$m$$$ splits, it becomes two bacteria of mass $$$\\frac{m}{2}$$$ each. For example, a bacterium of mass $$$3$$$ can split into two bacteria of mass $$$1.5$$$.\n\nAlso, every night, the mass of every bacteria will increase by one.\n\nPhoenix is wondering if it is possible for the total mass of all the bacteria to be exactly $$$n$$$. If it is possible, he is interested in the way to obtain that mass using the minimum possible number of nights. Help him become the best scientist!\n\nThe input consists of multiple test cases. The first line contains an integer $$$t$$$ ($$$1 \\le t \\le 1000$$$)\u00a0\u2014 the number of test cases.\n\nThe first line of each test case contains an integer $$$n$$$ ($$$2 \\le n \\le 10^9$$$)\u00a0\u2014 the sum of bacteria masses that Phoenix is interested in. \n\nFor each test case, if there is no way for the bacteria to exactly achieve total mass $$$n$$$, print -1. Otherwise, print two lines.\n\nThe first line should contain an integer $$$d$$$ \u00a0\u2014 the minimum number of nights needed.\n\nThe next line should contain $$$d$$$ integers, with the $$$i$$$-th integer representing the number of bacteria that should split on the $$$i$$$-th day.\n\nIf there are multiple solutions, print any.\n\nIn the first test case, the following process results in bacteria with total mass $$$9$$$: \n\n$$$ $$$\n\nIn the second test case, the following process results in bacteria with total mass $$$11$$$: \n\n$$$ $$$\n\nIn the third test case, the bacterium does not split on day $$$1$$$, and then grows to mass $$$2$$$ during night $$$1$$$."}, {"role": "assistant", "content": "binarysearch, constructivealgorithms, greedy, implementation, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Phoenix is picking berries in his backyard. There are $$$n$$$ shrubs, and each shrub has $$$a_i$$$ red berries and $$$b_i$$$ blue berries.\n\nEach basket can contain $$$k$$$ berries. But, Phoenix has decided that each basket may only contain berries from the same shrub or berries of the same color (red or blue). In other words, all berries in a basket must be from the same shrub or/and have the same color.\n\nFor example, if there are two shrubs with $$$5$$$ red and $$$2$$$ blue berries in the first shrub and $$$2$$$ red and $$$1$$$ blue berries in the second shrub then Phoenix can fill $$$2$$$ baskets of capacity $$$4$$$ completely: \n\nHelp Phoenix determine the maximum number of baskets he can fill completely!\n\nThe first line contains two integers $$$n$$$ and $$$k$$$ ($$$ 1\\le n, k \\le 500$$$)\u00a0\u2014 the number of shrubs and the basket capacity, respectively.\n\nThe $$$i$$$-th of the next $$$n$$$ lines contain two integers $$$a_i$$$ and $$$b_i$$$ ($$$0 \\le a_i, b_i \\le 10^9$$$)\u00a0\u2014 the number of red and blue berries in the $$$i$$$-th shrub, respectively.\n\nOutput one integer\u00a0\u2014 the maximum number of baskets that Phoenix can fill completely.\n\nThe first example is described above.\n\nIn the second example, Phoenix can fill one basket fully using all the berries from the first (and only) shrub.\n\nIn the third example, Phoenix cannot fill any basket completely because there are less than $$$5$$$ berries in each shrub, less than $$$5$$$ total red berries, and less than $$$5$$$ total blue berries.\n\nIn the fourth example, Phoenix can put all the red berries into baskets, leaving an extra blue berry behind."}, {"role": "assistant", "content": "bruteforce, dp, greedy, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Phoenix is trying to take a photo of his $$$n$$$ friends with labels $$$1, 2, \\dots, n$$$ who are lined up in a row in a special order. But before he can take the photo, his friends get distracted by a duck and mess up their order.\n\nNow, Phoenix must restore the order but he doesn't remember completely! He only remembers that the $$$i$$$-th friend from the left had a label between $$$a_i$$$ and $$$b_i$$$ inclusive. Does there exist a unique way to order his friends based of his memory? \n\nThe first line contains one integer $$$n$$$ ($$$1 \\le n \\le 2\\cdot10^5$$$) \u00a0\u2014 the number of friends.\n\nThe $$$i$$$-th of the next $$$n$$$ lines contain two integers $$$a_i$$$ and $$$b_i$$$ ($$$1 \\le a_i \\le b_i \\le n$$$) \u00a0\u2014 Phoenix's memory of the $$$i$$$-th position from the left.\n\nIt is guaranteed that Phoenix's memory is valid so there is at least one valid ordering.\n\nIf Phoenix can reorder his friends in a unique order, print YES followed by $$$n$$$ integers \u00a0\u2014 the $$$i$$$-th integer should be the label of the $$$i$$$-th friend from the left.\n\nOtherwise, print NO. Then, print any two distinct valid orderings on the following two lines. If are multiple solutions, print any."}, {"role": "assistant", "content": "datastructures, dfsandsimilar, graphs, greedy"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "For the multiset of positive integers $$$s=\\{s_1,s_2,\\dots,s_k\\}$$$, define the Greatest Common Divisor (GCD) and Least Common Multiple (LCM) of $$$s$$$ as follow:\n\nFor example, $$$\\gcd(\\{8,12\\})=4,\\gcd(\\{12,18,6\\})=6$$$ and $$$\\textrm{lcm}(\\{4,6\\})=12$$$. Note that for any positive integer $$$x$$$, $$$\\gcd(\\{x\\})=\\textrm{lcm}(\\{x\\})=x$$$.\n\nOrac has a sequence $$$a$$$ with length $$$n$$$. He come up with the multiset $$$t=\\{\\textrm{lcm}(\\{a_i,a_j\\})\\ |\\ i<j\\}$$$, and asked you to find the value of $$$\\gcd(t)$$$ for him. In other words, you need to calculate the GCD of LCMs of all pairs of elements in the given sequence.\n\nThe first line contains one integer $$$n\\ (2\\le n\\le 100\\,000)$$$.\n\nThe second line contains $$$n$$$ integers, $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\leq a_i \\leq 200\\,000$$$).\n\nPrint one integer: $$$\\gcd(\\{\\textrm{lcm}(\\{a_i,a_j\\})\\ |\\ i<j\\})$$$.\n\nFor the first example, $$$t=\\{\\textrm{lcm}(\\{1,1\\})\\}=\\{1\\}$$$, so $$$\\gcd(t)=1$$$.\n\nFor the second example, $$$t=\\{120,40,80,120,240,80\\}$$$, and it's not hard to see that $$$\\gcd(t)=40$$$."}, {"role": "assistant", "content": "datastructures, math, numbertheory"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Slime has a sequence of positive integers $$$a_1, a_2, \\ldots, a_n$$$.\n\nIn one operation Orac can choose an arbitrary subsegment $$$[l \\ldots r]$$$ of this sequence and replace all values $$$a_l, a_{l + 1}, \\ldots, a_r$$$ to the value of median of $$$\\{a_l, a_{l + 1}, \\ldots, a_r\\}$$$.\n\nIn this problem, for the integer multiset $$$s$$$, the median of $$$s$$$ is equal to the $$$\\lfloor \\frac{|s|+1}{2}\\rfloor$$$-th smallest number in it. For example, the median of $$$\\{1,4,4,6,5\\}$$$ is $$$4$$$, and the median of $$$\\{1,7,5,8\\}$$$ is $$$5$$$.\n\nSlime wants Orac to make $$$a_1 = a_2 = \\ldots = a_n = k$$$ using these operations.\n\nOrac thinks that it is impossible, and he does not want to waste his time, so he decided to ask you if it is possible to satisfy the Slime's requirement, he may ask you these questions several times.\n\nThe first line of the input is a single integer $$$t$$$: the number of queries.\n\nThe first line of each query contains two integers $$$n\\ (1\\le n\\le 100\\,000)$$$ and $$$k\\ (1\\le k\\le 10^9)$$$, the second line contains $$$n$$$ positive integers $$$a_1,a_2,\\dots,a_n\\ (1\\le a_i\\le 10^9)$$$\n\nThe total sum of $$$n$$$ is at most $$$100\\,000$$$.\n\nThe output should contain $$$t$$$ lines. The $$$i$$$-th line should be equal to 'yes' if it is possible to make all integers $$$k$$$ in some number of operations or 'no', otherwise. You can print each letter in lowercase or uppercase.\n\nIn the first query, Orac can't turn all elements into $$$3$$$.\n\nIn the second query, $$$a_1=6$$$ is already satisfied.\n\nIn the third query, Orac can select the complete array and turn all elements into $$$2$$$.\n\nIn the fourth query, Orac can't turn all elements into $$$3$$$.\n\nIn the fifth query, Orac can select $$$[1,6]$$$ at first and then select $$$[2,10]$$$."}, {"role": "assistant", "content": "constructivealgorithms, greedy, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Please notice the unusual memory limit of this problem.\n\nOrac likes games. Recently he came up with the new game, \"Game of Life\".\n\nYou should play this game on a black and white grid with $$$n$$$ rows and $$$m$$$ columns. Each cell is either black or white.\n\nFor each iteration of the game (the initial iteration is $$$0$$$), the color of each cell will change under the following rules:\n\nTwo cells are adjacent if they have a mutual edge.\n\nNow Orac has set an initial situation, and he wants to know for the cell $$$(i,j)$$$ (in $$$i$$$-th row and $$$j$$$-th column), what will be its color at the iteration $$$p$$$. He may ask you these questions several times. \n\nThe first line contains three integers $$$n,m,t\\ (1\\le n,m\\le 1000, 1\\le t\\le 100\\,000)$$$, representing the number of rows, columns, and the number of Orac queries.\n\nEach of the following $$$n$$$ lines contains a binary string of length $$$m$$$, the $$$j$$$-th character in $$$i$$$-th line represents the initial color of cell $$$(i,j)$$$. '0' stands for white, '1' stands for black.\n\nEach of the following $$$t$$$ lines contains three integers $$$i,j,p\\ (1\\le i\\le n, 1\\le j\\le m, 1\\le p\\le 10^{18})$$$, representing a query from Orac.\n\nPrint $$$t$$$ lines, in $$$i$$$-th line you should print the answer to the $$$i$$$-th query by Orac. If the color of this cell is black, you should print '1'; otherwise, you should write '0'.\n\nFor the first example, the picture above shows the initial situation and the color of cells at the iteration $$$1$$$, $$$2$$$, and $$$3$$$. We can see that the color of $$$(1,1)$$$ at the iteration $$$1$$$ is black, the color of $$$(2,2)$$$ at the iteration $$$2$$$ is black, and the color of $$$(3,3)$$$ at the iteration $$$3$$$ is also black.\n\nFor the second example, you can prove that the cells will never change their colors."}, {"role": "assistant", "content": "dfsandsimilar, graphs, implementation, shortestpaths"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Slime and his $$$n$$$ friends are at a party. Slime has designed a game for his friends to play.\n\nAt the beginning of the game, the $$$i$$$-th player has $$$a_i$$$ biscuits. At each second, Slime will choose a biscuit randomly uniformly among all $$$a_1 + a_2 + \\ldots + a_n$$$ biscuits, and the owner of this biscuit will give it to a random uniform player among $$$n-1$$$ players except himself. The game stops when one person will have all the biscuits.\n\nAs the host of the party, Slime wants to know the expected value of the time that the game will last, to hold the next activity on time.\n\nFor convenience, as the answer can be represented as a rational number $$$\\frac{p}{q}$$$ for coprime $$$p$$$ and $$$q$$$, you need to find the value of $$$(p \\cdot q^{-1})\\mod 998\\,244\\,353$$$. You can prove that $$$q\\mod 998\\,244\\,353 \\neq 0$$$.\n\nThe first line contains one integer $$$n\\ (2\\le n\\le 100\\,000)$$$: the number of people playing the game.\n\nThe second line contains $$$n$$$ non-negative integers $$$a_1,a_2,\\dots,a_n\\ (1\\le a_1+a_2+\\dots+a_n\\le 300\\,000)$$$, where $$$a_i$$$ represents the number of biscuits the $$$i$$$-th person own at the beginning.\n\nPrint one integer: the expected value of the time that the game will last, modulo $$$998\\,244\\,353$$$.\n\nFor the first example, in the first second, the probability that player $$$1$$$ will give the player $$$2$$$ a biscuit is $$$\\frac{1}{2}$$$, and the probability that player $$$2$$$ will give the player $$$1$$$ a biscuit is $$$\\frac{1}{2}$$$. But anyway, the game will stop after exactly $$$1$$$ second because only one player will occupy all biscuits after $$$1$$$ second, so the answer is $$$1$$$."}, {"role": "assistant", "content": "math, probabilities"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Slime and Orac are holding a turn-based game. In a big room, there are $$$n$$$ players sitting on the chairs, looking forward to a column and each of them is given a number: player $$$1$$$ sits in the front of the column, player $$$2$$$ sits directly behind him; player $$$3$$$ sits directly behind player $$$2$$$, and so on; player $$$n$$$ sits directly behind player $$$n-1$$$. Each player wears a hat that is either black or white. As each player faces forward, player $$$i$$$ knows the color of player $$$j$$$'s hat if and only if $$$i$$$ is larger than $$$j$$$.\n\nAt the start of each turn, Orac will tell whether there exists a player wearing a black hat in the room.\n\nAfter Orac speaks, if the player can uniquely identify the color of his hat, he will put his hat on the chair, stand up and leave the room. All players are smart, so if it is possible to understand the color of their hat using the obtained information during this and previous rounds, they will understand it.\n\n In each turn, all players who know the color of their hats will leave at the same time in this turn, which means a player can only leave in the next turn if he gets to know the color of his hat only after someone left the room at this turn.\n\nNote that when the player needs to leave, he will put the hat on the chair before leaving, so the players ahead of him still cannot see his hat. \n\nThe $$$i$$$-th player will know who exactly left the room among players $$$1,2,\\ldots,i-1$$$, and how many players among $$$i+1,i+2,\\ldots,n$$$ have left the room.\n\nSlime stands outdoor. He watches the players walking out and records the numbers of the players and the time they get out. Unfortunately, Slime is so careless that he has only recorded some of the data, and this given data is in the format \"player $$$x$$$ leaves in the $$$y$$$-th round\".\n\nSlime asked you to tell him the color of each player's hat. If there are multiple solutions, you can find any of them.\n\nThe first line contains a integer $$$n\\ (1\\le n\\le 200\\,000)$$$.\n\nThe second line contains $$$n$$$ integers $$$t_1,t_2,\\dots,t_n\\ (0\\le t_i\\le 10^{15})$$$. If $$$t_i=0$$$, then there are no data about player $$$i$$$; otherwise it means player $$$i$$$ leaves in the $$$t_i$$$-th round.\n\nAt least one solution exists for the given input. \n\nPrint one binary string of $$$n$$$ characters. The $$$i$$$-th character of the string should be '1' if player $$$i$$$ wears a black hat and should be '0', otherwise. If there are multiple solutions, you can print any of them.\n\nIn the first example, for the given solution, all the players wear white hats. In the first turn, Orac tells all the players that there are no players wearing a black hat, so each player knows that he is wearing a white hat, and he will leave in the first turn.\n\nIn the second example, for the given solution, the player $$$5$$$ wears a black hat, other players wear white hats. Orac tells all the players that there exists a player wearing a black hat, and player $$$5$$$ know that the other players are all wearing white hats, so he can infer that he is wearing a black hat; therefore he leaves in the first turn, other players leave in the second turn. Note that other players can infer that they are wearing white hats immediately after player $$$5$$$ leaves, but they have to wait for the next turn to leave according to the rule.\n\nIn the third example, there is no information about the game, so any output is correct."}, {"role": "assistant", "content": "constructivealgorithms, dp, greedy"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Note that the only differences between easy and hard versions are the constraints on $$$n$$$ and the time limit. You can make hacks only if all versions are solved.\n\nSlime is interested in sequences. He defined good positive integer sequences $$$p$$$ of length $$$n$$$ as follows:\n\nFor the given integer $$$n$$$, the set of all good sequences of length $$$n$$$ is $$$s_n$$$. For the fixed integer $$$k$$$ and the sequence $$$p$$$, let $$$f_p(k)$$$ be the number of times that $$$k$$$ appears in $$$p$$$. For each $$$k$$$ from $$$1$$$ to $$$n$$$, Slime wants to know the following value:\n\n$$$$$$\\left(\\sum_{p\\in s_n} f_p(k)\\right)\\ \\textrm{mod}\\ 998\\,244\\,353$$$$$$\n\nThe first line contains one integer $$$n\\ (1\\le n\\le 5000)$$$.\n\nPrint $$$n$$$ integers, the $$$i$$$-th of them should be equal to $$$\\left(\\sum_{p\\in s_n} f_p(i)\\right)\\ \\textrm{mod}\\ 998\\,244\\,353$$$.\n\nIn the first example, $$$s=\\{[1,1],[1,2]\\}$$$.\n\nIn the second example, $$$s=\\{[1,1,1],[1,1,2],[1,2,1],[1,2,2],[2,1,2],[1,2,3]\\}$$$.\n\nIn the third example, $$$s=\\{[1]\\}$$$."}, {"role": "assistant", "content": "dp, fft, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Note that the only differences between easy and hard versions are the constraints on $$$n$$$ and the time limit. You can make hacks only if all versions are solved.\n\nSlime is interested in sequences. He defined good positive integer sequences $$$p$$$ of length $$$n$$$ as follows:\n\nFor the given integer $$$n$$$, the set of all good sequences of length $$$n$$$ is $$$s_n$$$. For the fixed integer $$$k$$$ and the sequence $$$p$$$, let $$$f_p(k)$$$ be the number of times that $$$k$$$ appears in $$$p$$$. For each $$$k$$$ from $$$1$$$ to $$$n$$$, Slime wants to know the following value:\n\n$$$$$$\\left(\\sum_{p\\in s_n} f_p(k)\\right)\\ \\textrm{mod}\\ 998\\,244\\,353$$$$$$\n\nThe first line contains one integer $$$n\\ (1\\le n\\le 100\\,000)$$$.\n\nPrint $$$n$$$ integers, the $$$i$$$-th of them should be equal to $$$\\left(\\sum_{p\\in s_n} f_p(i)\\right)\\ \\textrm{mod}\\ 998\\,244\\,353$$$.\n\nIn the first example, $$$s=\\{[1,1],[1,2]\\}$$$.\n\nIn the second example, $$$s=\\{[1,1,1],[1,1,2],[1,2,1],[1,2,2],[2,1,2],[1,2,3]\\}$$$.\n\nIn the third example, $$$s=\\{[1]\\}$$$."}, {"role": "assistant", "content": "dp, fft, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Little Petya very much likes arrays consisting of n integers, where each of them is in the range from 1 to 109, inclusive. Recently he has received one such array as a gift from his mother. Petya didn't like it at once. He decided to choose exactly one element from the array and replace it with another integer that also lies in the range from 1 to 109, inclusive. It is not allowed to replace a number with itself or to change no number at all. \n\nAfter the replacement Petya sorted the array by the numbers' non-decreasing. Now he wants to know for each position: what minimum number could occupy it after the replacement and the sorting.\n\nThe first line contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009105), which represents how many numbers the array has. The next line contains n space-separated integers \u2014 the array's description. All elements of the array lie in the range from 1 to 109, inclusive.\n\nPrint n space-separated integers \u2014 the minimum possible values of each array element after one replacement and the sorting are performed."}, {"role": "assistant", "content": "greedy, implementation, sortings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Little Petya very much likes rectangles and especially squares. Recently he has received 8 points on the plane as a gift from his mother. The points are pairwise distinct. Petya decided to split them into two sets each containing 4 points so that the points from the first set lay at the vertexes of some square and the points from the second set lay at the vertexes of a rectangle. Each point of initial 8 should belong to exactly one set. It is acceptable for a rectangle from the second set was also a square. If there are several partitions, Petya will be satisfied by any of them. Help him find such partition. Note that the rectangle and the square from the partition should have non-zero areas. The sides of the figures do not have to be parallel to the coordinate axes, though it might be the case.\n\nYou are given 8 pairs of integers, a pair per line \u2014 the coordinates of the points Petya has. The absolute value of all coordinates does not exceed 104. It is guaranteed that no two points coincide.\n\nPrint in the first output line \"YES\" (without the quotes), if the desired partition exists. In the second line output 4 space-separated numbers \u2014 point indexes from the input, which lie at the vertexes of the square. The points are numbered starting from 1. The numbers can be printed in any order. In the third line print the indexes of points lying at the vertexes of a rectangle in the similar format. All printed numbers should be pairwise distinct.\n\nIf the required partition does not exist, the first line should contain the word \"NO\" (without the quotes), after which no output is needed.\n\nPay attention to the third example: the figures do not necessarily have to be parallel to the coordinate axes."}, {"role": "assistant", "content": "bruteforce, geometry, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Little Petya very much likes playing with little Masha. Recently he has received a game called \"Zero-One\" as a gift from his mother. Petya immediately offered Masha to play the game with him.\n\nBefore the very beginning of the game several cards are lain out on a table in one line from the left to the right. Each card contains a digit: 0 or 1. Players move in turns and Masha moves first. During each move a player should remove a card from the table and shift all other cards so as to close the gap left by the removed card. For example, if before somebody's move the cards on the table formed a sequence 01010101, then after the fourth card is removed (the cards are numbered starting from 1), the sequence will look like that: 0100101. \n\nThe game ends when exactly two cards are left on the table. The digits on these cards determine the number in binary notation: the most significant bit is located to the left. Masha's aim is to minimize the number and Petya's aim is to maximize it.\n\nAn unpleasant accident occurred before the game started. The kids spilled juice on some of the cards and the digits on the cards got blurred. Each one of the spoiled cards could have either 0 or 1 written on it. Consider all possible variants of initial arrangement of the digits (before the juice spilling). For each variant, let's find which two cards are left by the end of the game, assuming that both Petya and Masha play optimally. An ordered pair of digits written on those two cards is called an outcome. Your task is to find the set of outcomes for all variants of initial digits arrangement.\n\nThe first line contains a sequence of characters each of which can either be a \"0\", a \"1\" or a \"?\". This sequence determines the initial arrangement of cards on the table from the left to the right. The characters \"?\" mean that the given card was spoiled before the game. The sequence's length ranges from 2 to 105, inclusive.\n\nPrint the set of outcomes for all possible initial digits arrangements. Print each possible outcome on a single line. Each outcome should be represented by two characters: the digits written on the cards that were left by the end of the game. The outcomes should be sorted lexicographically in ascending order (see the first sample).\n\nIn the first sample all 16 variants of numbers arrangement are possible. For the variant 0000 the outcome is 00. For the variant 1111 the outcome is 11. For the variant 0011 the outcome is 01. For the variant 1100 the outcome is 10. Regardless of outcomes for all other variants the set which we are looking for will contain all 4 possible outcomes.\n\nIn the third sample only 2 variants of numbers arrangement are possible: 111 and 101. For the variant 111 the outcome is 11. For the variant 101 the outcome is 01, because on the first turn Masha can remove the first card from the left after which the game will end."}, {"role": "assistant", "content": "constructivealgorithms, games, greedy"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Little Petya very much likes rectangular tables that consist of characters \"0\" and \"1\". Recently he has received one such table as a gift from his mother. The table contained n rows and m columns. The rows are numbered from top to bottom from 1 to n, the columns are numbered from the left to the right from 1 to m. Petya immediately decided to find the longest cool cycle whatever it takes.\n\nA cycle is a sequence of pairwise distinct cells where each two consecutive cells have a common side; besides, the first cell has a common side with the last cell. A cycle is called cool if it fulfills all the following conditions simultaneously: \n\nTo define the notion of \"outside\" formally, let's draw a cycle on a plane. Let each cell of the cycle (i,\u2009j) (i is the row number, j is the column number) correspond to the point (i,\u2009j) on the coordinate plane. Let a straight line segment join each pair of points that correspond to the cells belonging to the cycle and sharing a side. Thus, we will get a closed polyline that has no self-intersections and self-touches. The polyline divides the plane into two connected parts: the part of an infinite area and the part of a finite area. It is considered that cell (r,\u2009c) lies outside of the cycle if it does not belong to the cycle and the corresponding point on the plane with coordinates (r,\u2009c) lies in the part with the infinite area.\n\nHelp Petya to find the length of the longest cool cycle in the table. The cycle length is defined as the number of cells that belong to the cycle.\n\nThe first line contains two integers n and m (1\u2009\u2264\u2009n,\u2009m\u2009\u2264\u20091000) \u2014 the number of rows and columns in the table, respectively. Each of the following n lines contains m characters. Each character can be either \"0\" or \"1\".\n\nPrint a single number \u2014 the length of the longest cool cycle in the table. If such cycles do not exist, print 0.\n\nIn the first example there's only one cycle and it is cool.\n\nIn the second sample there's no cycle at all.\n\nIn the third sample there are two cool cycles: their lengths are 12 and 24.\n\nIn the fourth sample there also is only one cycle but it isn't cool as there's a cell containing \"1\" inside this cycle."}, {"role": "assistant", "content": "bruteforce, dfsandsimilar, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Little Petya very much likes strings. Recently he has received a voucher to purchase a string as a gift from his mother. The string can be bought in the local shop. One can consider that the shop has all sorts of strings over the alphabet of fixed size. The size of the alphabet is equal to k. However, the voucher has a string type limitation: specifically, the voucher can be used to purchase string s if the length of string's longest substring that is also its weak subsequence (see the definition given below) equals w.\n\nString a with the length of n is considered the weak subsequence of the string s with the length of m, if there exists such a set of indexes 1\u2009\u2264\u2009i1\u2009<\u2009i2\u2009<\u2009...\u2009<\u2009in\u2009\u2264\u2009m, that has the following two properties: \n\nPetya got interested how many different strings are available for him to purchase in the shop. As the number of strings can be very large, please find it modulo 1000000007 (109\u2009+\u20097). If there are infinitely many such strings, print \"-1\".\n\nThe first line contains two integers k (1\u2009\u2264\u2009k\u2009\u2264\u2009106) and w (2\u2009\u2264\u2009w\u2009\u2264\u2009109) \u2014 the alphabet size and the required length of the maximum substring that also is the weak subsequence, correspondingly.\n\nPrint a single number \u2014 the number of strings Petya can buy using the voucher, modulo 1000000007 (109\u2009+\u20097). If there are infinitely many such strings, print \"-1\" (without the quotes).\n\nIn the first sample Petya can buy the following strings: aaa, aab, abab, abb, abba, baa, baab, baba, bba, bbb."}, {"role": "assistant", "content": "combinatorics"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Orac is studying number theory, and he is interested in the properties of divisors.\n\nFor two positive integers $$$a$$$ and $$$b$$$, $$$a$$$ is a divisor of $$$b$$$ if and only if there exists an integer $$$c$$$, such that $$$a\\cdot c=b$$$.\n\nFor $$$n \\ge 2$$$, we will denote as $$$f(n)$$$ the smallest positive divisor of $$$n$$$, except $$$1$$$.\n\nFor example, $$$f(7)=7,f(10)=2,f(35)=5$$$.\n\nFor the fixed integer $$$n$$$, Orac decided to add $$$f(n)$$$ to $$$n$$$. \n\nFor example, if he had an integer $$$n=5$$$, the new value of $$$n$$$ will be equal to $$$10$$$. And if he had an integer $$$n=6$$$, $$$n$$$ will be changed to $$$8$$$.\n\nOrac loved it so much, so he decided to repeat this operation several times.\n\nNow, for two positive integers $$$n$$$ and $$$k$$$, Orac asked you to add $$$f(n)$$$ to $$$n$$$ exactly $$$k$$$ times (note that $$$n$$$ will change after each operation, so $$$f(n)$$$ may change too) and tell him the final value of $$$n$$$.\n\nFor example, if Orac gives you $$$n=5$$$ and $$$k=2$$$, at first you should add $$$f(5)=5$$$ to $$$n=5$$$, so your new value of $$$n$$$ will be equal to $$$n=10$$$, after that, you should add $$$f(10)=2$$$ to $$$10$$$, so your new (and the final!) value of $$$n$$$ will be equal to $$$12$$$.\n\nOrac may ask you these queries many times.\n\nThe first line of the input is a single integer $$$t\\ (1\\le t\\le 100)$$$: the number of times that Orac will ask you.\n\nEach of the next $$$t$$$ lines contains two positive integers $$$n,k\\ (2\\le n\\le 10^6, 1\\le k\\le 10^9)$$$, corresponding to a query by Orac.\n\nIt is guaranteed that the total sum of $$$n$$$ is at most $$$10^6$$$. \n\nPrint $$$t$$$ lines, the $$$i$$$-th of them should contain the final value of $$$n$$$ in the $$$i$$$-th query by Orac.\n\nIn the first query, $$$n=5$$$ and $$$k=1$$$. The divisors of $$$5$$$ are $$$1$$$ and $$$5$$$, the smallest one except $$$1$$$ is $$$5$$$. Therefore, the only operation adds $$$f(5)=5$$$ to $$$5$$$, and the result is $$$10$$$.\n\nIn the second query, $$$n=8$$$ and $$$k=2$$$. The divisors of $$$8$$$ are $$$1,2,4,8$$$, where the smallest one except $$$1$$$ is $$$2$$$, then after one operation $$$8$$$ turns into $$$8+(f(8)=2)=10$$$. The divisors of $$$10$$$ are $$$1,2,5,10$$$, where the smallest one except $$$1$$$ is $$$2$$$, therefore the answer is $$$10+(f(10)=2)=12$$$.\n\nIn the third query, $$$n$$$ is changed as follows: $$$3 \\to 6 \\to 8 \\to 10 \\to 12$$$."}, {"role": "assistant", "content": "math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "There are $$$n$$$ models in the shop numbered from $$$1$$$ to $$$n$$$, with sizes $$$s_1, s_2, \\ldots, s_n$$$.\n\nOrac will buy some of the models and will arrange them in the order of increasing numbers (i.e. indices, but not sizes).\n\nOrac thinks that the obtained arrangement is beatiful, if for any two adjacent models with indices $$$i_j$$$ and $$$i_{j+1}$$$ (note that $$$i_j < i_{j+1}$$$, because Orac arranged them properly), $$$i_{j+1}$$$ is divisible by $$$i_j$$$ and $$$s_{i_j} < s_{i_{j+1}}$$$.\n\nFor example, for $$$6$$$ models with sizes $$$\\{3, 6, 7, 7, 7, 7\\}$$$, he can buy models with indices $$$1$$$, $$$2$$$, and $$$6$$$, and the obtained arrangement will be beautiful. Also, note that the arrangement with exactly one model is also considered beautiful.\n\nOrac wants to know the maximum number of models that he can buy, and he may ask you these queries many times.\n\nThe first line contains one integer $$$t\\ (1 \\le t\\le 100)$$$: the number of queries.\n\nEach query contains two lines. The first line contains one integer $$$n\\ (1\\le n\\le 100\\,000)$$$: the number of models in the shop, and the second line contains $$$n$$$ integers $$$s_1,\\dots,s_n\\ (1\\le s_i\\le 10^9)$$$: the sizes of models.\n\nIt is guaranteed that the total sum of $$$n$$$ is at most $$$100\\,000$$$.\n\nPrint $$$t$$$ lines, the $$$i$$$-th of them should contain the maximum number of models that Orac can buy for the $$$i$$$-th query.\n\nIn the first query, for example, Orac can buy models with indices $$$2$$$ and $$$4$$$, the arrangement will be beautiful because $$$4$$$ is divisible by $$$2$$$ and $$$6$$$ is more than $$$3$$$. By enumerating, we can easily find that there are no beautiful arrangements with more than two models. \n\nIn the second query, Orac can buy models with indices $$$1$$$, $$$3$$$, and $$$6$$$. By enumerating, we can easily find that there are no beautiful arrangements with more than three models. \n\nIn the third query, there are no beautiful arrangements with more than one model."}, {"role": "assistant", "content": "dp, math, numbertheory"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "For the multiset of positive integers $$$s=\\{s_1,s_2,\\dots,s_k\\}$$$, define the Greatest Common Divisor (GCD) and Least Common Multiple (LCM) of $$$s$$$ as follow:\n\nFor example, $$$\\gcd(\\{8,12\\})=4,\\gcd(\\{12,18,6\\})=6$$$ and $$$\\textrm{lcm}(\\{4,6\\})=12$$$. Note that for any positive integer $$$x$$$, $$$\\gcd(\\{x\\})=\\textrm{lcm}(\\{x\\})=x$$$.\n\nOrac has a sequence $$$a$$$ with length $$$n$$$. He come up with the multiset $$$t=\\{\\textrm{lcm}(\\{a_i,a_j\\})\\ |\\ i<j\\}$$$, and asked you to find the value of $$$\\gcd(t)$$$ for him. In other words, you need to calculate the GCD of LCMs of all pairs of elements in the given sequence.\n\nThe first line contains one integer $$$n\\ (2\\le n\\le 100\\,000)$$$.\n\nThe second line contains $$$n$$$ integers, $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\leq a_i \\leq 200\\,000$$$).\n\nPrint one integer: $$$\\gcd(\\{\\textrm{lcm}(\\{a_i,a_j\\})\\ |\\ i<j\\})$$$.\n\nFor the first example, $$$t=\\{\\textrm{lcm}(\\{1,1\\})\\}=\\{1\\}$$$, so $$$\\gcd(t)=1$$$.\n\nFor the second example, $$$t=\\{120,40,80,120,240,80\\}$$$, and it's not hard to see that $$$\\gcd(t)=40$$$."}, {"role": "assistant", "content": "math, numbertheory"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Slime has a sequence of positive integers $$$a_1, a_2, \\ldots, a_n$$$.\n\nIn one operation Orac can choose an arbitrary subsegment $$$[l \\ldots r]$$$ of this sequence and replace all values $$$a_l, a_{l + 1}, \\ldots, a_r$$$ to the value of median of $$$\\{a_l, a_{l + 1}, \\ldots, a_r\\}$$$.\n\nIn this problem, for the integer multiset $$$s$$$, the median of $$$s$$$ is equal to the $$$\\lfloor \\frac{|s|+1}{2}\\rfloor$$$-th smallest number in it. For example, the median of $$$\\{1,4,4,6,5\\}$$$ is $$$4$$$, and the median of $$$\\{1,7,5,8\\}$$$ is $$$5$$$.\n\nSlime wants Orac to make $$$a_1 = a_2 = \\ldots = a_n = k$$$ using these operations.\n\nOrac thinks that it is impossible, and he does not want to waste his time, so he decided to ask you if it is possible to satisfy the Slime's requirement, he may ask you these questions several times.\n\nThe first line of the input is a single integer $$$t$$$: the number of queries.\n\nThe first line of each query contains two integers $$$n\\ (1\\le n\\le 100\\,000)$$$ and $$$k\\ (1\\le k\\le 10^9)$$$, the second line contains $$$n$$$ positive integers $$$a_1,a_2,\\dots,a_n\\ (1\\le a_i\\le 10^9)$$$\n\nThe total sum of $$$n$$$ is at most $$$100\\,000$$$.\n\nThe output should contain $$$t$$$ lines. The $$$i$$$-th line should be equal to 'yes' if it is possible to make all integers $$$k$$$ in some number of operations or 'no', otherwise. You can print each letter in lowercase or uppercase.\n\nIn the first query, Orac can't turn all elements into $$$3$$$.\n\nIn the second query, $$$a_1=6$$$ is already satisfied.\n\nIn the third query, Orac can select the complete array and turn all elements into $$$2$$$.\n\nIn the fourth query, Orac can't turn all elements into $$$3$$$.\n\nIn the fifth query, Orac can select $$$[1,6]$$$ at first and then select $$$[2,10]$$$."}, {"role": "assistant", "content": "constructivealgorithms, greedy"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Please notice the unusual memory limit of this problem.\n\nOrac likes games. Recently he came up with the new game, \"Game of Life\".\n\nYou should play this game on a black and white grid with $$$n$$$ rows and $$$m$$$ columns. Each cell is either black or white.\n\nFor each iteration of the game (the initial iteration is $$$0$$$), the color of each cell will change under the following rules:\n\nTwo cells are adjacent if they have a mutual edge.\n\nNow Orac has set an initial situation, and he wants to know for the cell $$$(i,j)$$$ (in $$$i$$$-th row and $$$j$$$-th column), what will be its color at the iteration $$$p$$$. He may ask you these questions several times. \n\nThe first line contains three integers $$$n,m,t\\ (1\\le n,m\\le 1000, 1\\le t\\le 100\\,000)$$$, representing the number of rows, columns, and the number of Orac queries.\n\nEach of the following $$$n$$$ lines contains a binary string of length $$$m$$$, the $$$j$$$-th character in $$$i$$$-th line represents the initial color of cell $$$(i,j)$$$. '0' stands for white, '1' stands for black.\n\nEach of the following $$$t$$$ lines contains three integers $$$i,j,p\\ (1\\le i\\le n, 1\\le j\\le m, 1\\le p\\le 10^{18})$$$, representing a query from Orac.\n\nPrint $$$t$$$ lines, in $$$i$$$-th line you should print the answer to the $$$i$$$-th query by Orac. If the color of this cell is black, you should print '1'; otherwise, you should write '0'.\n\nFor the first example, the picture above shows the initial situation and the color of cells at the iteration $$$1$$$, $$$2$$$, and $$$3$$$. We can see that the color of $$$(1,1)$$$ at the iteration $$$1$$$ is black, the color of $$$(2,2)$$$ at the iteration $$$2$$$ is black, and the color of $$$(3,3)$$$ at the iteration $$$3$$$ is also black.\n\nFor the second example, you can prove that the cells will never change their colors."}, {"role": "assistant", "content": "datastructures, graphs, implementation, math, shortestpaths"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Note that the only differences between easy and hard versions are the constraints on $$$n$$$ and the time limit. You can make hacks only if all versions are solved.\n\nSlime is interested in sequences. He defined good positive integer sequences $$$p$$$ of length $$$n$$$ as follows:\n\nFor the given integer $$$n$$$, the set of all good sequences of length $$$n$$$ is $$$s_n$$$. For the fixed integer $$$k$$$ and the sequence $$$p$$$, let $$$f_p(k)$$$ be the number of times that $$$k$$$ appears in $$$p$$$. For each $$$k$$$ from $$$1$$$ to $$$n$$$, Slime wants to know the following value:\n\n$$$$$$\\left(\\sum_{p\\in s_n} f_p(k)\\right)\\ \\textrm{mod}\\ 998\\,244\\,353$$$$$$\n\nThe first line contains one integer $$$n\\ (1\\le n\\le 5000)$$$.\n\nPrint $$$n$$$ integers, the $$$i$$$-th of them should be equal to $$$\\left(\\sum_{p\\in s_n} f_p(i)\\right)\\ \\textrm{mod}\\ 998\\,244\\,353$$$.\n\nIn the first example, $$$s=\\{[1,1],[1,2]\\}$$$.\n\nIn the second example, $$$s=\\{[1,1,1],[1,1,2],[1,2,1],[1,2,2],[2,1,2],[1,2,3]\\}$$$.\n\nIn the third example, $$$s=\\{[1]\\}$$$."}, {"role": "assistant", "content": "dp, fft, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given two integers $$$a$$$ and $$$b$$$. Print $$$a+b$$$.\n\nThe first line contains an integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) \u2014 the number of test cases in the input. Then $$$t$$$ test cases follow.\n\nEach test case is given as a line of two integers $$$a$$$ and $$$b$$$ ($$$-1000 \\le a, b \\le 1000$$$).\n\nPrint $$$t$$$ integers \u2014 the required numbers $$$a+b$$$."}, {"role": "assistant", "content": "implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Vasya claims that he had a paper square. He cut it into two rectangular parts using one vertical or horizontal cut. Then Vasya informed you the dimensions of these two rectangular parts. You need to check whether Vasya originally had a square. In other words, check if it is possible to make a square using two given rectangles.\n\nThe first line contains an integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) \u2014 the number of test cases in the input. Then $$$t$$$ test cases follow.\n\nEach test case is given in two lines.\n\nThe first line contains two integers $$$a_1$$$ and $$$b_1$$$ ($$$1 \\le a_1, b_1 \\le 100$$$) \u2014 the dimensions of the first one obtained after cutting rectangle. The sizes are given in random order (that is, it is not known which of the numbers is the width, and which of the numbers is the length).\n\nThe second line contains two integers $$$a_2$$$ and $$$b_2$$$ ($$$1 \\le a_2, b_2 \\le 100$$$) \u2014 the dimensions of the second obtained after cutting rectangle. The sizes are given in random order (that is, it is not known which of the numbers is the width, and which of the numbers is the length).\n\nPrint $$$t$$$ answers, each of which is a string \"YES\" (in the case of a positive answer) or \"NO\" (in the case of a negative answer). The letters in words can be printed in any case (upper or lower)."}, {"role": "assistant", "content": "bruteforce, implementation, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Skier rides on a snowy field. Its movements can be described by a string of characters 'S', 'N', 'W', 'E' (which correspond to $$$1$$$ meter movement in the south, north, west or east direction respectively).\n\nIt is known that if he moves along a previously unvisited segment of a path (i.e. this segment of the path is visited the first time), then the time of such movement is $$$5$$$ seconds. If he rolls along previously visited segment of a path (i.e., this segment of the path has been covered by his path before), then it takes $$$1$$$ second.\n\nFind the skier's time to roll all the path.\n\nThe first line contains an integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) \u2014 the number of test cases in the input. Then $$$t$$$ test cases follow.\n\nEach set is given by one nonempty string of the characters 'S', 'N', 'W', 'E'. The length of the string does not exceed $$$10^5$$$ characters.\n\nThe sum of the lengths of $$$t$$$ given lines over all test cases in the input does not exceed $$$10^5$$$.\n\nFor each test case, print the desired path time in seconds."}, {"role": "assistant", "content": "datastructures, implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "A positive (strictly greater than zero) integer is called round if it is of the form d00...0. In other words, a positive integer is round if all its digits except the leftmost (most significant) are equal to zero. In particular, all numbers from $$$1$$$ to $$$9$$$ (inclusive) are round.\n\nFor example, the following numbers are round: $$$4000$$$, $$$1$$$, $$$9$$$, $$$800$$$, $$$90$$$. The following numbers are not round: $$$110$$$, $$$707$$$, $$$222$$$, $$$1001$$$.\n\nYou are given a positive integer $$$n$$$ ($$$1 \\le n \\le 10^4$$$). Represent the number $$$n$$$ as a sum of round numbers using the minimum number of summands (addends). In other words, you need to represent the given number $$$n$$$ as a sum of the least number of terms, each of which is a round number.\n\nThe first line contains an integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) \u2014 the number of test cases in the input. Then $$$t$$$ test cases follow.\n\nEach test case is a line containing an integer $$$n$$$ ($$$1 \\le n \\le 10^4$$$).\n\nPrint $$$t$$$ answers to the test cases. Each answer must begin with an integer $$$k$$$ \u2014 the minimum number of summands. Next, $$$k$$$ terms must follow, each of which is a round number, and their sum is $$$n$$$. The terms can be printed in any order. If there are several answers, print any of them."}, {"role": "assistant", "content": "implementation, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given two positive integers $$$n$$$ ($$$1 \\le n \\le 10^9$$$) and $$$k$$$ ($$$1 \\le k \\le 100$$$). Represent the number $$$n$$$ as the sum of $$$k$$$ positive integers of the same parity (have the same remainder when divided by $$$2$$$).\n\nIn other words, find $$$a_1, a_2, \\ldots, a_k$$$ such that all $$$a_i>0$$$, $$$n = a_1 + a_2 + \\ldots + a_k$$$ and either all $$$a_i$$$ are even or all $$$a_i$$$ are odd at the same time.\n\nIf such a representation does not exist, then report it.\n\nThe first line contains an integer $$$t$$$ ($$$1 \\le t \\le 1000$$$) \u2014 the number of test cases in the input. Next, $$$t$$$ test cases are given, one per line.\n\nEach test case is two positive integers $$$n$$$ ($$$1 \\le n \\le 10^9$$$) and $$$k$$$ ($$$1 \\le k \\le 100$$$).\n\nFor each test case print:\n\nThe letters in the words YES and NO can be printed in any case."}, {"role": "assistant", "content": "constructivealgorithms, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given two positive integers $$$n$$$ and $$$k$$$. Print the $$$k$$$-th positive integer that is not divisible by $$$n$$$.\n\nFor example, if $$$n=3$$$, and $$$k=7$$$, then all numbers that are not divisible by $$$3$$$ are: $$$1, 2, 4, 5, 7, 8, 10, 11, 13 \\dots$$$. The $$$7$$$-th number among them is $$$10$$$.\n\nThe first line contains an integer $$$t$$$ ($$$1 \\le t \\le 1000$$$) \u2014 the number of test cases in the input. Next, $$$t$$$ test cases are given, one per line.\n\nEach test case is two positive integers $$$n$$$ ($$$2 \\le n \\le 10^9$$$) and $$$k$$$ ($$$1 \\le k \\le 10^9$$$).\n\nFor each test case print the $$$k$$$-th positive integer that is not divisible by $$$n$$$."}, {"role": "assistant", "content": "binarysearch, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "There are $$$n$$$ candies in a row, they are numbered from left to right from $$$1$$$ to $$$n$$$. The size of the $$$i$$$-th candy is $$$a_i$$$.\n\nAlice and Bob play an interesting and tasty game: they eat candy. Alice will eat candy from left to right, and Bob \u2014 from right to left. The game ends if all the candies are eaten.\n\nThe process consists of moves. During a move, the player eats one or more sweets from her/his side (Alice eats from the left, Bob \u2014 from the right).\n\nAlice makes the first move. During the first move, she will eat $$$1$$$ candy (its size is $$$a_1$$$). Then, each successive move the players alternate \u2014 that is, Bob makes the second move, then Alice, then again Bob and so on.\n\nOn each move, a player counts the total size of candies eaten during the current move. Once this number becomes strictly greater than the total size of candies eaten by the other player on their previous move, the current player stops eating and the move ends. In other words, on a move, a player eats the smallest possible number of candies such that the sum of the sizes of candies eaten on this move is strictly greater than the sum of the sizes of candies that the other player ate on the previous move. If there are not enough candies to make a move this way, then the player eats up all the remaining candies and the game ends.\n\nFor example, if $$$n=11$$$ and $$$a=[3,1,4,1,5,9,2,6,5,3,5]$$$, then:\n\nPrint the number of moves in the game and two numbers:\n\nThe first line contains an integer $$$t$$$ ($$$1 \\le t \\le 5000$$$) \u2014 the number of test cases in the input. The following are descriptions of the $$$t$$$ test cases.\n\nEach test case consists of two lines. The first line contains an integer $$$n$$$ ($$$1 \\le n \\le 1000$$$) \u2014 the number of candies. The second line contains a sequence of integers $$$a_1, a_2, \\dots, a_n$$$ ($$$1 \\le a_i \\le 1000$$$) \u2014 the sizes of candies in the order they are arranged from left to right.\n\nIt is guaranteed that the sum of the values of $$$n$$$ for all sets of input data in a test does not exceed $$$2\\cdot10^5$$$.\n\nFor each set of input data print three integers \u2014 the number of moves in the game and the required values $$$a$$$ and $$$b$$$."}, {"role": "assistant", "content": "implementation"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Pay attention to the non-standard memory limit in this problem.\n\nIn order to cut off efficient solutions from inefficient ones in this problem, the time limit is rather strict. Prefer to use compiled statically typed languages (e.g. C++). If you use Python, then submit solutions on PyPy. Try to write an efficient solution.\n\nThe array $$$a=[a_1, a_2, \\ldots, a_n]$$$ ($$$1 \\le a_i \\le n$$$) is given. Its element $$$a_i$$$ is called special if there exists a pair of indices $$$l$$$ and $$$r$$$ ($$$1 \\le l < r \\le n$$$) such that $$$a_i = a_l + a_{l+1} + \\ldots + a_r$$$. In other words, an element is called special if it can be represented as the sum of two or more consecutive elements of an array (no matter if they are special or not).\n\nPrint the number of special elements of the given array $$$a$$$.\n\nFor example, if $$$n=9$$$ and $$$a=[3,1,4,1,5,9,2,6,5]$$$, then the answer is $$$5$$$:\n\nPlease note that some of the elements of the array $$$a$$$ may be equal \u2014 if several elements are equal and special, then all of them should be counted in the answer.\n\nThe first line contains an integer $$$t$$$ ($$$1 \\le t \\le 1000$$$) \u2014 the number of test cases in the input. Then $$$t$$$ test cases follow.\n\nEach test case is given in two lines. The first line contains an integer $$$n$$$ ($$$1 \\le n \\le 8000$$$) \u2014 the length of the array $$$a$$$. The second line contains integers $$$a_1, a_2, \\dots, a_n$$$ ($$$1 \\le a_i \\le n$$$).\n\nIt is guaranteed that the sum of the values of $$$n$$$ for all test cases in the input does not exceed $$$8000$$$.\n\nPrint $$$t$$$ numbers \u2014 the number of special elements for each of the given arrays."}, {"role": "assistant", "content": "bruteforce, implementation, twopointers"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "For some binary string $$$s$$$ (i.e. each character $$$s_i$$$ is either '0' or '1'), all pairs of consecutive (adjacent) characters were written. In other words, all substrings of length $$$2$$$ were written. For each pair (substring of length $$$2$$$), the number of '1' (ones) in it was calculated.\n\nYou are given three numbers:\n\nFor example, for the string $$$s=$$$\"1110011110\", the following substrings would be written: \"11\", \"11\", \"10\", \"00\", \"01\", \"11\", \"11\", \"11\", \"10\". Thus, $$$n_0=1$$$, $$$n_1=3$$$, $$$n_2=5$$$.\n\nYour task is to restore any suitable binary string $$$s$$$ from the given values $$$n_0, n_1, n_2$$$. It is guaranteed that at least one of the numbers $$$n_0, n_1, n_2$$$ is greater than $$$0$$$. Also, it is guaranteed that a solution exists.\n\nThe first line contains an integer $$$t$$$ ($$$1 \\le t \\le 1000$$$) \u2014 the number of test cases in the input. Then test cases follow.\n\nEach test case consists of one line which contains three integers $$$n_0, n_1, n_2$$$ ($$$0 \\le n_0, n_1, n_2 \\le 100$$$; $$$n_0 + n_1 + n_2 > 0$$$). It is guaranteed that the answer for given $$$n_0, n_1, n_2$$$ exists.\n\nPrint $$$t$$$ lines. Each of the lines should contain a binary string corresponding to a test case. If there are several possible solutions, print any of them."}, {"role": "assistant", "content": "constructivealgorithms, dfsandsimilar, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "A permutation of length $$$n$$$ is an array $$$p=[p_1,p_2,\\dots,p_n]$$$, which contains every integer from $$$1$$$ to $$$n$$$ (inclusive) and, moreover, each number appears exactly once. For example, $$$p=[3,1,4,2,5]$$$ is a permutation of length $$$5$$$.\n\nFor a given number $$$n$$$ ($$$n \\ge 2$$$), find a permutation $$$p$$$ in which absolute difference (that is, the absolute value of difference) of any two neighboring (adjacent) elements is between $$$2$$$ and $$$4$$$, inclusive. Formally, find such permutation $$$p$$$ that $$$2 \\le |p_i - p_{i+1}| \\le 4$$$ for each $$$i$$$ ($$$1 \\le i < n$$$).\n\nPrint any such permutation for the given integer $$$n$$$ or determine that it does not exist.\n\nThe first line contains an integer $$$t$$$ ($$$1 \\le t \\le 100$$$) \u2014 the number of test cases in the input. Then $$$t$$$ test cases follow.\n\nEach test case is described by a single line containing an integer $$$n$$$ ($$$2 \\le n \\le 1000$$$).\n\nPrint $$$t$$$ lines. Print a permutation that meets the given requirements. If there are several such permutations, then print any of them. If no such permutation exists, print -1."}, {"role": "assistant", "content": "constructivealgorithms"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given two integers $$$n$$$ and $$$m$$$. You have to construct the array $$$a$$$ of length $$$n$$$ consisting of non-negative integers (i.e. integers greater than or equal to zero) such that the sum of elements of this array is exactly $$$m$$$ and the value $$$\\sum\\limits_{i=1}^{n-1} |a_i - a_{i+1}|$$$ is the maximum possible. Recall that $$$|x|$$$ is the absolute value of $$$x$$$.\n\nIn other words, you have to maximize the sum of absolute differences between adjacent (consecutive) elements. For example, if the array $$$a=[1, 3, 2, 5, 5, 0]$$$ then the value above for this array is $$$|1-3| + |3-2| + |2-5| + |5-5| + |5-0| = 2 + 1 + 3 + 0 + 5 = 11$$$. Note that this example doesn't show the optimal answer but it shows how the required value for some array is calculated.\n\nYou have to answer $$$t$$$ independent test cases.\n\nThe first line of the input contains one integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) \u2014 the number of test cases. Then $$$t$$$ test cases follow.\n\nThe only line of the test case contains two integers $$$n$$$ and $$$m$$$ ($$$1 \\le n, m \\le 10^9$$$) \u2014 the length of the array and its sum correspondingly.\n\nFor each test case, print the answer \u2014 the maximum possible value of $$$\\sum\\limits_{i=1}^{n-1} |a_i - a_{i+1}|$$$ for the array $$$a$$$ consisting of $$$n$$$ non-negative integers with the sum $$$m$$$.\n\nIn the first test case of the example, the only possible array is $$$[100]$$$ and the answer is obviously $$$0$$$.\n\nIn the second test case of the example, one of the possible arrays is $$$[2, 0]$$$ and the answer is $$$|2-0| = 2$$$.\n\nIn the third test case of the example, one of the possible arrays is $$$[0, 2, 0, 3, 0]$$$ and the answer is $$$|0-2| + |2-0| + |0-3| + |3-0| = 10$$$."}, {"role": "assistant", "content": "constructivealgorithms, greedy, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given two arrays $$$a$$$ and $$$b$$$ both consisting of $$$n$$$ positive (greater than zero) integers. You are also given an integer $$$k$$$.\n\nIn one move, you can choose two indices $$$i$$$ and $$$j$$$ ($$$1 \\le i, j \\le n$$$) and swap $$$a_i$$$ and $$$b_j$$$ (i.e. $$$a_i$$$ becomes $$$b_j$$$ and vice versa). Note that $$$i$$$ and $$$j$$$ can be equal or different (in particular, swap $$$a_2$$$ with $$$b_2$$$ or swap $$$a_3$$$ and $$$b_9$$$ both are acceptable moves).\n\nYour task is to find the maximum possible sum you can obtain in the array $$$a$$$ if you can do no more than (i.e. at most) $$$k$$$ such moves (swaps).\n\nYou have to answer $$$t$$$ independent test cases.\n\nThe first line of the input contains one integer $$$t$$$ ($$$1 \\le t \\le 200$$$) \u2014 the number of test cases. Then $$$t$$$ test cases follow.\n\nThe first line of the test case contains two integers $$$n$$$ and $$$k$$$ ($$$1 \\le n \\le 30; 0 \\le k \\le n$$$) \u2014 the number of elements in $$$a$$$ and $$$b$$$ and the maximum number of moves you can do. The second line of the test case contains $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$ ($$$1 \\le a_i \\le 30$$$), where $$$a_i$$$ is the $$$i$$$-th element of $$$a$$$. The third line of the test case contains $$$n$$$ integers $$$b_1, b_2, \\dots, b_n$$$ ($$$1 \\le b_i \\le 30$$$), where $$$b_i$$$ is the $$$i$$$-th element of $$$b$$$.\n\nFor each test case, print the answer \u2014 the maximum possible sum you can obtain in the array $$$a$$$ if you can do no more than (i.e. at most) $$$k$$$ swaps.\n\nIn the first test case of the example, you can swap $$$a_1 = 1$$$ and $$$b_2 = 4$$$, so $$$a=[4, 2]$$$ and $$$b=[3, 1]$$$.\n\nIn the second test case of the example, you don't need to swap anything.\n\nIn the third test case of the example, you can swap $$$a_1 = 1$$$ and $$$b_1 = 10$$$, $$$a_3 = 3$$$ and $$$b_3 = 10$$$ and $$$a_2 = 2$$$ and $$$b_4 = 10$$$, so $$$a=[10, 10, 10, 4, 5]$$$ and $$$b=[1, 9, 3, 2, 9]$$$.\n\nIn the fourth test case of the example, you cannot swap anything.\n\nIn the fifth test case of the example, you can swap arrays $$$a$$$ and $$$b$$$, so $$$a=[4, 4, 5, 4]$$$ and $$$b=[1, 2, 2, 1]$$$."}, {"role": "assistant", "content": "greedy, sortings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given a board of size $$$n \\times n$$$, where $$$n$$$ is odd (not divisible by $$$2$$$). Initially, each cell of the board contains one figure.\n\nIn one move, you can select exactly one figure presented in some cell and move it to one of the cells sharing a side or a corner with the current cell, i.e. from the cell $$$(i, j)$$$ you can move the figure to cells: \n\nOf course, you can not move figures to cells out of the board. It is allowed that after a move there will be several figures in one cell.\n\nYour task is to find the minimum number of moves needed to get all the figures into one cell (i.e. $$$n^2-1$$$ cells should contain $$$0$$$ figures and one cell should contain $$$n^2$$$ figures).\n\nYou have to answer $$$t$$$ independent test cases.\n\nThe first line of the input contains one integer $$$t$$$ ($$$1 \\le t \\le 200$$$) \u2014 the number of test cases. Then $$$t$$$ test cases follow.\n\nThe only line of the test case contains one integer $$$n$$$ ($$$1 \\le n < 5 \\cdot 10^5$$$) \u2014 the size of the board. It is guaranteed that $$$n$$$ is odd (not divisible by $$$2$$$).\n\nIt is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$5 \\cdot 10^5$$$ ($$$\\sum n \\le 5 \\cdot 10^5$$$).\n\nFor each test case print the answer \u2014 the minimum number of moves needed to get all the figures into one cell."}, {"role": "assistant", "content": "math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given an array $$$a$$$ of length $$$n$$$ consisting of zeros. You perform $$$n$$$ actions with this array: during the $$$i$$$-th action, the following sequence of operations appears:\n\nConsider the array $$$a$$$ of length $$$5$$$ (initially $$$a=[0, 0, 0, 0, 0]$$$). Then it changes as follows:\n\nYour task is to find the array $$$a$$$ of length $$$n$$$ after performing all $$$n$$$ actions. Note that the answer exists and unique.\n\nYou have to answer $$$t$$$ independent test cases.\n\nThe first line of the input contains one integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) \u2014 the number of test cases. Then $$$t$$$ test cases follow.\n\nThe only line of the test case contains one integer $$$n$$$ ($$$1 \\le n \\le 2 \\cdot 10^5$$$) \u2014 the length of $$$a$$$.\n\nIt is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$ ($$$\\sum n \\le 2 \\cdot 10^5$$$).\n\nFor each test case, print the answer \u2014 the array $$$a$$$ of length $$$n$$$ after performing $$$n$$$ actions described in the problem statement. Note that the answer exists and unique."}, {"role": "assistant", "content": "constructivealgorithms, datastructures, sortings"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given a garland consisting of $$$n$$$ lamps. States of the lamps are represented by the string $$$s$$$ of length $$$n$$$. The $$$i$$$-th character of the string $$$s_i$$$ equals '0' if the $$$i$$$-th lamp is turned off or '1' if the $$$i$$$-th lamp is turned on. You are also given a positive integer $$$k$$$.\n\nIn one move, you can choose one lamp and change its state (i.e. turn it on if it is turned off and vice versa).\n\nThe garland is called $$$k$$$-periodic if the distance between each pair of adjacent turned on lamps is exactly $$$k$$$. Consider the case $$$k=3$$$. Then garlands \"00010010\", \"1001001\", \"00010\" and \"0\" are good but garlands \"00101001\", \"1000001\" and \"01001100\" are not. Note that the garland is not cyclic, i.e. the first turned on lamp is not going after the last turned on lamp and vice versa.\n\nYour task is to find the minimum number of moves you need to make to obtain $$$k$$$-periodic garland from the given one.\n\nYou have to answer $$$t$$$ independent test cases.\n\nThe first line of the input contains one integer $$$t$$$ ($$$1 \\le t \\le 25~ 000$$$) \u2014 the number of test cases. Then $$$t$$$ test cases follow.\n\nThe first line of the test case contains two integers $$$n$$$ and $$$k$$$ ($$$1 \\le n \\le 10^6; 1 \\le k \\le n$$$) \u2014 the length of $$$s$$$ and the required period. The second line of the test case contains the string $$$s$$$ consisting of $$$n$$$ characters '0' and '1'.\n\nIt is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$10^6$$$ ($$$\\sum n \\le 10^6$$$).\n\nFor each test case, print the answer \u2014 the minimum number of moves you need to make to obtain $$$k$$$-periodic garland from the given one."}, {"role": "assistant", "content": "bruteforce, dp, greedy"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are playing one famous sandbox game with the three-dimensional world. The map of the world can be represented as a matrix of size $$$n \\times m$$$, where the height of the cell $$$(i, j)$$$ is $$$a_{i, j}$$$.\n\nYou are in the cell $$$(1, 1)$$$ right now and want to get in the cell $$$(n, m)$$$. You can move only down (from the cell $$$(i, j)$$$ to the cell $$$(i + 1, j)$$$) or right (from the cell $$$(i, j)$$$ to the cell $$$(i, j + 1)$$$). There is an additional restriction: if the height of the current cell is $$$x$$$ then you can move only to the cell with height $$$x+1$$$.\n\nBefore the first move you can perform several operations. During one operation, you can decrease the height of any cell by one. I.e. you choose some cell $$$(i, j)$$$ and assign (set) $$$a_{i, j} := a_{i, j} - 1$$$. Note that you can make heights less than or equal to zero. Also note that you can decrease the height of the cell $$$(1, 1)$$$.\n\nYour task is to find the minimum number of operations you have to perform to obtain at least one suitable path from the cell $$$(1, 1)$$$ to the cell $$$(n, m)$$$. It is guaranteed that the answer exists.\n\nYou have to answer $$$t$$$ independent test cases.\n\nThe first line of the input contains one integer $$$t$$$ ($$$1 \\le t \\le 100$$$) \u2014 the number of test cases. Then $$$t$$$ test cases follow.\n\nThe first line of the test case contains two integers $$$n$$$ and $$$m$$$ ($$$1 \\le n, m \\le 100$$$) \u2014 the number of rows and the number of columns in the map of the world. The next $$$n$$$ lines contain $$$m$$$ integers each, where the $$$j$$$-th integer in the $$$i$$$-th line is $$$a_{i, j}$$$ ($$$1 \\le a_{i, j} \\le 10^{15}$$$) \u2014 the height of the cell $$$(i, j)$$$.\n\nIt is guaranteed that the sum of $$$n$$$ (as well as the sum of $$$m$$$) over all test cases does not exceed $$$100$$$ ($$$\\sum n \\le 100; \\sum m \\le 100$$$).\n\nFor each test case, print the answer \u2014 the minimum number of operations you have to perform to obtain at least one suitable path from the cell $$$(1, 1)$$$ to the cell $$$(n, m)$$$. It is guaranteed that the answer exists."}, {"role": "assistant", "content": "bruteforce, dp"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Polycarp has spent the entire day preparing problems for you. Now he has to sleep for at least $$$a$$$ minutes to feel refreshed.\n\nPolycarp can only wake up by hearing the sound of his alarm. So he has just fallen asleep and his first alarm goes off in $$$b$$$ minutes.\n\nEvery time Polycarp wakes up, he decides if he wants to sleep for some more time or not. If he's slept for less than $$$a$$$ minutes in total, then he sets his alarm to go off in $$$c$$$ minutes after it is reset and spends $$$d$$$ minutes to fall asleep again. Otherwise, he gets out of his bed and proceeds with the day.\n\nIf the alarm goes off while Polycarp is falling asleep, then he resets his alarm to go off in another $$$c$$$ minutes and tries to fall asleep for $$$d$$$ minutes again.\n\nYou just want to find out when will Polycarp get out of his bed or report that it will never happen.\n\nPlease check out the notes for some explanations of the example.\n\nThe first line contains one integer $$$t$$$ ($$$1 \\le t \\le 1000$$$)\u00a0\u2014 the number of testcases.\n\nThe only line of each testcase contains four integers $$$a, b, c, d$$$ ($$$1 \\le a, b, c, d \\le 10^9$$$)\u00a0\u2014 the time Polycarp has to sleep for to feel refreshed, the time before the first alarm goes off, the time before every succeeding alarm goes off and the time Polycarp spends to fall asleep.\n\nFor each test case print one integer. If Polycarp never gets out of his bed then print -1. Otherwise, print the time it takes for Polycarp to get out of his bed.\n\nIn the first testcase Polycarp wakes up after $$$3$$$ minutes. He only rested for $$$3$$$ minutes out of $$$10$$$ minutes he needed. So after that he sets his alarm to go off in $$$6$$$ minutes and spends $$$4$$$ minutes falling asleep. Thus, he rests for $$$2$$$ more minutes, totaling in $$$3+2=5$$$ minutes of sleep. Then he repeats the procedure three more times and ends up with $$$11$$$ minutes of sleep. Finally, he gets out of his bed. He spent $$$3$$$ minutes before the first alarm and then reset his alarm four times. The answer is $$$3+4 \\cdot 6 = 27$$$.\n\nThe second example is almost like the first one but Polycarp needs $$$11$$$ minutes of sleep instead of $$$10$$$. However, that changes nothing because he gets $$$11$$$ minutes with these alarm parameters anyway.\n\nIn the third testcase Polycarp wakes up rested enough after the first alarm. Thus, the answer is $$$b=9$$$.\n\nIn the fourth testcase Polycarp wakes up after $$$5$$$ minutes. Unfortunately, he keeps resetting his alarm infinitely being unable to rest for even a single minute :("}, {"role": "assistant", "content": "math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "You are given a string $$$s$$$ such that each its character is either 1, 2, or 3. You have to choose the shortest contiguous substring of $$$s$$$ such that it contains each of these three characters at least once.\n\nA contiguous substring of string $$$s$$$ is a string that can be obtained from $$$s$$$ by removing some (possibly zero) characters from the beginning of $$$s$$$ and some (possibly zero) characters from the end of $$$s$$$.\n\nThe first line contains one integer $$$t$$$ ($$$1 \\le t \\le 20000$$$) \u2014 the number of test cases.\n\nEach test case consists of one line containing the string $$$s$$$ ($$$1 \\le |s| \\le 200000$$$). It is guaranteed that each character of $$$s$$$ is either 1, 2, or 3.\n\nThe sum of lengths of all strings in all test cases does not exceed $$$200000$$$.\n\nFor each test case, print one integer \u2014 the length of the shortest contiguous substring of $$$s$$$ containing all three types of characters at least once. If there is no such substring, print $$$0$$$ instead.\n\nConsider the example test:\n\nIn the first test case, the substring 123 can be used.\n\nIn the second test case, the substring 213 can be used.\n\nIn the third test case, the substring 1223 can be used.\n\nIn the fourth test case, the substring 3221 can be used.\n\nIn the fifth test case, there is no character 3 in $$$s$$$.\n\nIn the sixth test case, there is no character 1 in $$$s$$$.\n\nIn the seventh test case, the substring 3112 can be used."}, {"role": "assistant", "content": "binarysearch, dp, implementation, twopointers"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The statement of this problem is the same as the statement of problem C2. The only difference is that, in problem C1, $$$n$$$ is always even, and in C2, $$$n$$$ is always odd.\n\nYou are given a regular polygon with $$$2 \\cdot n$$$ vertices (it's convex and has equal sides and equal angles) and all its sides have length $$$1$$$. Let's name it as $$$2n$$$-gon.\n\nYour task is to find the square of the minimum size such that you can embed $$$2n$$$-gon in the square. Embedding $$$2n$$$-gon in the square means that you need to place $$$2n$$$-gon in the square in such way that each point which lies inside or on a border of $$$2n$$$-gon should also lie inside or on a border of the square.\n\nYou can rotate $$$2n$$$-gon and/or the square.\n\nThe first line contains a single integer $$$T$$$ ($$$1 \\le T \\le 200$$$)\u00a0\u2014 the number of test cases.\n\nNext $$$T$$$ lines contain descriptions of test cases\u00a0\u2014 one per line. Each line contains single even integer $$$n$$$ ($$$2 \\le n \\le 200$$$). Don't forget you need to embed $$$2n$$$-gon, not an $$$n$$$-gon.\n\nPrint $$$T$$$ real numbers\u00a0\u2014 one per test case. For each test case, print the minimum length of a side of the square $$$2n$$$-gon can be embedded in. Your answer will be considered correct if its absolute or relative error doesn't exceed $$$10^{-6}$$$."}, {"role": "assistant", "content": "binarysearch, geometry, math, ternarysearch"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "The statement of this problem is the same as the statement of problem C1. The only difference is that, in problem C1, $$$n$$$ is always even, and in C2, $$$n$$$ is always odd.\n\nYou are given a regular polygon with $$$2 \\cdot n$$$ vertices (it's convex and has equal sides and equal angles) and all its sides have length $$$1$$$. Let's name it as $$$2n$$$-gon.\n\nYour task is to find the square of the minimum size such that you can embed $$$2n$$$-gon in the square. Embedding $$$2n$$$-gon in the square means that you need to place $$$2n$$$-gon in the square in such way that each point which lies inside or on a border of $$$2n$$$-gon should also lie inside or on a border of the square.\n\nYou can rotate $$$2n$$$-gon and/or the square.\n\nThe first line contains a single integer $$$T$$$ ($$$1 \\le T \\le 200$$$)\u00a0\u2014 the number of test cases.\n\nNext $$$T$$$ lines contain descriptions of test cases\u00a0\u2014 one per line. Each line contains single odd integer $$$n$$$ ($$$3 \\le n \\le 199$$$). Don't forget you need to embed $$$2n$$$-gon, not an $$$n$$$-gon.\n\nPrint $$$T$$$ real numbers\u00a0\u2014 one per test case. For each test case, print the minimum length of a side of the square $$$2n$$$-gon can be embedded in. Your answer will be considered correct if its absolute or relative error doesn't exceed $$$10^{-6}$$$."}, {"role": "assistant", "content": "binarysearch, bruteforce, geometry, math"}]}
{"messages": [{"role": "system", "content": "You are a helpful assistant that assigns problem tags to problem statements."}, {"role": "user", "content": "Note that the memory limit is unusual.\n\nYou are given a multiset consisting of $$$n$$$ integers. You have to process queries of two types:\n\n$$$k$$$-th order statistics in the multiset is the $$$k$$$-th element in the sorted list of all elements of the multiset. For example, if the multiset contains elements $$$1$$$, $$$4$$$, $$$2$$$, $$$1$$$, $$$4$$$, $$$5$$$, $$$7$$$, and $$$k = 3$$$, then you have to find the $$$3$$$-rd element in $$$[1, 1, 2, 4, 4, 5, 7]$$$, which is $$$2$$$. If you try to delete an element which occurs multiple times in the multiset, only one occurence is removed. \n\nAfter processing all queries, print any number belonging to the multiset, or say that it is empty.\n\nThe first line contains two integers $$$n$$$ and $$$q$$$ ($$$1 \\le n, q \\le 10^6$$$) \u2014 the number of elements in the initial multiset and the number of queries, respectively.\n\nThe second line contains $$$n$$$ integers $$$a_1$$$, $$$a_2$$$, ..., $$$a_n$$$ ($$$1 \\le a_1 \\le a_2 \\le \\dots \\le a_n \\le n$$$) \u2014 the elements of the multiset.\n\nThe third line contains $$$q$$$ integers $$$k_1$$$, $$$k_2$$$, ..., $$$k_q$$$, each representing a query: \n\nIf the multiset is empty after all queries, print $$$0$$$.\n\nOtherwise, print any integer that belongs to the resulting multiset.\n\nIn the first example, all elements of the multiset are deleted.\n\nIn the second example, the elements $$$5$$$, $$$1$$$, $$$4$$$, $$$2$$$ are deleted (they are listed in chronological order of their removal).\n\nIn the third example, $$$6$$$ is not the only answer."}, {"role": "assistant", "content": "binarysearch, datastructures"}]}
